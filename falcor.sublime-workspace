{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"fl",
				"float3"
			],
			[
				"cmd_pr",
				"cmd_procedural"
			],
			[
				"cmd_pro",
				"cmd_procedural"
			],
			[
				"cmd_p",
				"cmd_procedural"
			],
			[
				"mes",
				"meshletSpecs"
			],
			[
				"me",
				"meshletSpecs"
			],
			[
				"is",
				"is_set"
			],
			[
				"S",
				"SceneBuilder"
			],
			[
				"u",
				"using"
			],
			[
				"un",
				"unique_ptr"
			],
			[
				"t",
				"templates"
			],
			[
				"e",
				"else"
			],
			[
				"tr",
				"trial"
			],
			[
				"tria",
				"trial_id"
			],
			[
				"te",
				"template"
			],
			[
				"tri",
				"trial"
			],
			[
				"TrialT",
				"TrialTemplate"
			],
			[
				"TrialTe",
				"TrialTemplate"
			],
			[
				"Errr",
				"Error"
			],
			[
				"re",
				"result"
			],
			[
				"exc",
				"exclude"
			],
			[
				"F",
				"FAILED"
			],
			[
				"se",
				"settings"
			],
			[
				"con",
				"conf"
			],
			[
				"lo",
				"log"
			],
			[
				"trial",
				"trial_id"
			],
			[
				"trial_",
				"trial_template"
			],
			[
				"o",
				"objects"
			],
			[
				"tas",
				"tasks"
			],
			[
				"T",
				"Trial"
			],
			[
				"s",
				"self"
			],
			[
				"_",
				"__repr__"
			],
			[
				"_tra",
				"_traceback"
			],
			[
				"v",
				"value"
			],
			[
				"va",
				"value"
			],
			[
				"stat",
				"status"
			],
			[
				"W",
				"WAITING"
			],
			[
				"Tr",
				"TrialStatus"
			],
			[
				"def",
				"default"
			],
			[
				"task",
				"task_id"
			],
			[
				"As",
				"AsyncResult"
			],
			[
				"i",
				"instance"
			],
			[
				"Tria",
				"TrialTemplateAdmin"
			],
			[
				"ena",
				"enabled"
			],
			[
				"na",
				"name"
			],
			[
				"de",
				"default_avatar_path"
			],
			[
				"us",
				"user"
			],
			[
				"d",
				"default_avatar_path"
			],
			[
				"j",
				"jpeg"
			],
			[
				"ini",
				"init_users_data"
			],
			[
				"r",
				"random"
			],
			[
				"c",
				"conf"
			],
			[
				"a",
				"avatar"
			],
			[
				"av",
				"avatar"
			],
			[
				"U",
				"User"
			],
			[
				"fir",
				"first_name"
			],
			[
				"sup",
				"superuser"
			],
			[
				"l",
				"last_name"
			],
			[
				"thu",
				"thumbnailer"
			],
			[
				"templa",
				"templates"
			],
			[
				"E",
				"Enum"
			],
			[
				"Bu",
				"Buffer"
			],
			[
				"UIN",
				"UINT32_MAX"
			],
			[
				"mp",
				"mpComputeRasterizerPass"
			],
			[
				"Ras",
				"Rasterizer"
			],
			[
				"LLO",
				"LLOG_WRN"
			],
			[
				"pTe",
				"pTexture"
			],
			[
				"tex",
				"texture"
			],
			[
				"f",
				"false"
			],
			[
				"ba",
				"back"
			],
			[
				"mate",
				"materialResolveData"
			],
			[
				"mpV",
				"mpVirtualPagesDataBuffer"
			],
			[
				"ui",
				"uint8_t"
			],
			[
				"virt",
				"virtualTexturesData"
			],
			[
				"res",
				"resize"
			],
			[
				"virtu",
				"virtualPagesData"
			],
			[
				"mip",
				"mipBases"
			],
			[
				"pT",
				"pTex"
			],
			[
				"uin",
				"uint8_t"
			],
			[
				"k",
				"kLtxPageSize"
			],
			[
				"set",
				"setBuffer"
			],
			[
				"mIs",
				"mIsSparse"
			],
			[
				"kEx",
				"kExtendedHandlesDataName"
			],
			[
				"st",
				"std"
			],
			[
				"isS",
				"isSparse"
			],
			[
				"to",
				"totalPagesToUpdateCountAligned"
			],
			[
				"h",
				"header"
			],
			[
				"LLOG",
				"LLOG_WRN"
			],
			[
				"cu",
				"currentPageOffset"
			],
			[
				"L",
				"LTX_Bitmap"
			],
			[
				"siz",
				"size_t"
			],
			[
				"FI",
				"FILE"
			],
			[
				"p",
				"pLtxBitmap"
			],
			[
				"kP",
				"kOnePageTailData"
			],
			[
				"getM",
				"getMipTailStart"
			],
			[
				"Te",
				"Texture"
			],
			[
				"co",
				"continue"
			],
			[
				"z",
				"size"
			],
			[
				"tail",
				"tail_data"
			],
			[
				"pSc",
				"pScratchBufferData"
			],
			[
				"m",
				"mipTailStart"
			],
			[
				"Con",
				"Constant"
			],
			[
				"mem",
				"memset"
			],
			[
				"ta",
				"tangents"
			],
			[
				"non-",
				"non-indexed"
			],
			[
				"mM",
				"mMesh"
			],
			[
				"inde",
				"indexCount"
			],
			[
				"ver",
				"vertices"
			],
			[
				"mMes",
				"mMeshletGroups"
			],
			[
				"mesh",
				"meshletsMemoryInBytes"
			],
			[
				"meshl",
				"meshLightCount"
			],
			[
				"LL",
				"LLOG_INF"
			],
			[
				"meshle",
				"meshletSpec"
			],
			[
				"meshlet",
				"meshletSpecs"
			],
			[
				"prim",
				"primitiveIndices"
			],
			[
				"Mesh",
				"MeshletDraw"
			],
			[
				"mMesh",
				"mMeshletGroups"
			],
			[
				"Meshl",
				"Meshlet"
			],
			[
				"kInval",
				"kInvalidMeshletID"
			],
			[
				"kI",
				"kInvalidExportedID"
			],
			[
				"local_",
				"local_vert_count"
			],
			[
				"mesh_",
				"mesh_start_index"
			],
			[
				"bre",
				"break"
			],
			[
				"la",
				"last_index"
			],
			[
				"gr",
				"groupSpec"
			],
			[
				"mMeshlet",
				"mMeshletGroups"
			],
			[
				"Genet",
				"Generating"
			],
			[
				"gene",
				"generateMeshlets"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/Falcor/Scene/MeshletBuilder.cpp",
			"settings":
			{
				"buffer_size": 3732,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"right_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAACvBgAALyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgogIyBDb3B5cmlnaHQgKGMpIDIwMjAsIE5WSURJQSBDT1JQT1JBVElPTi4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KICMKICMgUmVkaXN0cmlidXRpb24gYW5kIHVzZSBpbiBzb3VyY2UgYW5kIGJpbmFyeSBmb3Jtcywgd2l0aCBvciB3aXRob3V0CiAjIG1vZGlmaWNhdGlvbiwgYXJlIHBlcm1pdHRlZCBwcm92aWRlZCB0aGF0IHRoZSBmb2xsb3dpbmcgY29uZGl0aW9ucwogIyBhcmUgbWV0OgogIyAgKiBSZWRpc3RyaWJ1dGlvbnMgb2Ygc291cmNlIGNvZGUgbXVzdCByZXRhaW4gdGhlIGFib3ZlIGNvcHlyaWdodAogIyAgICBub3RpY2UsIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIuCiAjICAqIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0CiAjICAgIG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbiB0aGUKICMgICAgZG9jdW1lbnRhdGlvbiBhbmQvb3Igb3RoZXIgbWF0ZXJpYWxzIHByb3ZpZGVkIHdpdGggdGhlIGRpc3RyaWJ1dGlvbi4KICMgICogTmVpdGhlciB0aGUgbmFtZSBvZiBOVklESUEgQ09SUE9SQVRJT04gbm9yIHRoZSBuYW1lcyBvZiBpdHMKICMgICAgY29udHJpYnV0b3JzIG1heSBiZSB1c2VkIHRvIGVuZG9yc2Ugb3IgcHJvbW90ZSBwcm9kdWN0cyBkZXJpdmVkCiAjICAgIGZyb20gdGhpcyBzb2Z0d2FyZSB3aXRob3V0IHNwZWNpZmljIHByaW9yIHdyaXR0ZW4gcGVybWlzc2lvbi4KICMKICMgVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgYGBBUyBJUycnIEFORCBBTlkKICMgRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUKICMgSU1QTElFRCBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSBBTkQgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSCiAjIFBVUlBPU0UgQVJFIERJU0NMQUlNRUQuICBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQ09QWVJJR0hUIE9XTkVSIE9SCiAjIENPTlRSSUJVVE9SUyBCRSBMSUFCTEUgRk9SIEFOWSBESVJFQ1QsIElORElSRUNULCBJTkNJREVOVEFMLCBTUEVDSUFMLAogIyBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sCiAjIFBST0NVUkVNRU5UIE9GIFNVQlNUSVRVVEUgR09PRFMgT1IgU0VSVklDRVM7IExPU1MgT0YgVVNFLCBEQVRBLCBPUgogIyBQUk9GSVRTOyBPUiBCVVNJTkVTUyBJTlRFUlJVUFRJT04pIEhPV0VWRVIgQ0FVU0VEIEFORCBPTiBBTlkgVEhFT1JZCiAjIE9GIExJQUJJTElUWSwgV0hFVEhFUiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVAogIyAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOIEFOWSBXQVkgT1VUIE9GIFRIRSBVU0UKICMgT0YgVEhJUyBTT0ZUV0FSRSwgRVZFTiBJRiBBRFZJU0VEIE9GIFRIRSBQT1NTSUJJTElUWSBPRiBTVUNIIERBTUFHRS4KICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw",
					"AQAAAAAAAAABAAAArwYAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAAA"
				],
				[
					8,
					5,
					"left_delete",
					null,
					"BQAAAB0AAAAAAAAAHQAAAAAAAAABAAAARRwAAAAAAAAAHAAAAAAAAAABAAAAThsAAAAAAAAAGwAAAAAAAAABAAAARRoAAAAAAAAAGgAAAAAAAAABAAAAQxkAAAAAAAAAGQAAAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAAHgAAAAAAAAAeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "MESHLET"
					},
					"BwAAABkAAAAAAAAAGgAAAAAAAAAAAAAAGgAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAHQAAAAAAAAAAAAAAHQAAAAAAAAAeAAAAAAAAAAAAAAAeAAAAAAAAAB8AAAAAAAAAAAAAAB8AAAAAAAAAIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQAAAAAAAAAZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"paste",
					null,
					"AgAAADMAAAAAAAAAVQAAAAAAAAAAAAAAVQAAAAAAAABVAAAAAAAAACAAAABTUkNfRkFMQ09SX1NDRU5FX1NDRU5FQlVJTERFUl9IXw",
					"AQAAAAAAAAABAAAAMwAAAAAAAABTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"right_delete",
					null,
					"AQAAAHkAAAAAAAAAeQAAAAAAAAAvAAAAI2luY2x1ZGUgIkZhbGNvci9VdGlscy9TY3JpcHRpbmcvRGljdGlvbmFyeS5oIgo",
					"AQAAAAAAAAABAAAAeQAAAAAAAACoAAAAAAAAAAAAAAAAAAAA"
				],
				[
					24,
					3,
					"left_delete",
					null,
					"AwAAAJ8AAAAAAAAAnwAAAAAAAADIAAAAI2luY2x1ZGUgIlNjZW5lLmgiCiNpbmNsdWRlICJTY2VuZUNhY2hlLmgiCiNpbmNsdWRlICJUcmFuc2Zvcm0uaCIKI2luY2x1ZGUgIlRyaWFuZ2xlTWVzaC5oIgojaW5jbHVkZSAiTWF0ZXJpYWwvTWF0ZXJpYWxUZXh0dXJlTG9hZGVyLmgiCiNpbmNsdWRlICJNYXRlcmlhbFgvTWF0ZXJpYWxYLmgiCiNpbmNsdWRlICJWZXJ0ZXhBdHRyaWIuc2xhbmdoIgqeAAAAAAAAAJ4AAAAAAAAAAQAAAAqdAAAAAAAAAJ0AAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAnwAAAAAAAABnAQAAAAAAAAAAAAAAAAAA"
				],
				[
					26,
					14,
					"left_delete",
					null,
					"DgAAAL8AAAAAAAAAvwAAAAAAAAABAAAAO74AAAAAAAAAvgAAAAAAAAABAAAAZb0AAAAAAAAAvQAAAAAAAAABAAAAY7wAAAAAAAAAvAAAAAAAAAABAAAAabsAAAAAAAAAuwAAAAAAAAABAAAAdroAAAAAAAAAugAAAAAAAAABAAAAZbkAAAAAAAAAuQAAAAAAAAABAAAARLgAAAAAAAAAuAAAAAAAAAABAAAAILcAAAAAAAAAtwAAAAAAAAABAAAAc7YAAAAAAAAAtgAAAAAAAAABAAAAc7UAAAAAAAAAtQAAAAAAAAABAAAAYbQAAAAAAAAAtAAAAAAAAAABAAAAbLMAAAAAAAAAswAAAAAAAAABAAAAY7IAAAAAAAAAsgAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAQHRA"
				],
				[
					27,
					1,
					"left_delete",
					null,
					"AQAAALEAAAAAAAAAsQAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAsgAAAAAAAACyAAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJ4AAAAAAAAAnwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAQGRA"
				],
				[
					34,
					5,
					"left_delete",
					null,
					"BQAAAMYAAAAAAAAAxgAAAAAAAAABAAAAZcUAAAAAAAAAxQAAAAAAAAABAAAAbsQAAAAAAAAAxAAAAAAAAAABAAAAZcMAAAAAAAAAwwAAAAAAAAABAAAAY8IAAAAAAAAAwgAAAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAAxwAAAAAAAADHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "Meshlet"
					},
					"BwAAAMIAAAAAAAAAwwAAAAAAAAAAAAAAwwAAAAAAAADEAAAAAAAAAAAAAADEAAAAAAAAAMUAAAAAAAAAAAAAAMUAAAAAAAAAxgAAAAAAAAAAAAAAxgAAAAAAAADHAAAAAAAAAAAAAADHAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAyQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwgAAAAAAAADCAAAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"paste",
					null,
					"AgAAAAIBAAAAAAAAEAEAAAAAAAAAAAAAEAEAAAAAAAAQAQAAAAAAAAwAAABTY2VuZUJ1aWxkZXI",
					"AQAAAAAAAAABAAAAAgEAAAAAAAAOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					3,
					"left_delete",
					null,
					"AwAAABgBAAAAAAAAGAEAAAAAAAAQAQAAc3RhdGljIGNvbnN0IHVpbnQzMl90IGtJbnZhbGlkTm9kZSA9IEFuaW1hdGFibGU6OmtJbnZhbGlkTm9kZTsKICAgIHN0YXRpYyBjb25zdCB1aW50MzJfdCBrSW52YWxpZEV4cG9ydGVkSUQgPSBBbmltYXRhYmxlOjprSW52YWxpZE5vZGU7ICAvLy88IExhcmdlc3QgdWludDMyIHZhbHVlICgtMSkKICAgIHN0YXRpYyBjb25zdCB1aW50MzJfdCBrSW52YWxpZE1lc2hsZXRJRCA9IEFuaW1hdGFibGU6OmtJbnZhbGlkTm9kZTsgIC8vLzwgTGFyZ2VzdCB1aW50MzIgdmFsdWUgKC0xKQoUAQAAAAAAABQBAAAAAAAABAAAACAgICATAQAAAAAAABMBAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAGAEAAAAAAAAoAgAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "using"
					},
					"BgAAAKkzAAAAAAAAqjMAAAAAAAAAAAAAqjMAAAAAAACqMwAAAAAAAAcAAABzdHJ1Y3QgqjMAAAAAAACrMwAAAAAAAAAAAACrMwAAAAAAAKwzAAAAAAAAAAAAAKwzAAAAAAAArTMAAAAAAAAAAAAArTMAAAAAAACuMwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsDMAAAAAAACpMwAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK4zAAAAAAAArzMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArjMAAAAAAACuMwAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAALozAAAAAAAAuzMAAAAAAAAAAAAAuzMAAAAAAAC8MwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAujMAAAAAAAC6MwAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": " Scn"
					},
					"BAAAALwzAAAAAAAAvTMAAAAAAAAAAAAAvTMAAAAAAAC+MwAAAAAAAAAAAAC+MwAAAAAAAL8zAAAAAAAAAAAAAL8zAAAAAAAAwDMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvDMAAAAAAAC8MwAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"left_delete",
					null,
					"AQAAAL8zAAAAAAAAvzMAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAwDMAAAAAAADAMwAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "ene"
					},
					"AwAAAL8zAAAAAAAAwDMAAAAAAAAAAAAAwDMAAAAAAADBMwAAAAAAAAAAAADBMwAAAAAAAMIzAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvzMAAAAAAAC/MwAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert_completion",
					{
						"completion": "SceneBuilder",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "SceneBuilder"
					},
					"AgAAAL0zAAAAAAAAvTMAAAAAAAAFAAAAU2NlbmW9MwAAAAAAAMkzAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwjMAAAAAAADCMwAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "::Me"
					},
					"BAAAAMkzAAAAAAAAyjMAAAAAAAAAAAAAyjMAAAAAAADLMwAAAAAAAAAAAADLMwAAAAAAAMwzAAAAAAAAAAAAAMwzAAAAAAAAzTMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyTMAAAAAAADJMwAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAM0zAAAAAAAAzjMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzTMAAAAAAADNMwAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "hletS"
					},
					"BQAAAM4zAAAAAAAAzzMAAAAAAAAAAAAAzzMAAAAAAADQMwAAAAAAAAAAAADQMwAAAAAAANEzAAAAAAAAAAAAANEzAAAAAAAA0jMAAAAAAAAAAAAA0jMAAAAAAADTMwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzjMAAAAAAADOMwAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert_completion",
					{
						"completion": "MeshletSpec",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "MeshletSpec"
					},
					"AgAAAMszAAAAAAAAyzMAAAAAAAAIAAAATWVzaGxldFPLMwAAAAAAANYzAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0zMAAAAAAADTMwAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"left_delete",
					null,
					"AQAAANYzAAAAAAAA1jMAAAAAAADgAQAAIHsKICAgICAgICBNZXNobGV0VHlwZSB0eXBlID0gTWVzaGxldFR5cGU6OlRyaWFuZ2xlczsKICAgICAgICBzdGQ6OnZlY3Rvcjx1aW50MzJfdD4gdmVydGljZXM7ICAgICAgICAgICAgIC8vLzwgTWVzaGxldCB2ZXJ0aWNlcyB0aGF0IHBvaW50IHRvIGdsb2JhbCBzY2VuZSB2ZXJ0ZXggZGF0YS4KICAgICAgICBzdGQ6OnZlY3Rvcjx1aW50OF90PiAgaW5kaWNlczsgICAgICAgICAgICAgIC8vLzwgSW5kaWNlcyBvZiBhIHByaW1pdGl2ZSB2ZXJpY2VzLiBWZWN0b3Igc2l6ZSBzaG91bGQgYmUgZXF1YWwgdG8gaW5kZXhDb3VudC4KICAgICAgICBzdGQ6OnZlY3Rvcjx1aW50MzJfdD4gcHJpbWl0aXZlSW5kaWNlczsgICAgIC8vLzwgUHJpbWl0aXZlIGluZGljZXMgaW4gYSBnbG9iYWwgc2NlbmUgYnVmZmVyLiBJdCdzIHVzZWQgaW4gY2FzZSBpZiBtZXNobGV0IHByaW1pdGl2ZXMgb3JkZXIgZGlmZmVycyBmcm9tIG9yaWdpbmFsIG1lc2guCiAgICB9",
					"AQAAAAAAAAABAAAA1jMAAAAAAAC2NQAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"left_delete",
					null,
					"AQAAAN0zAAAAAAAA3TMAAAAAAACmCAAALyoqIFByZS1wcm9jZXNzZWQgbWVzaCBkYXRhLgogICAgICAgIFRoaXMgZGF0YSBpcyBmb3JtYXR0ZWQgc3VjaCB0aGF0IGl0IGNhbiBkaXJlY3RseSBiZSBjb3BpZWQKICAgICAgICB0byB0aGUgZ2xvYmFsIHNjZW5lIGJ1ZmZlcnMuCiAgICAqLwogICAgc3RydWN0IFByb2Nlc3NlZE1lc2ggewogICAgICAgIHN0ZDo6c3RyaW5nIG5hbWU7CiAgICAgICAgVmFvOjpUb3BvbG9neSB0b3BvbG9neSA9IFZhbzo6VG9wb2xvZ3k6OlVuZGVmaW5lZDsKICAgICAgICBNYXRlcmlhbDo6U2hhcmVkUHRyIHBNYXRlcmlhbDsKICAgICAgICB1aW50MzJfdCBza2VsZXRvbk5vZGVJZCA9IGtJbnZhbGlkTm9kZTsgLy8vPCBGb3J3YXJkZWQgZnJvbSBNZXNoIHN0cnVjdC4KCiAgICAgICAgdWludDY0X3QgaW5kZXhDb3VudCA9IDA7ICAgICAgICAgICAgLy8vPCBOdW1iZXIgb2YgaW5kaWNlcywgb3IgemVybyBpZiBub24taW5kZXhlZC4KICAgICAgICBib29sIHVzZTE2Qml0SW5kaWNlcyA9IGZhbHNlOyAgICAgICAvLy88IFRydWUgaWYgdGhlIGluZGljZXMgYXJlIGluIDE2LWJpdCBmb3JtYXQuCiAgICAgICAgYm9vbCBpc0Zyb250RmFjZUNXID0gZmFsc2U7ICAgICAgICAgLy8vPCBJbmRpY2F0ZSB3aGV0aGVyIGZyb250LWZhY2luZyBzaWRlIGhhcyBjbG9ja3dpc2Ugd2luZGluZyBpbiBvYmplY3Qgc3BhY2UuCiAgICAgICAgc3RkOjp2ZWN0b3I8dWludDMyX3Q+IGluZGV4RGF0YTsgICAgLy8vPCBWZXJ0ZXggaW5kaWNlcyBpbiBlaXRoZXIgMzItYml0IG9yIDE2LWJpdCBmb3JtYXQgcGFja2VkIHRpZ2h0bHksIG9yIGVtcHR5IGlmIG5vbi1pbmRleGVkLgogICAgICAgIHN0ZDo6dmVjdG9yPFN0YXRpY1ZlcnRleERhdGE+IHN0YXRpY0RhdGE7CiAgICAgICAgc3RkOjp2ZWN0b3I8U2tpbm5pbmdWZXJ0ZXhEYXRhPiBza2lubmluZ0RhdGE7CgogICAgICAgIHN0ZDo6dmVjdG9yPE1lc2hsZXRTcGVjPiBtZXNobGV0U3BlY3M7CiAgICB9OwoKICAgIHVzaW5nIE1lc2hBdHRyaWJ1dGVJbmRpY2VzID0gc3RkOjp2ZWN0b3I8TWVzaDo6VmVydGV4QXR0cmlidXRlSW5kaWNlcz47CgogICAgLyoqIEN1cnZlIGRlc2NyaXB0aW9uLgogICAgKi8KICAgIHN0cnVjdCBDdXJ2ZSB7CiAgICAgICAgdGVtcGxhdGU8dHlwZW5hbWUgVD4KICAgICAgICBzdHJ1Y3QgQXR0cmlidXRlIHsKICAgICAgICAgICAgY29uc3QgVCogcERhdGEgPSBudWxscHRyOwogICAgICAgIH07CgogICAgICAgIHN0ZDo6c3RyaW5nIG5hbWU7ICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8vPCBUaGUgY3VydmUncyBuYW1lLgogICAgICAgIHVpbnQzMl90IGRlZ3JlZSA9IDE7ICAgICAgICAgICAgICAgICAgICAgICAgLy8vPCBQb2x5bm9taWFsIGRlZ3JlZSBvZiB0aGUgY3VydmU7IGxpbmVhciAoMSkgYnkgZGVmYXVsdC4KICAgICAgICB1aW50MzJfdCB2ZXJ0ZXhDb3VudCA9IDA7ICAgICAgICAgICAgICAgICAgIC8vLzwgVGhlIG51bWJlciBvZiB2ZXJ0aWNlcy4KICAgICAgICB1aW50MzJfdCBpbmRleENvdW50ID0gMDsgICAgICAgICAgICAgICAgICAgIC8vLzwgVGhlIG51bWJlciBvZiBpbmRpY2VzIChpLmUuLCB0dWJlIHNlZ21lbnRzKS4KICAgICAgICBjb25zdCB1aW50MzJfdCogcEluZGljZXMgPSBudWxscHRyOyAgICAgICAgIC8vLzwgQXJyYXkgb2YgaW5kaWNlcy4gVGhlIGVsZW1lbnQgY291bnQgbXVzdCBtYXRjaCBgaW5kZXhDb3VudGAuIFRoaXMgZmllbGQgaXMgcmVxdWlyZWQuCiAgICAgICAgTWF0ZXJpYWw6OlNoYXJlZFB0ciBwTWF0ZXJpYWw7ICAgICAgICAgICAgICAvLy88IFRoZSBjdXJ2ZSdzIG1hdGVyaWFsLiBDYW4ndCBiZSBudWxscHRyLgoKICAgICAgICBBdHRyaWJ1dGU8ZmxvYXQzPiBwb3NpdGlvbnM7ICAgICAgICAgICAgICAgIC8vLzwgQXJyYXkgb2YgdmVydGV4IHBvc2l0aW9ucy4gVGhpcyBmaWVsZCBpcyByZXF1aXJlZC4KICAgICAgICBBdHRyaWJ1dGU8ZmxvYXQ+IHJhZGl1czsgICAgICAgICAgICAgICAgICAgIC8vLzwgQXJyYXkgb2Ygc3BoZXJlIHJhZGl1cy4gVGhpcyBmaWVsZCBpcyByZXF1aXJlZC4KICAgICAgICBBdHRyaWJ1dGU8ZmxvYXQyPiB0ZXhDcmRzOyAgICAgICAgICAgICAgICAgIC8vLzwgQXJyYXkgb2YgdmVydGV4IHRleHR1cmUgY29vcmRpbmF0ZXMuIFRoaXMgZmllbGQgaXMgb3B0aW9uYWwuIElmIHNldCB0byBudWxscHRyLCBhbGwgdGV4Q3JkcyB3aWxsIGJlIHNldCB0byAoMCwwKS4KICAgIH07",
					"AQAAAAAAAAABAAAA3TMAAAAAAACDPAAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					3,
					"left_delete",
					null,
					"",
					"AQAAAAAAAAABAAAAozMAAAAAAAAUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					4,
					"left_delete",
					null,
					"BAAAAE4BAAAAAAAATgEAAAAAAACrAgAAICAgIC8qKiBQcmUtcHJvY2Vzc2VkIGN1cnZlIGRhdGEuCiAgICAgICAgVGhpcyBkYXRhIGlzIGZvcm1hdHRlZCBzdWNoIHRoYXQgaXQgY2FuIGRpcmVjdGx5IGJlIGNvcGllZAogICAgICAgIHRvIHRoZSBnbG9iYWwgc2NlbmUgYnVmZmVycy4KICAgICovCiAgICBzdHJ1Y3QgUHJvY2Vzc2VkQ3VydmUgewogICAgICAgIHN0ZDo6c3RyaW5nIG5hbWU7CiAgICAgICAgVmFvOjpUb3BvbG9neSB0b3BvbG9neSA9IFZhbzo6VG9wb2xvZ3k6OkxpbmVTdHJpcDsKICAgICAgICBNYXRlcmlhbDo6U2hhcmVkUHRyIHBNYXRlcmlhbDsKCiAgICAgICAgc3RkOjp2ZWN0b3I8dWludDMyX3Q+IGluZGV4RGF0YTsKICAgICAgICBzdGQ6OnZlY3RvcjxTdGF0aWNDdXJ2ZVZlcnRleERhdGE+IHN0YXRpY0RhdGE7CiAgICB9OwoKICAgIHN0cnVjdCBOb2RlIHsKICAgICAgICBzdGQ6OnN0cmluZyBuYW1lOwogICAgICAgIGZsb2F0NHg0IHRyYW5zZm9ybTsKICAgICAgICBmbG9hdDR4NCBtZXNoQmluZDsgICAgICAgICAgLy8gRm9yIHNraW5uZWQgbWVzaGVzLiBXb3JsZCB0cmFuc2Zvcm0gYXQgYmluZCB0aW1lLgogICAgICAgIGZsb2F0NHg0IGxvY2FsVG9CaW5kUG9zZTsgICAvLyBGb3IgYm9uZXMuIEludmVyc2UgYmluZCB0cmFuc2Zvcm0uCiAgICAgICAgdWludDMyX3QgcGFyZW50ID0ga0ludmFsaWROb2RlOwogICAgfTtNAQAAAAAAAE0BAAAAAAAAAQAAAApMAQAAAAAAAEwBAAAAAAAAAQAAAApIAQAAAAAAAEgBAAAAAAAABAAAACAgICA",
					"AQAAAAAAAAABAAAA+QMAAAAAAABOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					2,
					"left_delete",
					null,
					"AgAAAEgBAAAAAAAASAEAAAAAAACzAAAACgogICAgdXNpbmcgSW5zdGFuY2VNYXRyaWNlcyA9IHN0ZDo6dmVjdG9yPGZsb2F0NHg0PjsKCiAgICBzdGQ6OnNoYXJlZF9wdHI8RGV2aWNlPiBkZXZpY2UoKSB7IHJldHVybiBtcERldmljZTsgfTsKICAgIHN0ZDo6c2hhcmVkX3B0cjxEZXZpY2U+IGRldmljZSgpIGNvbnN0IHsgcmV0dXJuIG1wRGV2aWNlOyB9OwpHAQAAAAAAAEcBAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAA+wEAAAAAAABIAQAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "#includ"
					},
					"BwAAAJ4AAAAAAAAAnwAAAAAAAAAAAAAAnwAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKEAAAAAAAAAAAAAAKEAAAAAAAAAogAAAAAAAAAAAAAAogAAAAAAAACjAAAAAAAAAAAAAACjAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAApQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAKUAAAAAAAAApgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQAAAAAAAAClAAAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKYAAAAAAAAApwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgAAAAAAAACmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAKcAAAAAAAAAqQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwAAAAAAAACnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "F"
					},
					"AQAAAKgAAAAAAAAAqQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAAAAAAAAACoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert_completion",
					{
						"completion": "Falcor",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Falcor"
					},
					"AgAAAKgAAAAAAAAAqAAAAAAAAAABAAAARqgAAAAAAAAArgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQAAAAAAAACpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "/S"
					},
					"AgAAAK4AAAAAAAAArwAAAAAAAAAAAAAArwAAAAAAAACwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgAAAAAAAACuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"insert_completion",
					{
						"completion": "Scene",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Scene"
					},
					"AgAAAK8AAAAAAAAArwAAAAAAAAABAAAAU68AAAAAAAAAtAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsAAAAAAAAACwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "/S"
					},
					"AgAAALQAAAAAAAAAtQAAAAAAAAAAAAAAtQAAAAAAAAC2AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtAAAAAAAAAC0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"insert_completion",
					{
						"completion": "SceneBuilder",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "SceneBuilder"
					},
					"AgAAALUAAAAAAAAAtQAAAAAAAAABAAAAU7UAAAAAAAAAwQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgAAAAAAAAC2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": "/j"
					},
					"AgAAAMEAAAAAAAAAwgAAAAAAAAAAAAAAwgAAAAAAAADDAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQAAAAAAAADBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					2,
					"left_delete",
					null,
					"AgAAAMIAAAAAAAAAwgAAAAAAAAABAAAAasEAAAAAAAAAwQAAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAwwAAAAAAAADDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": ".h"
					},
					"AgAAAMEAAAAAAAAAwgAAAAAAAAAAAAAAwgAAAAAAAADDAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQAAAAAAAADBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "Scene"
					},
					"BQAAAAANAAAAAAAAAQ0AAAAAAAAAAAAAAQ0AAAAAAAACDQAAAAAAAAAAAAACDQAAAAAAAAMNAAAAAAAAAAAAAAMNAAAAAAAABA0AAAAAAAAAAAAABA0AAAAAAAAFDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAA0AAAAAAAAADQAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "Builder::"
					},
					"CQAAAAUNAAAAAAAABg0AAAAAAAAAAAAABg0AAAAAAAAHDQAAAAAAAAAAAAAHDQAAAAAAAAgNAAAAAAAAAAAAAAgNAAAAAAAACQ0AAAAAAAAAAAAACQ0AAAAAAAAKDQAAAAAAAAAAAAAKDQAAAAAAAAsNAAAAAAAAAAAAAAsNAAAAAAAADA0AAAAAAAAAAAAADA0AAAAAAAANDQAAAAAAAAAAAAANDQAAAAAAAA4NAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQ0AAAAAAAAFDQAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "generate"
					},
					"CQAAAOkMAAAAAAAA6gwAAAAAAAAAAAAA6gwAAAAAAADqDAAAAAAAABAAAABhZGRQcm9jZXNzZWRNZXNo6gwAAAAAAADrDAAAAAAAAAAAAADrDAAAAAAAAOwMAAAAAAAAAAAAAOwMAAAAAAAA7QwAAAAAAAAAAAAA7QwAAAAAAADuDAAAAAAAAAAAAADuDAAAAAAAAO8MAAAAAAAAAAAAAO8MAAAAAAAA8AwAAAAAAAAAAAAA8AwAAAAAAADxDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6QwAAAAAAAD5DAAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "Meshlets"
					},
					"CAAAAPEMAAAAAAAA8gwAAAAAAAAAAAAA8gwAAAAAAADzDAAAAAAAAAAAAADzDAAAAAAAAPQMAAAAAAAAAAAAAPQMAAAAAAAA9QwAAAAAAAAAAAAA9QwAAAAAAAD2DAAAAAAAAAAAAAD2DAAAAAAAAPcMAAAAAAAAAAAAAPcMAAAAAAAA+AwAAAAAAAAAAAAA+AwAAAAAAAD5DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QwAAAAAAADxDAAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					2,
					"left_delete",
					null,
					"AgAAAO8BAAAAAAAA7wEAAAAAAAAvCgAAICAgIC8qKiBDcmVhdGUgYSBuZXcgYnVpbGRlciBhbmQgaW1wb3J0IGEgc2NlbmUvbW9kZWwgZmlsZQogICAgICAgIFxwYXJhbSBmaWxlbmFtZSBUaGUgZmlsZW5hbWUgdG8gbG9hZAogICAgICAgIFxwYXJhbSBmbGFncyBUaGUgYnVpbGQgZmxhZ3MKICAgICAgICBccGFyYW0gaW5zdGFuY2VzIEEgbGlzdCBvZiBpbnN0YW5jZSBtYXRyaWNlcyB0byBsb2FkLiBUaGlzIGlzIG9wdGlvbmFsLCBieSBkZWZhdWx0IGEgc2luZ2xlIGluc3RhbmNlIHdpbGwgYmUgbG9hZAogICAgICAgIFxyZXR1cm4gQSBuZXcgb2JqZWN0IHdpdGggdGhlIGltcG9ydGVkIGZpbGUgYWxyZWFkeSBpbml0aWFsaXplZC4gSWYgYW4gaW1wb3J0IGVycm9yIG9jY3VycmVkLCBhIG51bGxwdHIgd2lsbCBiZSByZXR1cm5lZAogICAgKi8KICAgIHN0YXRpYyBTaGFyZWRQdHIgY3JlYXRlKHN0ZDo6c2hhcmVkX3B0cjxEZXZpY2U+IHBEZXZpY2UsIGNvbnN0IHN0ZDo6c3RyaW5nJiBmaWxlbmFtZSwgRmxhZ3MgYnVpbGRGbGFncyA9IEZsYWdzOjpEZWZhdWx0LCBjb25zdCBJbnN0YW5jZU1hdHJpY2VzJiBpbnN0YW5jZXMgPSBJbnN0YW5jZU1hdHJpY2VzKCkpOwoKICAgIC8qKiBJbXBvcnQgYSBzY2VuZS9tb2RlbCBmaWxlCiAgICAgICAgXHBhcmFtIGZpbGVuYW1lIFRoZSBmaWxlbmFtZSB0byBsb2FkCiAgICAgICAgXHBhcmFtIGluc3RhbmNlcyBBIGxpc3Qgb2YgaW5zdGFuY2UgbWF0cmljZXMgdG8gbG9hZC4gVGhpcyBpcyBvcHRpb25hbCwgYnkgZGVmYXVsdCBhIHNpbmdsZSBpbnN0YW5jZSB3aWxsIGJlIGxvYWQKICAgICAgICBccmV0dXJuIHRydWUgaWYgdGhlIGltcG9ydCBzdWNjZWVkZWQsIG90aGVyd2lzZSBmYWxzZQogICAgKi8KICAgIGJvb2wgaW1wb3J0KGNvbnN0IHN0ZDo6c3RyaW5nJiBmaWxlbmFtZSwgY29uc3QgSW5zdGFuY2VNYXRyaWNlcyYgaW5zdGFuY2VzID0gSW5zdGFuY2VNYXRyaWNlcygpLCBjb25zdCBEaWN0aW9uYXJ5JiBkaWN0ID0gRGljdGlvbmFyeSgpKTsKCiAgICAvKiogR2V0IHRoZSBzY2VuZS4gTWFrZSBzdXJlIHRvIGFkZCBhbGwgdGhlIG9iamVjdHMgYmVmb3JlIGNhbGxpbmcgdGhpcyBmdW5jdGlvbgogICAgICAgIFxyZXR1cm4gbnVsbHB0ciBpZiBzb21ldGhpbmcgd2VudCB3cm9uZywgb3RoZXJ3aXNlIGEgbmV3IFNjZW5lIG9iamVjdAogICAgKi8KICAgIFNjZW5lOjpTaGFyZWRQdHIgZ2V0U2NlbmUoKTsKCiAgICAvKiogQWRkIGEgbWVzaCBpbnN0YW5jZSB0byBhIG5vZGUKICAgICovCiAgICBib29sIGFkZE1lc2hJbnN0YW5jZSh1aW50MzJfdCBub2RlSUQsIHVpbnQzMl90IG1lc2hJRCwgY29uc3QgTWVzaEluc3RhbmNlQ3JlYXRpb25TcGVjKiBjcmVhdGlvblNwZWMgPSBudWxscHRyKTsKICAgIAogICAgLyoqIEFkZCBhIG1lc2guIFRoaXMgZnVuY3Rpb24gd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgc29tZXRoaW5nIHdlbnQgd3JvbmcuCiAgICAgICAgXHBhcmFtIG1lc2hEZXNjIFRoZSBtZXNoJ3MgZGVzY3JpcHRpb24uCiAgICAgICAgXHJldHVybiBUaGUgSUQgb2YgdGhlIG1lc2ggaW4gdGhlIHNjZW5lLiBOb3RlIHRoYXQgYWxsIG9mIHRoZSBpbnN0YW5jZXMgc2hhcmUgdGhlIHNhbWUgbWVzaCBJRC4KICAgICovCiAgICB1aW50MzJfdCBhZGRNZXNoKGNvbnN0IE1lc2gmIG1lc2hEZXNjKTsKCiAgICAvKiogQWRkIGEgdHJpYW5nbGUgbWVzaC4KICAgICAgICBccGFyYW0gVGhlIHRyaWFuZ2xlIG1lc2ggdG8gYWRkLgogICAgICAgIFxwYXJhbSBwTWF0ZXJpYWwgVGhlIG1hdGVyaWFsIHRvIHVzZSBmb3IgdGhlIG1lc2guCiAgICAgICAgXHJldHVybiBUaGUgSUQgb2YgdGhlIG1lc2ggaW4gdGhlIHNjZW5lLgogICAgKi8KICAgIHVpbnQzMl90IGFkZFRyaWFuZ2xlTWVzaChjb25zdCBUcmlhbmdsZU1lc2g6OlNoYXJlZFB0ciYgcFRyaWFuZ2xlTWVzaCwgY29uc3QgTWF0ZXJpYWw6OlNoYXJlZFB0ciYgcE1hdGVyaWFsKTsKCiAgICAvKiogUHJlLXByb2Nlc3MgYSBtZXNoIGludG8gdGhlIGRhdGEgZm9ybWF0IHRoYXQgaXMgdXNlZCBpbiB0aGUgZ2xvYmFsIHNjZW5lIGJ1ZmZlcnMuCiAgICAgICAgVGhyb3dzIGFuIGV4Y2VwdGlvbiBpZiBzb21ldGhpbmcgd2VudCB3cm9uZy4KICAgICAgICBccGFyYW0gbWVzaCBUaGUgbWVzaCB0byBwcmUtcHJvY2Vzcy4KICAgICAgICBccmV0dXJuIFRoZSBwcmUtcHJvY2Vzc2VkIG1lc2guCiAgICAqLwogICAgUHJvY2Vzc2VkTWVzaCBwcm9jZXNzTWVzaChjb25zdCBNZXNoJiBtZXNoLCBNZXNoQXR0cmlidXRlSW5kaWNlcyogcEF0dHJpYnV0ZUluZGljZXMgPSBudWxscHRyKSBjb25zdDsKCiAgICAvKiogR2VuZXJhdGUgdGFuZ2VudHMgZm9yIGEgbWVzaC4KICAgICAgICBccGFyYW0gbWVzaCBUaGUgbWVzaCB0byBnZW5lcmF0ZSB0YW5nZW50cyBmb3IuIElmIHN1Y2Nlc3NmdWwsIHRoZSB0YW5nZW50IGF0dHJpYnV0ZSBvbiB0aGUgbWVzaCB3aWxsIGJlIHNldCB0byB0aGUgb3V0cHV0IHZlY3Rvci4KICAgICAgICBccGFyYW0gdGFuZ2VudHMgT3V0cHV0IGZvciBnZW5lcmF0ZWQgdGFuZ2VudHMuCiAgICAqLwogICAgdm9pZCBnZW5lcmF0ZVRhbmdlbnRzKE1lc2gmIG1lc2gsIHN0ZDo6dmVjdG9yPGZsb2F0ND4mIHRhbmdlbnRzKSBjb25zdDsK7gEAAAAAAADuAQAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAHgwAAAAAAADvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"left_delete",
					null,
					"AQAAAG4BAAAAAAAAbgEAAAAAAAAjAAAAICAgIC8qKiBDcmVhdGUgYSBuZXcgb2JqZWN0CiAgICAqLwo",
					"AQAAAAAAAAABAAAAbgEAAAAAAACRAQAAAAAAAAAAAAAAAAAA"
				],
				[
					107,
					1,
					"left_delete",
					null,
					"AQAAAMwBAAAAAAAAzAEAAAAAAAC9AAAAICAgIC8qKiBBZGQgYSBwcmUtcHJvY2Vzc2VkIG1lc2guCiAgICAgICAgXHBhcmFtIG1lc2ggVGhlIHByZS1wcm9jZXNzZWQgbWVzaC4KICAgICAgICBccmV0dXJuIFRoZSBJRCBvZiB0aGUgbWVzaCBpbiB0aGUgc2NlbmUuIE5vdGUgdGhhdCBhbGwgb2YgdGhlIGluc3RhbmNlcyBzaGFyZSB0aGUgc2FtZSBtZXNoIElELgogICAgKi8K",
					"AQAAAAAAAAABAAAAzAEAAAAAAACJAgAAAAAAAAAAAAAAAAAA"
				],
				[
					110,
					3,
					"left_delete",
					null,
					"",
					"AQAAAAAAAAABAAAAaBwAAAAAAAAVAgAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"unexpand_tabs",
					{
						"set_translate_tabs": true
					},
					"",
					"AQAAAAAAAAABAAAAEwIAAAAAAAATAgAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"right_delete",
					null,
					"AQAAAPkAAAAAAAAA+QAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA+QAAAAAAAAD5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAPkAAAAAAAAA+gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+QAAAAAAAAD5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAAMBAAAAAAAABAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwEAAAAAAAADAQAAAAAAAAAAAAAAADJA"
				],
				[
					121,
					1,
					"left_delete",
					null,
					"AQAAADYBAAAAAAAANgEAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAANwEAAAAAAAA3AQAAAAAAAAAAAAAAYH5A"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAADgBAAAAAAAAOQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAEAAAAAAAA4AQAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAGoBAAAAAAAAawEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagEAAAAAAABqAQAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAMYBAAAAAAAAxwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxgEAAAAAAADGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAAwCAAAAAAAADQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADAIAAAAAAAAMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAABkCAAAAAAAAGgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQIAAAAAAAAZAgAAAAAAAAAAAAAAADJA"
				],
				[
					144,
					1,
					"paste",
					null,
					"AgAAABoCAAAAAAAAKAIAAAAAAAAAAAAAKAIAAAAAAAAoAgAAAAAAAAwAAABTY2VuZUJ1aWxkZXI",
					"AQAAAAAAAAABAAAAGgIAAAAAAAAmAgAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"right_delete",
					null,
					"AQAAACkCAAAAAAAAKQIAAAAAAAAhAAAAc3RkOjpzaGFyZWRfcHRyPERldmljZT4gcERldmljZSwg",
					"AQAAAAAAAAABAAAAKQIAAAAAAABKAgAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"right_delete",
					null,
					"AQAAAIMBAAAAAAAAgwEAAAAAAAAhAAAAc3RkOjpzaGFyZWRfcHRyPERldmljZT4gcERldmljZSwg",
					"AQAAAAAAAAABAAAApAEAAAAAAACDAQAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					3,
					"left_delete",
					null,
					"AwAAAGEjAAAAAAAAYSMAAAAAAAB2AAAAaW5saW5lIHN0ZDo6c3RyaW5nIHRvX3N0cmluZyhTY2VuZUJ1aWxkZXI6OkZsYWdzIGYpIHsKCXJldHVybiBzdGQ6OmJpdHNldDwzMj4oc3RhdGljX2Nhc3Q8dWludDMyX3Q+KGYpKS50b19zdHJpbmcoKTsKfWAjAAAAAAAAYCMAAAAAAAABAAAACl8jAAAAAAAAXyMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA1yMAAAAAAABhIwAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					2,
					"left_delete",
					null,
					"AgAAABUXAAAAAAAAFRcAAAAAAABHDAAACS8vIE1lc2hsZXRzCglNZXNoTGlzdCBtTWVzaGVzOwoJc3RkOjp2ZWN0b3I8TWVzaGxldExpc3Q+IG1NZXNobGV0TGlzdHM7CglzdGQ6OnZlY3Rvcjx1aW50MzJfdD4gbU1lc2hsZXRWZXJ0aWNlczsgICAgLy8vPCBNZXNobGV0IHZlcnRpY2VzIHRoYXQgcG9pbnQgdG8gZ2xvYmFsIHNjZW5lIHZlcnRleCBkYXRhLgoJc3RkOjp2ZWN0b3I8dWludDhfdD4gIG1NZXNobGV0SW5kaWNlczsgICAgIC8vLzwgSW5kaWNlcyBvZiBhIHByaW1pdGl2ZSB2ZXJpY2VzLiBWZWN0b3Igc2l6ZSBzaG91bGQgYmUgZXF1YWwgdG8gaW5kZXhDb3VudC4KCXN0ZDo6dmVjdG9yPHVpbnQzMl90PiBtTWVzaGxldFByaW1JbmRpY2VzOyAvLy88IFByaW1pdGl2ZSBpbmRpY2VzIGluIGEgZ2xvYmFsIHNjZW5lIGJ1ZmZlci4gSXQncyB1c2VkIGluIGNhc2UgaWYgbWVzaGxldCBwcmltaXRpdmVzIG9yZGVyIGRpZmZlcnMgZnJvbSBvcmlnaW5hbCBtZXNoLgoKCS8vIE1lc2hlcwoJTWVzaEdyb3VwTGlzdCBtTWVzaEdyb3VwczsgLy8vPCBHcm91cHMgb2YgbWVzaGVzLiBFYWNoIGdyb3VwIHJlcHJlc2VudHMgYWxsIHRoZSBnZW9tZXRyaWVzIGluIGEgQkxBUyBmb3IgcmF5IHRyYWNpbmcuCgoKCS8vIEN1cnZlcwoJQ3VydmVMaXN0IG1DdXJ2ZXM7CgoJc3RkOjp1bmlxdWVfcHRyPE1hdGVyaWFsVGV4dHVyZUxvYWRlcj4gbXBNYXRlcmlhbFRleHR1cmVMb2FkZXI7CglHcHVGZW5jZTo6U2hhcmVkUHRyIG1wRmVuY2U7CgoJc3RkOjp2ZWN0b3I8TWF0ZXJpYWw6OlNoYXJlZFB0cj4gbU1hdGVyaWFsczsKCXN0ZDo6dmVjdG9yPE1hdGVyaWFsWDo6U2hhcmVkUHRyPiBtTWF0ZXJpYWxYczsKCXN0ZDo6dW5vcmRlcmVkX21hcDxjb25zdCBNYXRlcmlhbCosIHVpbnQzMl90PiBtTWF0ZXJpYWxUb0lkOwoKCUJTOjptdWx0aV9mdXR1cmU8dWludDMyX3Q+IG1BZGRHZW9UYXNrczsKCgoJLy8gTWVzaCBoZWxwZXJzCglib29sIGRvZXNOb2RlSGF2ZUFuaW1hdGlvbih1aW50MzJfdCBub2RlSUQpIGNvbnN0OwoJdm9pZCB1cGRhdGVMaW5rZWRPYmplY3RzKHVpbnQzMl90IG5vZGVJRCwgdWludDMyX3QgbmV3Tm9kZUlEKTsKCWJvb2wgY29sbGFwc2VOb2Rlcyh1aW50MzJfdCBwYXJlbnROb2RlSUQsIHVpbnQzMl90IGNoaWxkTm9kZUlEKTsKCWJvb2wgbWVyZ2VOb2Rlcyh1aW50MzJfdCBkc3ROb2RlSUQsIHVpbnQzMl90IHNyY05vZGVJRCk7Cgl2b2lkIGZsaXBUcmlhbmdsZVdpbmRpbmcoTWVzaFNwZWMmIG1lc2gpOwoJdm9pZCB1cGRhdGVTREZHcmlkSUQodWludDMyX3Qgb2xkSUQsIHVpbnQzMl90IG5ld0lEKTsKCgkvKiogU3BsaXQgYSBtZXNoIGJ5IHRoZSBnaXZlbiBheGlzLWFsaWduZWQgc3BsaXR0aW5nIHBsYW5lLgoJCVxyZXR1cm4gUGFpciBvZiBvcHRpb25hbCBtZXNoIElEcyBmb3IgdGhlIG1lc2hlcyBvbiB0aGUgbGVmdCBhbmQgcmlnaHQgc2lkZSwgcmVzcGVjdGl2ZWx5LgoJKi8KCXN0ZDo6cGFpcjxzdGQ6Om9wdGlvbmFsPHVpbnQzMl90Piwgc3RkOjpvcHRpb25hbDx1aW50MzJfdD4+IHNwbGl0TWVzaCh1aW50MzJfdCBtZXNoSUQsIGNvbnN0IGludCBheGlzLCBjb25zdCBmbG9hdCBwb3MpOwoKCXZvaWQgc3BsaXRJbmRleGVkTWVzaChjb25zdCBNZXNoU3BlYyYgbWVzaCwgTWVzaFNwZWMmIGxlZnRNZXNoLCBNZXNoU3BlYyYgcmlnaHRNZXNoLCBjb25zdCBpbnQgYXhpcywgY29uc3QgZmxvYXQgcG9zKTsKCXZvaWQgc3BsaXROb25JbmRleGVkTWVzaChjb25zdCBNZXNoU3BlYyYgbWVzaCwgTWVzaFNwZWMmIGxlZnRNZXNoLCBNZXNoU3BlYyYgcmlnaHRNZXNoLCBjb25zdCBpbnQgYXhpcywgY29uc3QgZmxvYXQgcG9zKTsKCgkvLyBNZXNoIGdyb3VwIGhlbHBlcnMKCXNpemVfdCBjb3VudFRyaWFuZ2xlcyhjb25zdCBNZXNoR3JvdXAmIG1lc2hHcm91cCkgY29uc3Q7CglBQUJCIGNhbGN1bGF0ZUJvdW5kaW5nQm94KGNvbnN0IE1lc2hHcm91cCYgbWVzaEdyb3VwKSBjb25zdDsKCWJvb2wgbmVlZHNTcGxpdChjb25zdCBNZXNoR3JvdXAmIG1lc2hHcm91cCwgc2l6ZV90JiB0cmlhbmdsZUNvdW50KSBjb25zdDsKCU1lc2hHcm91cExpc3Qgc3BsaXRNZXNoR3JvdXBTaW1wbGUoTWVzaEdyb3VwJiBtZXNoR3JvdXApIGNvbnN0OwoJTWVzaEdyb3VwTGlzdCBzcGxpdE1lc2hHcm91cE1lZGlhbihNZXNoR3JvdXAmIG1lc2hHcm91cCkgY29uc3Q7CglNZXNoR3JvdXBMaXN0IHNwbGl0TWVzaEdyb3VwTWlkcG9pbnRNZXNoZXMoTWVzaEdyb3VwJiBtZXNoR3JvdXApOwoKCS8vIFBvc3QgcHJvY2Vzc2luZwoJdm9pZCBwcmVwYXJlRGlzcGxhY2VtZW50TWFwcygpOwoJdm9pZCBwcmVwYXJlU2NlbmVHcmFwaCgpOwoJdm9pZCBwcmVwYXJlTWVzaGVzKCk7Cgl2b2lkIHJlbW92ZVVudXNlZE1lc2hlcygpOwoJdm9pZCBmbGF0dGVuU3RhdGljTWVzaEluc3RhbmNlcygpOwoJdm9pZCBvcHRpbWl6ZVNjZW5lR3JhcGgoKTsKCXZvaWQgcHJldHJhbnNmb3JtU3RhdGljTWVzaGVzKCk7Cgl2b2lkIHVuaWZ5VHJpYW5nbGVXaW5kaW5nKCk7Cgl2b2lkIGNhbGN1bGF0ZU1lc2hCb3VuZGluZ0JveGVzKCk7Cgl2b2lkIGNyZWF0ZU1lc2hHcm91cHMoKTsKCXZvaWQgb3B0aW1pemVHZW9tZXRyeSgpOwoJdm9pZCBzb3J0TWVzaGVzKCk7Cgl2b2lkIGNyZWF0ZUdsb2JhbEJ1ZmZlcnMoKTsKCXZvaWQgY3JlYXRlQ3VydmVHbG9iYWxCdWZmZXJzKCk7Cgl2b2lkIG9wdGltaXplTWF0ZXJpYWxzKCk7Cgl2b2lkIHJlbW92ZUR1cGxpY2F0ZU1hdGVyaWFscygpOwoJdm9pZCBjb2xsZWN0Vm9sdW1lR3JpZHMoKTsKCXZvaWQgcXVhbnRpemVUZXhDb29yZHMoKTsKCXZvaWQgcmVtb3ZlRHVwbGljYXRlU0RGR3JpZHMoKTsKCgkvLyBTY2VuZSBzZXR1cAoJdm9pZCBjcmVhdGVNZXNoRGF0YSgpOwoJdm9pZCBjcmVhdGVNZXNobGV0c0RhdGEoKTsKCXZvaWQgY3JlYXRlTWVzaEluc3RhbmNlRGF0YSh1aW50MzJfdCYgdGxhc0luc3RhbmNlSW5kZXgpOwoJdm9pZCBjcmVhdGVDdXJ2ZURhdGEoKTsKCXZvaWQgY3JlYXRlQ3VydmVJbnN0YW5jZURhdGEodWludDMyX3QmIHRsYXNJbnN0YW5jZUluZGV4KTsKCXZvaWQgY3JlYXRlU2NlbmVHcmFwaCgpOwoJdm9pZCBjcmVhdGVNZXNoQm91bmRpbmdCb3hlcygpOwoJdm9pZCBjYWxjdWxhdGVDdXJ2ZUJvdW5kaW5nQm94ZXMoKTsKCglmcmllbmQgY2xhc3MgU2NlbmVDYWNoZTsUFwAAAAAAABQXAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAXCMAAAAAAAAVFwAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"left_delete",
					null,
					"AQAAAEIFAAAAAAAAQgUAAAAAAAC8EQAACXN0cnVjdCBNZXNoSW5zdGFuY2VTcGVjIHsKCQl1aW50MzJfdCAgICBub2RlSWQ7CgkJdWludDMyX3QgICAgbWF0ZXJpYWxJZDsKCQlib29sICAgICAgICBvdmVycmlkZU1hdGVyaWFsID0gZmFsc2U7CgoJCUluc3RhbmNlRXhwb3J0ZWREYXRhU3BlYyAgICBleHBvcnRlZDsKCQlJbnN0YW5jZVNoYWRpbmdTcGVjICAgICAgICAgc2hhZGluZzsKCQlJbnN0YW5jZVZpc2liaWxpdHlTcGVjICAgICAgdmlzaWJpbGl0eTsKCX07CgoJc3RydWN0IE1lc2hTcGVjIHsKCQlzdGQ6OnN0cmluZyBuYW1lOwoJCVZhbzo6VG9wb2xvZ3kgdG9wb2xvZ3kgPSBWYW86OlRvcG9sb2d5OjpVbmRlZmluZWQ7CgkJdWludDMyX3QgbWF0ZXJpYWxJZCA9IDA7ICAgICAgICAgICAgICAgIC8vLzwgR2xvYmFsIG1hdGVyaWFsIElELgoJCXVpbnQzMl90IHN0YXRpY1ZlcnRleE9mZnNldCA9IDA7ICAgICAgICAvLy88IE9mZnNldCBpbnRvIHRoZSBzaGFyZWQgJ3N0YXRpY0RhdGEnIGFycmF5LiBUaGlzIGlzIGNhbGN1bGF0ZWQgaW4gY3JlYXRlR2xvYmFsQnVmZmVycygpLgoJCXVpbnQzMl90IHN0YXRpY1ZlcnRleENvdW50ID0gMDsgICAgICAgICAvLy88IE51bWJlciBvZiBzdGF0aWMgdmVydGljZXMuCgkJdWludDMyX3Qgc2tpbm5pbmdWZXJ0ZXhPZmZzZXQgPSAwOyAgICAgIC8vLzwgT2Zmc2V0IGludG8gdGhlIHNoYXJlZCAnc2tpbm5pbmdEYXRhJyBhcnJheS4gVGhpcyBpcyBjYWxjdWxhdGVkIGluIGNyZWF0ZUdsb2JhbEJ1ZmZlcnMoKS4KCQl1aW50MzJfdCBza2lubmluZ1ZlcnRleENvdW50ID0gMDsgICAgICAgLy8vPCBOdW1iZXIgb2Ygc2tpbm5lZCB2ZXJ0aWNlcy4KCQl1aW50MzJfdCBwcmV2VmVydGV4T2Zmc2V0ID0gMDsgICAgICAgICAgLy8vPCBPZmZzZXQgaW50byB0aGUgc2hhcmVkIGBwcmV2VmVydGljZXNgIGFycmF5LiBUaGlzIGlzIGNhbGN1bGF0ZWQgaW4gY3JlYXRlR2xvYmFsQnVmZmVycygpLgoJCXVpbnQzMl90IHByZXZWZXJ0ZXhDb3VudCA9IDA7ICAgICAgICAgICAvLy88IE51bWJlciBvZiBwcmV2aW91cyB2ZXJ0aWNlcyBzdG9yZWQuIFRoaXMgY2FuIGJlIHRoZSBzdGF0aWMgb3Igc2tpbm5lZCB2ZXJ0ZXggY291bnQgZGVwZW5kaW5nIG9uIGFuaW1hdGlvbiB0eXBlLgoJCXVpbnQzMl90IGluZGV4T2Zmc2V0ID0gMDsgICAgICAgICAgICAgICAvLy88IE9mZnNldCBpbnRvIHRoZSBzaGFyZWQgJ2luZGV4RGF0YScgYXJyYXkuIFRoaXMgaXMgY2FsY3VsYXRlZCBpbiBjcmVhdGVHbG9iYWxCdWZmZXJzKCkuCgkJdWludDMyX3QgaW5kZXhDb3VudCA9IDA7ICAgICAgICAgICAgICAgIC8vLzwgTnVtYmVyIG9mIGluZGljZXMsIG9yIHplcm8gaWYgbm9uLWluZGV4ZWQuCgkJdWludDMyX3QgdmVydGV4Q291bnQgPSAwOyAgICAgICAgICAgICAgIC8vLzwgTnVtYmVyIG9mIHZlcnRpY2VzLgoJCXVpbnQzMl90IHNrZWxldG9uTm9kZUlEID0ga0ludmFsaWROb2RlOyAvLy88IE5vZGUgSUQgb2Ygc2tlbGV0b24gd29ybGQgdHJhbnNmb3JtLiBGb3J3YXJkZWQgZnJvbSBNZXNoIHN0cnVjdC4KCQlib29sIHVzZTE2Qml0SW5kaWNlcyA9IGZhbHNlOyAgICAgICAgICAgLy8vPCBUcnVlIGlmIHRoZSBpbmRpY2VzIGFyZSBpbiAxNi1iaXQgZm9ybWF0LgoJCWJvb2wgaGFzU2tpbm5pbmdEYXRhID0gZmFsc2U7ICAgICAgICAgICAvLy88IFRydWUgaWYgbWVzaCBoYXMgZHluYW1pYyB2ZXJ0aWNlcy4KCQlib29sIGlzU3RhdGljID0gZmFsc2U7ICAgICAgICAgICAgICAgICAgLy8vPCBUcnVlIGlmIG1lc2ggaXMgbm9uLWluc3RhbmNlZCBhbmQgc3RhdGljIChub3QgZHluYW1pYyBvciBhbmltYXRlZCkuCgkJYm9vbCBpc0Zyb250RmFjZUNXID0gZmFsc2U7ICAgICAgICAgICAgIC8vLzwgSW5kaWNhdGUgd2hldGhlciBmcm9udC1mYWNpbmcgc2lkZSBoYXMgY2xvY2t3aXNlIHdpbmRpbmcgaW4gb2JqZWN0IHNwYWNlLgoJCWJvb2wgaXNEaXNwbGFjZWQgPSBmYWxzZTsgICAgICAgICAgICAgICAvLy88IFRydWUgaWYgbWVzaCBoYXMgZGlzcGxhY2VtZW50IG1hcC4KCQlib29sIGlzQW5pbWF0ZWQgPSBmYWxzZTsgICAgICAgICAgICAgICAgLy8vPCBUcnVlIGlmIG1lc2ggaGFzIHZlcnRleCBhbmltYXRpb25zLgoJCWJvb2wgaGFzTWVzaGxldHMgPSBmYWxzZTsgICAgICAgICAgICAgICAvLy88IFRydWUgaWYgbWVzaCBoYXMgZ2VuZXJhdGVkIG1lc2hsZXRzLgoJCUFBQkIgYm91bmRpbmdCb3g7ICAgICAgICAgICAgICAgICAgICAgICAvLy88IE1lc2ggYm91bmRpbmctYm94IGluIG9iamVjdCBzcGFjZS4KCQlzdGQ6OnZlY3RvcjxNZXNoSW5zdGFuY2VTcGVjPiBpbnN0YW5jZXM7ICAgIC8vLzwgQWxsIGluc3RhbmNlcyBvZiB0aGlzIG1lc2guCgoJCS8vIFByZS1wcm9jZXNzZWQgdmVydGV4IGRhdGEuCgkJc3RkOjp2ZWN0b3I8dWludDMyX3Q+IGluZGV4RGF0YTsgICAgLy8vPCBWZXJ0ZXggaW5kaWNlcyBpbiBlaXRoZXIgMzItYml0IG9yIDE2LWJpdCBmb3JtYXQgcGFja2VkIHRpZ2h0bHksIG9yIGVtcHR5IGlmIG5vbi1pbmRleGVkLgoJCXN0ZDo6dmVjdG9yPFN0YXRpY1ZlcnRleERhdGE+IHN0YXRpY0RhdGE7CgkJc3RkOjp2ZWN0b3I8U2tpbm5pbmdWZXJ0ZXhEYXRhPiBza2lubmluZ0RhdGE7CgoJCXVpbnQzMl90IGdldFRyaWFuZ2xlQ291bnQoKSBjb25zdCB7CgkJCWFzc2VydCh0b3BvbG9neSA9PSBWYW86OlRvcG9sb2d5OjpUcmlhbmdsZUxpc3QpOwoJCQlyZXR1cm4gKGluZGV4Q291bnQgPiAwID8gaW5kZXhDb3VudCA6IHZlcnRleENvdW50KSAvIDM7CgkJfQoKCQl1aW50MzJfdCBnZXRJbmRleChjb25zdCBzaXplX3QgaSkgY29uc3QgewoJCQlhc3NlcnQoaSA8IGluZGV4Q291bnQpOwoJCQlyZXR1cm4gdXNlMTZCaXRJbmRpY2VzID8gcmVpbnRlcnByZXRfY2FzdDxjb25zdCB1aW50MTZfdCo+KGluZGV4RGF0YS5kYXRhKCkpW2ldIDogaW5kZXhEYXRhW2ldOwoJCX0KCgkJYm9vbCBpc1NraW5uZWQoKSBjb25zdCB7CgkJCXJldHVybiBoYXNTa2lubmluZ0RhdGE7CgkJfQoKCQlib29sIGlzRHluYW1pYygpIGNvbnN0IHsKCQkJcmV0dXJuIGlzU2tpbm5lZCgpIHx8IGlzQW5pbWF0ZWQ7CgkJfQoJfTsKCgkvLyBUT0RPOiBBZGQgc3VwcG9ydCBmb3IgZHluYW1pYyBjdXJ2ZXMKCXN0cnVjdCBDdXJ2ZVNwZWMgewoJCXN0ZDo6c3RyaW5nIG5hbWU7CgkJVmFvOjpUb3BvbG9neSB0b3BvbG9neTsKCQl1aW50MzJfdCBtYXRlcmlhbElkID0gMDsgICAgICAgICAgICAvLy88IEdsb2JhbCBtYXRlcmlhbCBJRC4KCQl1aW50MzJfdCBzdGF0aWNWZXJ0ZXhPZmZzZXQgPSAwOyAgICAvLy88IE9mZnNldCBpbnRvIHRoZSBzaGFyZWQgJ3N0YXRpY0RhdGEnIGFycmF5LiBUaGlzIGlzIGNhbGN1bGF0ZWQgaW4gY3JlYXRlQ3VydmVHbG9iYWxCdWZmZXJzKCkuCgkJdWludDMyX3Qgc3RhdGljVmVydGV4Q291bnQgPSAwOyAgICAgLy8vPCBOdW1iZXIgb2Ygc3RhdGljIGN1cnZlIHZlcnRpY2VzLgoJCXVpbnQzMl90IGluZGV4T2Zmc2V0ID0gMDsgICAgICAgICAgIC8vLzwgT2Zmc2V0IGludG8gdGhlIHNoYXJlZCAnaW5kZXhEYXRhJyBhcnJheS4gVGhpcyBpcyBjYWxjdWxhdGVkIGluIGNyZWF0ZUN1cnZlR2xvYmFsQnVmZmVycygpLgoJCXVpbnQzMl90IGluZGV4Q291bnQgPSAwOyAgICAgICAgICAgIC8vLzwgTnVtYmVyIG9mIGluZGljZXMuCgkJdWludDMyX3QgdmVydGV4Q291bnQgPSAwOyAgICAgICAgICAgLy8vPCBOdW1iZXIgb2YgdmVydGljZXMuCgkJdWludDMyX3QgZGVncmVlID0gMTsgICAgICAgICAgICAgICAgLy8vPCBQb2x5bm9taWFsIGRlZ3JlZSBvZiBjdXJ2ZTsgbGluZWFyICgxKSBieSBkZWZhdWx0LgoJCXN0ZDo6dmVjdG9yPHVpbnQzMl90PiBpbnN0YW5jZXM7ICAgIC8vLzwgTm9kZSBJRHMgb2YgYWxsIGluc3RhbmNlcyBvZiB0aGlzIGN1cnZlLgoKCQkvLyBQcmUtcHJvY2Vzc2VkIGN1cnZlIHZlcnRleCBkYXRhLgoJCXN0ZDo6dmVjdG9yPHVpbnQzMl90PiBpbmRleERhdGE7ICAgIC8vLzwgVmVydGV4IGluZGljZXMgaW4gMzItYml0LgoJCXN0ZDo6dmVjdG9yPFN0YXRpY0N1cnZlVmVydGV4RGF0YT4gc3RhdGljRGF0YTsKCX07CgoJdXNpbmcgU2NlbmVHcmFwaCA9IHN0ZDo6dmVjdG9yPEludGVybmFsTm9kZT47Cgl1c2luZyBNZXNoTGlzdCA9IHN0ZDo6dmVjdG9yPE1lc2hTcGVjPjsKCXVzaW5nIE1lc2hsZXRMaXN0ID0gc3RkOjp2ZWN0b3I8TWVzaGxldD47Cgl1c2luZyBNZXNoR3JvdXAgPSBTY2VuZTo6TWVzaEdyb3VwOwoJdXNpbmcgTWVzaEdyb3VwTGlzdCA9IHN0ZDo6dmVjdG9yPE1lc2hHcm91cD47Cgl1c2luZyBDdXJ2ZUxpc3QgPSBzdGQ6OnZlY3RvcjxDdXJ2ZVNwZWM+OwoKCXN0ZDo6c2hhcmVkX3B0cjxEZXZpY2U+IG1wRGV2aWNlOwoKCVNjZW5lOjpTY2VuZURhdGEgbVNjZW5lRGF0YTsKCVNjZW5lOjpTaGFyZWRQdHIgbXBTY2VuZTsKCVNjZW5lQ2FjaGU6OktleSBtU2NlbmVDYWNoZUtleTsKCWJvb2wgbVdyaXRlU2NlbmVDYWNoZSA9IGZhbHNlOyAgLy8vPCBUcnVlIGlmIHNjZW5lIGNhY2hlIHNob3VsZCBiZSB3cml0dGVuIGFmdGVyIGltcG9ydC4KCglTY2VuZUdyYXBoIG1TY2VuZUdyYXBoOw",
					"AQAAAAAAAAABAAAA/hYAAAAAAABCBQAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					2,
					"left_delete",
					null,
					"AgAAABwCAAAAAAAAHAIAAAAAAAAmAwAACXN0cnVjdCBJbnRlcm5hbE5vZGUgOiBOb2RlIHsKCQlJbnRlcm5hbE5vZGUoKSA9IGRlZmF1bHQ7CgkJSW50ZXJuYWxOb2RlKGNvbnN0IE5vZGUmIG4pIDogTm9kZShuKSB7fQoJCXN0ZDo6dmVjdG9yPHVpbnQzMl90PiBjaGlsZHJlbjsgICAgIC8vLzwgTm9kZSBJRHMgb2YgYWxsIGNoaWxkIG5vZGVzLgoJCXN0ZDo6dmVjdG9yPHVpbnQzMl90PiBtZXNoZXM7ICAgICAgIC8vLzwgTm9kZSBJRHMgb2YgYWxsIGNoaWxkIG5vZGVzLgoJCXN0ZDo6dmVjdG9yPHVpbnQzMl90PiBjdXJ2ZXM7ICAgICAgIC8vLzwgQ3VydmUgSURzIG9mIGFsbCBjdXJ2ZXMgdGhpcyBub2RlIHRyYW5zZm9ybXMuCgkJc3RkOjp2ZWN0b3I8dWludDMyX3Q+IHNkZkdyaWRzOyAgICAgICAgIC8vLzwgU0RGIGdyaWQgSURzIG9mIGFsbCBTREYgZ3JpZHMgdGhpcyBub2RlIHRyYW5zZm9ybXMuCgkJc3RkOjp2ZWN0b3I8QW5pbWF0YWJsZSo+IGFuaW1hdGFibGU7ICAgIC8vLzwgUG9pbnRlcnMgdG8gYWxsIGFuaW1hdGFibGUgb2JqZWN0cyBhdHRhY2hlZCB0byB0aGlzIG5vZGUuCgkJYm9vbCBkb250T3B0aW1pemUgPSBmYWxzZTsgICAgICAgICAgICAgIC8vLzwgV2hldGhlciBub2RlIHNob3VsZCBiZSBpZ25vcmVkIGluIG9wdGltaXphdGlvbiBwYXNzZXMKCgkJIC8qKiBSZXR1cm5zIHRydWUgaWYgbm9kZSBoYXMgYW55IGF0dGFjaGVkIHNjZW5lIG9iamVjdHMuCgkJKi8KCQlib29sIGhhc09iamVjdHMoKSBjb25zdCB7IHJldHVybiAhbWVzaGVzLmVtcHR5KCkgfHwgIWN1cnZlcy5lbXB0eSgpIHx8ICFhbmltYXRhYmxlLmVtcHR5KCk7IH0KCX07CgobAgAAAAAAABsCAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAQgUAAAAAAAAcAgAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					1,
					"right_delete",
					null,
					"AQAAAIMBAAAAAAAAgwEAAAAAAAAdAAAARmxhZ3MgbUZsYWdzID0gRmxhZ3M6OkRlZmF1bHQ",
					"AQAAAAAAAAABAAAAgwEAAAAAAACgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					15,
					"left_delete",
					null,
					"DwAAAPoBAAAAAAAA+gEAAAAAAAABAAAAc/kBAAAAAAAA+QEAAAAAAAABAAAAZ/gBAAAAAAAA+AEAAAAAAAABAAAAYfcBAAAAAAAA9wEAAAAAAAABAAAAbPYBAAAAAAAA9gEAAAAAAAABAAAARvUBAAAAAAAA9QEAAAAAAAABAAAAZPQBAAAAAAAA9AEAAAAAAAABAAAAbPMBAAAAAAAA8wEAAAAAAAABAAAAafIBAAAAAAAA8gEAAAAAAAABAAAAdfEBAAAAAAAA8QEAAAAAAAABAAAAYvABAAAAAAAA8AEAAAAAAAABAAAAIO8BAAAAAAAA7wEAAAAAAAABAAAAc+4BAAAAAAAA7gEAAAAAAAABAAAAZ+0BAAAAAAAA7QEAAAAAAAABAAAAYewBAAAAAAAA7AEAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAA+wEAAAAAAAD7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"left_delete",
					null,
					"AQAAAOsBAAAAAAAA6wEAAAAAAAABAAAARg",
					"AQAAAAAAAAABAAAA7AEAAAAAAADsAQAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					2,
					"left_delete",
					null,
					"AgAAAAgCAAAAAAAACAIAAAAAAAArAAAACmVudW1fY2xhc3Nfb3BlcmF0b3JzKFNjZW5lQnVpbGRlcjo6RmxhZ3MpOwcCAAAAAAAABwIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAMwIAAAAAAAAIAgAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMoBAAAAAAAAywEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygEAAAAAAADKAQAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMsBAAAAAAAAzAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywEAAAAAAADLAQAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"paste",
					null,
					"AQAAAMwBAAAAAAAA8QEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAEAAAAAAADMAQAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAOQBAAAAAAAA5QEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AEAAAAAAADkAQAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": "\nusing"
					},
					"BwAAAGcBAAAAAAAAaAEAAAAAAAAAAAAAaAEAAAAAAABqAQAAAAAAAAAAAABqAQAAAAAAAGsBAAAAAAAAAAAAAGsBAAAAAAAAbAEAAAAAAAAAAAAAbAEAAAAAAABtAQAAAAAAAAAAAABtAQAAAAAAAG4BAAAAAAAAAAAAAG4BAAAAAAAAbwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwEAAAAAAABnAQAAAAAAAAAAAAAAAItA"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": " M"
					},
					"AgAAAG8BAAAAAAAAcAEAAAAAAAAAAAAAcAEAAAAAAABxAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwEAAAAAAABvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					1,
					"insert_completion",
					{
						"completion": "MeshletSpec",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "MeshletSpec"
					},
					"AgAAAHABAAAAAAAAcAEAAAAAAAABAAAATXABAAAAAAAAewEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQEAAAAAAABxAQAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "List"
					},
					"BAAAAHsBAAAAAAAAfAEAAAAAAAAAAAAAfAEAAAAAAAB9AQAAAAAAAAAAAAB9AQAAAAAAAH4BAAAAAAAAAAAAAH4BAAAAAAAAfwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewEAAAAAAAB7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAH8BAAAAAAAAgAEAAAAAAAAAAAAAgAEAAAAAAACBAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwEAAAAAAAB/AQAAAAAAAAAAAAAAAPC/"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIEBAAAAAAAAggEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQEAAAAAAACBAQAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"insert_completion",
					{
						"completion": "std",
						"format": "text",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "std"
					},
					"AQAAAIIBAAAAAAAAhQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggEAAAAAAACCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": "::"
					},
					"AgAAAIUBAAAAAAAAhgEAAAAAAAAAAAAAhgEAAAAAAACHAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQEAAAAAAACFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					1,
					"insert_completion",
					{
						"completion": "vector",
						"format": "text",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "vector"
					},
					"AQAAAIcBAAAAAAAAjQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwEAAAAAAACHAQAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": "<"
					},
					"AQAAAI0BAAAAAAAAjgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQEAAAAAAACNAQAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"paste",
					null,
					"AQAAAI4BAAAAAAAAmQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgEAAAAAAACOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAAJkBAAAAAAAAmgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmQEAAAAAAACZAQAAAAAAAAAAAAAAAPC/"
				],
				[
					201,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAJoBAAAAAAAAnAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmgEAAAAAAACaAQAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAJoBAAAAAAAAmgEAAAAAAAABAAAAJ5oBAAAAAAAAmgEAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAmwEAAAAAAACbAQAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJoBAAAAAAAAmwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmgEAAAAAAACaAQAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					2,
					"left_delete",
					null,
					"AgAAAGgBAAAAAAAAaAEAAAAAAAAzAAAACQl1c2luZyBNZXNobGV0U3BlY0xpc3QgPSBzdGQ6OnZlY3RvcjxNZXNobGV0U3BlYz47ZwEAAAAAAABnAQAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAmwEAAAAAAABoAQAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					1,
					"paste",
					null,
					"AQAAANgBAAAAAAAA5gEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AEAAAAAAADYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					221,
					1,
					"left_delete",
					null,
					"AQAAADkBAAAAAAAAOQEAAAAAAAAvAAAAdXNpbmcgTWVzaGxldFNwZWMgPSBTY2VuZUJ1aWxkZXI6Ok1lc2hsZXRTcGVjOwo",
					"AQAAAAAAAAABAAAAOQEAAAAAAABoAQAAAAAAAAAAAAAAAPC/"
				],
				[
					228,
					4,
					"left_delete",
					null,
					"BAAAAPkAAAAAAAAA+QAAAAAAAABqAAAACXB1YmxpYzoKCQl1c2luZyBTaGFyZWRQdHIgPSBzdGQ6OnNoYXJlZF9wdHI8TWVzaGxldEJ1aWxkZXI+OwoJCQoJCXN0YXRpYyBTaGFyZWRQdHIgY3JlYXRlKCk7CgoJCXVpbnQzMl90IPgAAAAAAAAA+AAAAAAAAAABAAAACvcAAAAAAAAA9wAAAAAAAAABAAAAe/YAAAAAAAAA9gAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAYwEAAAAAAAD5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					229,
					1,
					"insert",
					{
						"characters": "::"
					},
					"AgAAAPYAAAAAAAAA9wAAAAAAAAAAAAAA9wAAAAAAAAD4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9gAAAAAAAAD2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					231,
					13,
					"left_delete",
					null,
					"DQAAAOcAAAAAAAAA5wAAAAAAAAABAAAAIOYAAAAAAAAA5gAAAAAAAAABAAAAbOUAAAAAAAAA5QAAAAAAAAABAAAAY+QAAAAAAAAA5AAAAAAAAAABAAAAZeMAAAAAAAAA4wAAAAAAAAABAAAAZOIAAAAAAAAA4gAAAAAAAAABAAAAbOEAAAAAAAAA4QAAAAAAAAABAAAAbOAAAAAAAAAA4AAAAAAAAAABAAAAZN8AAAAAAAAA3wAAAAAAAAABAAAAIN4AAAAAAAAA3gAAAAAAAAABAAAAc90AAAAAAAAA3QAAAAAAAAABAAAAc9wAAAAAAAAA3AAAAAAAAAABAAAAYdsAAAAAAAAA2wAAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAA6AAAAAAAAADoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					1,
					"left_delete",
					null,
					"AQAAANoAAAAAAAAA2gAAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAA2wAAAAAAAADbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					233,
					1,
					"insert",
					{
						"characters": "void"
					},
					"BAAAANoAAAAAAAAA2wAAAAAAAAAAAAAA2wAAAAAAAADcAAAAAAAAAAAAAADcAAAAAAAAAN0AAAAAAAAAAAAAAN0AAAAAAAAA3gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2gAAAAAAAADaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					234,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN4AAAAAAAAA3wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3gAAAAAAAADeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					237,
					1,
					"left_delete",
					null,
					"AQAAAF4BAAAAAAAAXgEAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAXwEAAAAAAABfAQAAAAAAAAAAAAAAAPC/"
				],
				[
					238,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAF4BAAAAAAAAXwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgEAAAAAAABeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					239,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAF8BAAAAAAAAYQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwEAAAAAAABfAQAAAAAAAAAAAAAAAPC/"
				],
				[
					240,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAGABAAAAAAAAYQEAAAAAAAAAAAAAYQEAAAAAAABiAQAAAAAAAAAAAABhAQAAAAAAAGIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAEAAAAAAABgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					243,
					4,
					"left_delete",
					null,
					"BQAAAGcBAAAAAAAAZwEAAAAAAAA4AAAAcHJvdGVjdGVkOgoJCU1lc2hsZXRCdWlsZGVyKCk7CgoJY29uc3QgRmxhZ3MgbUZsYWdzOwoKfTthAQAAAAAAAGEBAAAAAAAAAQAAAAllAQAAAAAAAGUBAAAAAAAAAQAAAAlkAQAAAAAAAGQBAAAAAAAAAQAAAApjAQAAAAAAAGMBAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAZwEAAAAAAACfAQAAAAAAAAAAAAAAADJA"
				],
				[
					247,
					2,
					"left_delete",
					null,
					"AgAAAH0BAAAAAAAAfQEAAAAAAAAsAAAAI2VuZGlmICAvLyBTUkNfRkFMQ09SX1NDRU5FX1NDRU5FQlVJTERFUl9IXwp8AQAAAAAAAHwBAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAfQEAAAAAAACpAQAAAAAAAAAAAAAAAAAA"
				],
				[
					250,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAB4AAAAI2lmbmRlZiBTUkNfRkFMQ09SX1NDRU5FX01FU0hMRVRCVUlMREVSX0hfCiNkZWZpbmUgU1JDX0ZBTENPUl9TQ0VORV9NRVNITEVUQlVJTERFUl9IXwoKI2luY2x1ZGUgPG1hcD4KI2luY2x1ZGUgPGJpdHNldD4K",
					"AQAAAAAAAAABAAAAAAAAAAAAAAB4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					252,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAAA"
				],
				[
					254,
					1,
					"right_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAlAAAAI2luY2x1ZGUgIkZhbGNvci9VdGlscy9UaHJlYWRQb29sLmgiCg",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAlAAAAAAAAAAAAAAAAAAAA"
				],
				[
					257,
					1,
					"insert",
					{
						"characters": "Meshlet"
					},
					"BwAAABcAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAABoAAAAAAAAAAAAAABoAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAAB0AAAAAAAAAAAAAAB0AAAAAAAAAHgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwAAAAAAAAAXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					258,
					5,
					"right_delete",
					null,
					"BQAAAB4AAAAAAAAAHgAAAAAAAAABAAAAUx4AAAAAAAAAHgAAAAAAAAABAAAAYx4AAAAAAAAAHgAAAAAAAAABAAAAZR4AAAAAAAAAHgAAAAAAAAABAAAAbh4AAAAAAAAAHgAAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAHgAAAAAAAAAeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					260,
					1,
					"paste",
					null,
					"AQAAAMUAAAAAAAAAmA8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQAAAAAAAADFAAAAAAAAAAAAAAAA4HBA"
				],
				[
					263,
					1,
					"unindent",
					null,
					"MQAAAOkAAAAAAAAA6QAAAAAAAAACAAAAICAPAQAAAAAAAA8BAAAAAAAAAgAAACAgWgEAAAAAAABaAQAAAAAAAAIAAAAgIGEBAAAAAAAAYQEAAAAAAAACAAAAICCYAQAAAAAAAJgBAAAAAAAAAgAAACAg+QEAAAAAAAD5AQAAAAAAAAIAAAAgIFYCAAAAAAAAVgIAAAAAAAACAAAAICBdAgAAAAAAAF0CAAAAAAAAAgAAACAgggIAAAAAAACCAgAAAAAAAAIAAAAgILMCAAAAAAAAswIAAAAAAAACAAAAICDkAgAAAAAAAOQCAAAAAAAAAgAAACAgGAMAAAAAAAAYAwAAAAAAAAIAAAAgIEkDAAAAAAAASQMAAAAAAAACAAAAICC7AwAAAAAAALsDAAAAAAAAAgAAACAg4wMAAAAAAADjAwAAAAAAAAIAAAAgIBgEAAAAAAAAGAQAAAAAAAACAAAAICB1BAAAAAAAAHUEAAAAAAAAAgAAACAgvgQAAAAAAAC+BAAAAAAAAAIAAAAgIAEFAAAAAAAAAQUAAAAAAAACAAAAICBRBQAAAAAAAFEFAAAAAAAAAgAAACAgowUAAAAAAACjBQAAAAAAAAIAAAAgIPYFAAAAAAAA9gUAAAAAAAACAAAAICCSBgAAAAAAAJIGAAAAAAAAAgAAACAgRQcAAAAAAABFBwAAAAAAAAIAAAAgIOQHAAAAAAAA5AcAAAAAAAACAAAAICB6CAAAAAAAAHoIAAAAAAAAAgAAACAgywgAAAAAAADLCAAAAAAAAAIAAAAgII4JAAAAAAAAjgkAAAAAAAACAAAAICC2CQAAAAAAALYJAAAAAAAAAgAAACAgzwkAAAAAAADPCQAAAAAAAAIAAAAgIOAJAAAAAAAA4AkAAAAAAAACAAAAICBhCgAAAAAAAGEKAAAAAAAAAgAAACAg9woAAAAAAAD3CgAAAAAAAAIAAAAgII8LAAAAAAAAjwsAAAAAAAACAAAAICAnDAAAAAAAACcMAAAAAAAAAgAAACAgWwwAAAAAAABbDAAAAAAAAAIAAAAgIIAMAAAAAAAAgAwAAAAAAAACAAAAICCMDAAAAAAAAIwMAAAAAAAAAgAAACAgtAwAAAAAAAC0DAAAAAAAAAIAAAAgIN8MAAAAAAAA3wwAAAAAAAACAAAAICDuDAAAAAAAAO4MAAAAAAAAAgAAACAgKw0AAAAAAAArDQAAAAAAAAIAAAAgIGYNAAAAAAAAZg0AAAAAAAACAAAAICCuDQAAAAAAAK4NAAAAAAAAAgAAACAgQQ4AAAAAAABBDgAAAAAAAAIAAAAgII0OAAAAAAAAjQ4AAAAAAAACAAAAICDHDgAAAAAAAMcOAAAAAAAAAgAAACAgzw4AAAAAAADPDgAAAAAAAAIAAAAgIDMPAAAAAAAAMw8AAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAmA8AAAAAAADpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					265,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAMUAAAAAAAAAxgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQAAAAAAAADFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					271,
					1,
					"unindent",
					null,
					"JQAAALQCAAAAAAAAtAIAAAAAAAACAAAAICDjAgAAAAAAAOMCAAAAAAAAAgAAACAgFQMAAAAAAAAVAwAAAAAAAAIAAAAgIEQDAAAAAAAARAMAAAAAAAACAAAAICC0AwAAAAAAALQDAAAAAAAAAgAAACAg2gMAAAAAAADaAwAAAAAAAAIAAAAgIA0EAAAAAAAADQQAAAAAAAACAAAAICBoBAAAAAAAAGgEAAAAAAAAAgAAACAgrwQAAAAAAACvBAAAAAAAAAIAAAAgIPAEAAAAAAAA8AQAAAAAAAACAAAAICA+BQAAAAAAAD4FAAAAAAAAAgAAACAgjgUAAAAAAACOBQAAAAAAAAIAAAAgIN8FAAAAAAAA3wUAAAAAAAACAAAAICB5BgAAAAAAAHkGAAAAAAAAAgAAACAgKgcAAAAAAAAqBwAAAAAAAAIAAAAgIMcHAAAAAAAAxwcAAAAAAAACAAAAICBbCAAAAAAAAFsIAAAAAAAAAgAAACAgqggAAAAAAACqCAAAAAAAAAIAAAAgIGsJAAAAAAAAawkAAAAAAAACAAAAICCRCQAAAAAAAJEJAAAAAAAAAgAAACAgqAkAAAAAAACoCQAAAAAAAAIAAAAgILcJAAAAAAAAtwkAAAAAAAACAAAAICA2CgAAAAAAADYKAAAAAAAAAgAAACAgygoAAAAAAADKCgAAAAAAAAIAAAAgIGALAAAAAAAAYAsAAAAAAAACAAAAICD2CwAAAAAAAPYLAAAAAAAAAgAAACAgKAwAAAAAAAAoDAAAAAAAAAIAAAAgIEsMAAAAAAAASwwAAAAAAAACAAAAICBVDAAAAAAAAFUMAAAAAAAAAgAAACAgewwAAAAAAAB7DAAAAAAAAAIAAAAgIKQMAAAAAAAApAwAAAAAAAACAAAAICCxDAAAAAAAALEMAAAAAAAAAgAAACAg7AwAAAAAAADsDAAAAAAAAAIAAAAgICUNAAAAAAAAJQ0AAAAAAAACAAAAICBrDQAAAAAAAGsNAAAAAAAAAgAAACAg/A0AAAAAAAD8DQAAAAAAAAIAAAAgIEYOAAAAAAAARg4AAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAxw4AAAAAAAC0AgAAAAAAAAAAAAAAAPC/"
				],
				[
					275,
					1,
					"unindent",
					null,
					"EwAAAK8EAAAAAAAArwQAAAAAAAACAAAAICDuBAAAAAAAAO4EAAAAAAAAAgAAACAgOgUAAAAAAAA6BQAAAAAAAAIAAAAgIIgFAAAAAAAAiAUAAAAAAAACAAAAICDXBQAAAAAAANcFAAAAAAAAAgAAACAgbwYAAAAAAABvBgAAAAAAAAIAAAAgIB4HAAAAAAAAHgcAAAAAAAACAAAAICC5BwAAAAAAALkHAAAAAAAAAgAAACAgSwgAAAAAAABLCAAAAAAAAAIAAAAgIJgIAAAAAAAAmAgAAAAAAAACAAAAICBXCQAAAAAAAFcJAAAAAAAAAgAAACAgewkAAAAAAAB7CQAAAAAAAAIAAAAgIJAJAAAAAAAAkAkAAAAAAAACAAAAICCdCQAAAAAAAJ0JAAAAAAAAAgAAACAgGgoAAAAAAAAaCgAAAAAAAAIAAAAgIKwKAAAAAAAArAoAAAAAAAACAAAAICBACwAAAAAAAEALAAAAAAAAAgAAACAg1AsAAAAAAADUCwAAAAAAAAIAAAAgIAQMAAAAAAAABAwAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAASgwAAAAAAACvBAAAAAAAAAAAAAAAAPC/"
				],
				[
					277,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAA0EAAAAAAAADgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQQAAAAAAAANBAAAAAAAAAAAAAAAAAAA"
				],
				[
					280,
					1,
					"right_delete",
					null,
					"AQAAAKUIAAAAAAAApQgAAAAAAAAGAAAAICAgICAg",
					"AQAAAAAAAAABAAAAqwgAAAAAAAClCAAAAAAAAAAAAAAAAPC/"
				],
				[
					282,
					2,
					"right_delete",
					null,
					"AgAAAF4JAAAAAAAAXgkAAAAAAAABAAAAIF4JAAAAAAAAXgkAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAXgkAAAAAAABeCQAAAAAAAAAAAAAAAFtA"
				],
				[
					284,
					2,
					"right_delete",
					null,
					"AgAAAIAJAAAAAAAAgAkAAAAAAAABAAAAIIAJAAAAAAAAgAkAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAgAkAAAAAAACACQAAAAAAAAAAAAAAAFtA"
				],
				[
					287,
					2,
					"left_delete",
					null,
					"AgAAANgNAAAAAAAA2A0AAAAAAAABAAAAINcNAAAAAAAA1w0AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA2Q0AAAAAAADZDQAAAAAAAAAAAAAAAPC/"
				],
				[
					294,
					1,
					"unindent",
					null,
					"LwAAABABAAAAAAAAEAEAAAAAAAACAAAAICBZAQAAAAAAAFkBAAAAAAAAAgAAACAgXgEAAAAAAABeAQAAAAAAAAIAAAAgIJMBAAAAAAAAkwEAAAAAAAACAAAAICDyAQAAAAAAAPIBAAAAAAAAAgAAACAgTQIAAAAAAABNAgAAAAAAAAIAAAAgIFICAAAAAAAAUgIAAAAAAAACAAAAICB1AgAAAAAAAHUCAAAAAAAAAgAAACAgpAIAAAAAAACkAgAAAAAAAAIAAAAgINECAAAAAAAA0QIAAAAAAAACAAAAICABAwAAAAAAAAEDAAAAAAAAAgAAACAgLgMAAAAAAAAuAwAAAAAAAAIAAAAgIJwDAAAAAAAAnAMAAAAAAAACAAAAICDAAwAAAAAAAMADAAAAAAAAAgAAACAg8gMAAAAAAADyAwAAAAAAAAIAAAAgIEsEAAAAAAAASwQAAAAAAAACAAAAICCQBAAAAAAAAJAEAAAAAAAAAgAAACAgzQQAAAAAAADNBAAAAAAAAAIAAAAgIBcFAAAAAAAAFwUAAAAAAAACAAAAICBjBQAAAAAAAGMFAAAAAAAAAgAAACAgsAUAAAAAAACwBQAAAAAAAAIAAAAgIEYGAAAAAAAARgYAAAAAAAACAAAAICDzBgAAAAAAAPMGAAAAAAAAAgAAACAgjAcAAAAAAACMBwAAAAAAAAIAAAAgIBwIAAAAAAAAHAgAAAAAAAACAAAAICBnCAAAAAAAAGcIAAAAAAAAAgAAACAgHgkAAAAAAAAeCQAAAAAAAAIAAAAgID4JAAAAAAAAPgkAAAAAAAACAAAAICBPCQAAAAAAAE8JAAAAAAAAAgAAACAgWgkAAAAAAABaCQAAAAAAAAIAAAAgINUJAAAAAAAA1QkAAAAAAAACAAAAICBlCgAAAAAAAGUKAAAAAAAAAgAAACAg9woAAAAAAAD3CgAAAAAAAAIAAAAgIIkLAAAAAAAAiQsAAAAAAAACAAAAICC3CwAAAAAAALcLAAAAAAAAAgAAACAg1gsAAAAAAADWCwAAAAAAAAIAAAAgIN4LAAAAAAAA3gsAAAAAAAACAAAAICACDAAAAAAAAAIMAAAAAAAAAgAAACAgKQwAAAAAAAApDAAAAAAAAAIAAAAgIDQMAAAAAAAANAwAAAAAAAACAAAAICBtDAAAAAAAAG0MAAAAAAAAAgAAACAgpAwAAAAAAACkDAAAAAAAAAIAAAAgIOgMAAAAAAAA6AwAAAAAAAACAAAAICB3DQAAAAAAAHcNAAAAAAAAAgAAACAgvQ0AAAAAAAC9DQAAAAAAAAIAAAAgIPMNAAAAAAAA8w0AAAAAAAACAAAAICD5DQAAAAAAAPkNAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAuA4AAAAAAAAQAQAAAAAAAAAAAAAAAPC/"
				],
				[
					296,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOoAAAAAAAAA6wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gAAAAAAAADqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					298,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHYCAAAAAAAAdwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgIAAAAAAAB2AgAAAAAAAAAAAAAAAAAA"
				],
				[
					302,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAN8LAAAAAAAA4AsAAAAAAAAAAAAA4AsAAAAAAADmCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3wsAAAAAAADfCwAAAAAAAAAAAAAAAPC/"
				],
				[
					305,
					9,
					"left_delete",
					null,
					"CgAAABIMAAAAAAAAEgwAAAAAAAABAAAAIOALAAAAAAAA4AsAAAAAAAAGAAAAICAgICAgCwwAAAAAAAALDAAAAAAAAAEAAAAgCgwAAAAAAAAKDAAAAAAAAAEAAAAgCQwAAAAAAAAJDAAAAAAAAAEAAAAgCAwAAAAAAAAIDAAAAAAAAAEAAAAgBwwAAAAAAAAHDAAAAAAAAAEAAAAgBgwAAAAAAAAGDAAAAAAAAAEAAAAgBQwAAAAAAAAFDAAAAAAAAAEAAAAgBAwAAAAAAAAEDAAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAEwwAAAAAAAATDAAAAAAAAAAAAAAAAPC/"
				],
				[
					306,
					1,
					"left_delete",
					null,
					"AQAAAAMMAAAAAAAAAwwAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAABAwAAAAAAAAEDAAAAAAAAAAAAAAAAPC/"
				],
				[
					308,
					8,
					"left_delete",
					null,
					"CAAAACoMAAAAAAAAKgwAAAAAAAABAAAAICkMAAAAAAAAKQwAAAAAAAABAAAAICgMAAAAAAAAKAwAAAAAAAABAAAAfScMAAAAAAAAJwwAAAAAAAABAAAAICYMAAAAAAAAJgwAAAAAAAABAAAAICUMAAAAAAAAJQwAAAAAAAABAAAAICQMAAAAAAAAJAwAAAAAAAABAAAAICMMAAAAAAAAIwwAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAKwwAAAAAAAArDAAAAAAAAAAAAAAAIHNA"
				],
				[
					309,
					2,
					"left_delete",
					null,
					"AgAAACIMAAAAAAAAIgwAAAAAAAABAAAAICEMAAAAAAAAIQwAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAIwwAAAAAAAAjDAAAAAAAAAAAAAAAAPC/"
				],
				[
					312,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAAMMAAAAAAAABAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwwAAAAAAAADDAAAAAAAAAAAAAAAAPC/"
				],
				[
					313,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAAQMAAAAAAAABQwAAAAAAAAAAAAABQwAAAAAAAALDAAAAAAAAAAAAAAFDAAAAAAAAAUMAAAAAAAABgAAACAgICAgIAUMAAAAAAAADAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAwAAAAAAAAEDAAAAAAAAAAAAAAAAPC/"
				],
				[
					315,
					1,
					"reindent",
					null,
					"AQAAACsMAAAAAAAAMgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwwAAAAAAAArDAAAAAAAAAAAAAAAAFJA"
				],
				[
					316,
					1,
					"left_delete",
					null,
					"AQAAADEMAAAAAAAAMQwAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAAMgwAAAAAAAAyDAAAAAAAAAAAAAAAAPC/"
				],
				[
					317,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAADEMAAAAAAAAMgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQwAAAAAAAAxDAAAAAAAAAAAAAAAAPC/"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADIMAAAAAAAAMwwAAAAAAAAAAAAAMwwAAAAAAAA5DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgwAAAAAAAAyDAAAAAAAAAAAAAAAAPC/"
				],
				[
					321,
					1,
					"left_delete",
					null,
					"AgAAAMENAAAAAAAAwQ0AAAAAAAABAAAACjMMAAAAAAAAMwwAAAAAAAAGAAAAICAgICAg",
					"AQAAAAAAAAABAAAAwg0AAAAAAADCDQAAAAAAAAAAAAAAAPC/"
				],
				[
					327,
					1,
					"left_delete",
					null,
					"AQAAAGMBAAAAAAAAYwEAAAAAAAA1AAAAYXV0byYgbWVzaGxldFNwZWNzID0gcHJvY2Vzc2VkTWVzaC5tZXNobGV0U3BlY3M7CiAgICA",
					"AQAAAAAAAAABAAAAYwEAAAAAAACYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					331,
					14,
					"right_delete",
					null,
					"DgAAAMYAAAAAAAAAxgAAAAAAAAABAAAAcMYAAAAAAAAAxgAAAAAAAAABAAAAcsYAAAAAAAAAxgAAAAAAAAABAAAAb8YAAAAAAAAAxgAAAAAAAAABAAAAY8YAAAAAAAAAxgAAAAAAAAABAAAAZcYAAAAAAAAAxgAAAAAAAAABAAAAc8YAAAAAAAAAxgAAAAAAAAABAAAAc8YAAAAAAAAAxgAAAAAAAAABAAAAZcYAAAAAAAAAxgAAAAAAAAABAAAAZMYAAAAAAAAAxgAAAAAAAAABAAAATcYAAAAAAAAAxgAAAAAAAAABAAAAZcYAAAAAAAAAxgAAAAAAAAABAAAAc8YAAAAAAAAAxgAAAAAAAAABAAAAaMYAAAAAAAAAxgAAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAxgAAAAAAAADGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					336,
					1,
					"insert",
					{
						"characters": "msh/"
					},
					"BQAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA4wAAAAAAAADjAAAAAAAAAB0AAABnZW5lcmF0ZU1lc2hsZXRzICYmIGlzSW5kZXhlZOMAAAAAAAAA5AAAAAAAAAAAAAAA5AAAAAAAAADlAAAAAAAAAAAAAADlAAAAAAAAAOYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gAAAAAAAAD/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					337,
					1,
					"paste",
					null,
					"AQAAAOYAAAAAAAAA8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5gAAAAAAAADmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					338,
					13,
					"left_delete",
					null,
					"DQAAAO8AAAAAAAAA7wAAAAAAAAABAAAAdO4AAAAAAAAA7gAAAAAAAAABAAAAbu0AAAAAAAAA7QAAAAAAAAABAAAAdewAAAAAAAAA7AAAAAAAAAABAAAAb+sAAAAAAAAA6wAAAAAAAAABAAAAQ+oAAAAAAAAA6gAAAAAAAAABAAAAeOkAAAAAAAAA6QAAAAAAAAABAAAAZegAAAAAAAAA6AAAAAAAAAABAAAAZOcAAAAAAAAA5wAAAAAAAAABAAAAbuYAAAAAAAAA5gAAAAAAAAABAAAAaeUAAAAAAAAA5QAAAAAAAAABAAAAL+QAAAAAAAAA5AAAAAAAAAABAAAAaOMAAAAAAAAA4wAAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA8AAAAAAAAADwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					339,
					1,
					"insert",
					{
						"characters": "esh"
					},
					"AwAAAOMAAAAAAAAA5AAAAAAAAAAAAAAA5AAAAAAAAADlAAAAAAAAAAAAAADlAAAAAAAAAOYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wAAAAAAAADjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					340,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAOYAAAAAAAAA5wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5gAAAAAAAADmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					341,
					1,
					"paste",
					null,
					"AQAAAOcAAAAAAAAA8QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wAAAAAAAADnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					342,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAPEAAAAAAAAA8gAAAAAAAAAAAAAA8gAAAAAAAADzAAAAAAAAAAAAAADzAAAAAAAAAPQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QAAAAAAAADxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					343,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAPQAAAAAAAAA9QAAAAAAAAAAAAAA9QAAAAAAAAD2AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AAAAAAAAAD0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					346,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEcBAAAAAAAASAEAAAAAAAAAAAAASAEAAAAAAABMAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwEAAAAAAABHAQAAAAAAAAAAAAAAYG5A"
				],
				[
					348,
					1,
					"left_delete",
					null,
					"AgAAAEYBAAAAAAAARgEAAAAAAAABAAAAIEcBAAAAAAAARwEAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAARwEAAAAAAABHAQAAAAAAAAAAAAAAAEJA"
				],
				[
					349,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAEYBAAAAAAAARwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgEAAAAAAABGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					351,
					1,
					"left_delete",
					null,
					"AQAAAEUBAAAAAAAARQEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAARgEAAAAAAABGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					352,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEUBAAAAAAAARgEAAAAAAAAAAAAARgEAAAAAAABIAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQEAAAAAAABFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					354,
					1,
					"insert",
					{
						"characters": "\tre"
					},
					"AwAAAEUBAAAAAAAARgEAAAAAAAAAAAAARgEAAAAAAABHAQAAAAAAAAAAAABHAQAAAAAAAEgBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQEAAAAAAABFAQAAAAAAAAAAAAAAADJA"
				],
				[
					355,
					1,
					"insert_completion",
					{
						"completion": "return",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "return"
					},
					"AgAAAEYBAAAAAAAARgEAAAAAAAACAAAAcmVGAQAAAAAAAEwBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAEAAAAAAABIAQAAAAAAAAAAAAAAAPC/"
				],
				[
					356,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEwBAAAAAAAATQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAEAAAAAAABMAQAAAAAAAAAAAAAAAPC/"
				],
				[
					361,
					1,
					"insert",
					{
						"characters": "M"
					},
					"AgAAAAsBAAAAAAAADAEAAAAAAAAAAAAADAEAAAAAAAAMAQAAAAAAAAwAAABHZW5lcmF0aW5nIG0",
					"AQAAAAAAAAABAAAACwEAAAAAAAAXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					363,
					1,
					"insert",
					{
						"characters": "generation"
					},
					"CgAAABQBAAAAAAAAFQEAAAAAAAAAAAAAFQEAAAAAAAAWAQAAAAAAAAAAAAAWAQAAAAAAABcBAAAAAAAAAAAAABcBAAAAAAAAGAEAAAAAAAAAAAAAGAEAAAAAAAAZAQAAAAAAAAAAAAAZAQAAAAAAABoBAAAAAAAAAAAAABoBAAAAAAAAGwEAAAAAAAAAAAAAGwEAAAAAAAAcAQAAAAAAAAAAAAAcAQAAAAAAAB0BAAAAAAAAAAAAAB0BAAAAAAAAHgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAEAAAAAAAAUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					364,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAB4BAAAAAAAAHwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgEAAAAAAAAeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					366,
					1,
					"insert",
					{
						"characters": "non0i"
					},
					"BQAAACMBAAAAAAAAJAEAAAAAAAAAAAAAJAEAAAAAAAAlAQAAAAAAAAAAAAAlAQAAAAAAACYBAAAAAAAAAAAAACYBAAAAAAAAJwEAAAAAAAAAAAAAJwEAAAAAAAAoAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwEAAAAAAAAjAQAAAAAAAAAAAAAAAPC/"
				],
				[
					367,
					2,
					"left_delete",
					null,
					"AgAAACcBAAAAAAAAJwEAAAAAAAABAAAAaSYBAAAAAAAAJgEAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAKAEAAAAAAAAoAQAAAAAAAAAAAAAAAPC/"
				],
				[
					368,
					1,
					"insert",
					{
						"characters": "-indexed"
					},
					"CAAAACYBAAAAAAAAJwEAAAAAAAAAAAAAJwEAAAAAAAAoAQAAAAAAAAAAAAAoAQAAAAAAACkBAAAAAAAAAAAAACkBAAAAAAAAKgEAAAAAAAAAAAAAKgEAAAAAAAArAQAAAAAAAAAAAAArAQAAAAAAACwBAAAAAAAAAAAAACwBAAAAAAAALQEAAAAAAAAAAAAALQEAAAAAAAAuAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgEAAAAAAAAmAQAAAAAAAAAAAAAAAPC/"
				],
				[
					369,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAC4BAAAAAAAALwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgEAAAAAAAAuAQAAAAAAAAAAAAAAAPC/"
				],
				[
					371,
					1,
					"insert",
					{
						"characters": " not"
					},
					"BAAAAEsBAAAAAAAATAEAAAAAAAAAAAAATAEAAAAAAABNAQAAAAAAAAAAAABNAQAAAAAAAE4BAAAAAAAAAAAAAE4BAAAAAAAATwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwEAAAAAAABLAQAAAAAAAAAAAAAAAPC/"
				],
				[
					372,
					1,
					"insert",
					{
						"characters": " sy"
					},
					"AwAAAE8BAAAAAAAAUAEAAAAAAAAAAAAAUAEAAAAAAABRAQAAAAAAAAAAAABRAQAAAAAAAFIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwEAAAAAAABPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					373,
					1,
					"left_delete",
					null,
					"AQAAAFEBAAAAAAAAUQEAAAAAAAABAAAAeQ",
					"AQAAAAAAAAABAAAAUgEAAAAAAABSAQAAAAAAAAAAAAAAAPC/"
				],
				[
					374,
					1,
					"insert",
					{
						"characters": "up"
					},
					"AgAAAFEBAAAAAAAAUgEAAAAAAAAAAAAAUgEAAAAAAABTAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQEAAAAAAABRAQAAAAAAAAAAAAAAAPC/"
				],
				[
					375,
					1,
					"insert_completion",
					{
						"completion": "supported",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "supported"
					},
					"AgAAAFABAAAAAAAAUAEAAAAAAAADAAAAc3VwUAEAAAAAAABZAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwEAAAAAAABTAQAAAAAAAAAAAAAAAPC/"
				],
				[
					376,
					1,
					"insert",
					{
						"characters": " y"
					},
					"AgAAAFkBAAAAAAAAWgEAAAAAAAAAAAAAWgEAAAAAAABbAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQEAAAAAAABZAQAAAAAAAAAAAAAAAPC/"
				],
				[
					377,
					1,
					"insert_completion",
					{
						"completion": "yet",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "yet"
					},
					"AgAAAFoBAAAAAAAAWgEAAAAAAAABAAAAeVoBAAAAAAAAXQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwEAAAAAAABbAQAAAAAAAAAAAAAAAPC/"
				],
				[
					378,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAF0BAAAAAAAAXgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQEAAAAAAABdAQAAAAAAAAAAAAAAAPC/"
				],
				[
					379,
					1,
					"right_delete",
					null,
					"AQAAAF4BAAAAAAAAXgEAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAXgEAAAAAAABeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					380,
					1,
					"insert",
					{
						"characters": "!!!"
					},
					"AwAAAF4BAAAAAAAAXwEAAAAAAAAAAAAAXwEAAAAAAABgAQAAAAAAAAAAAABgAQAAAAAAAGEBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgEAAAAAAABeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					385,
					3,
					"left_delete",
					null,
					"AwAAAAUBAAAAAAAABQEAAAAAAAABAAAARwQBAAAAAAAABAEAAAAAAAABAAAAQgMBAAAAAAAAAwEAAAAAAAABAAAARA",
					"AQAAAAAAAAABAAAABgEAAAAAAAAGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					386,
					1,
					"insert",
					{
						"characters": "WRN"
					},
					"AwAAAAMBAAAAAAAABAEAAAAAAAAAAAAABAEAAAAAAAAFAQAAAAAAAAAAAAAFAQAAAAAAAAYBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwEAAAAAAAADAQAAAAAAAAAAAAAAAPC/"
				],
				[
					389,
					4,
					"left_delete",
					null,
					"BAAAADwOAAAAAAAAPA4AAAAAAAABAAAAfTsOAAAAAAAAOw4AAAAAAAABAAAAIDoOAAAAAAAAOg4AAAAAAAABAAAAIDkOAAAAAAAAOQ4AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAPQ4AAAAAAAA9DgAAAAAAAAAAAAAAAPC/"
				],
				[
					392,
					1,
					"unindent",
					null,
					"LAAAAHQBAAAAAAAAdAEAAAAAAAACAAAAICDRAQAAAAAAANEBAAAAAAAAAgAAACAgKgIAAAAAAAAqAgAAAAAAAAIAAAAgIC0CAAAAAAAALQIAAAAAAAACAAAAICBPAgAAAAAAAE8CAAAAAAAAAgAAACAgfAIAAAAAAAB8AgAAAAAAAAIAAAAgIKcCAAAAAAAApwIAAAAAAAACAAAAICDVAgAAAAAAANUCAAAAAAAAAgAAACAgAAMAAAAAAAAAAwAAAAAAAAIAAAAgIGwDAAAAAAAAbAMAAAAAAAACAAAAICCOAwAAAAAAAI4DAAAAAAAAAgAAACAgvgMAAAAAAAC+AwAAAAAAAAIAAAAgIBUEAAAAAAAAFQQAAAAAAAACAAAAICBYBAAAAAAAAFgEAAAAAAAAAgAAACAgkwQAAAAAAACTBAAAAAAAAAIAAAAgINsEAAAAAAAA2wQAAAAAAAACAAAAICAlBQAAAAAAACUFAAAAAAAAAgAAACAgcAUAAAAAAABwBQAAAAAAAAIAAAAgIAQGAAAAAAAABAYAAAAAAAACAAAAICCvBgAAAAAAAK8GAAAAAAAAAgAAACAgRgcAAAAAAABGBwAAAAAAAAIAAAAgINQHAAAAAAAA1AcAAAAAAAACAAAAICAdCAAAAAAAAB0IAAAAAAAAAgAAACAg0ggAAAAAAADSCAAAAAAAAAIAAAAgIPAIAAAAAAAA8AgAAAAAAAACAAAAICD/CAAAAAAAAP8IAAAAAAAAAgAAACAgCAkAAAAAAAAICQAAAAAAAAIAAAAgIIEJAAAAAAAAgQkAAAAAAAACAAAAICAPCgAAAAAAAA8KAAAAAAAAAgAAACAgnwoAAAAAAACfCgAAAAAAAAIAAAAgIC8LAAAAAAAALwsAAAAAAAACAAAAICBbCwAAAAAAAFsLAAAAAAAAAgAAACAgeAsAAAAAAAB4CwAAAAAAAAIAAAAgIH8LAAAAAAAAfwsAAAAAAAACAAAAICChCwAAAAAAAKELAAAAAAAAAgAAACAgxQsAAAAAAADFCwAAAAAAAAIAAAAgIMwLAAAAAAAAzAsAAAAAAAACAAAAICADDAAAAAAAAAMMAAAAAAAAAgAAACAgOAwAAAAAAAA4DAAAAAAAAAIAAAAgIHoMAAAAAAAAegwAAAAAAAACAAAAICAHDQAAAAAAAAcNAAAAAAAAAgAAACAgSg0AAAAAAABKDQAAAAAAAAIAAAAgIH4NAAAAAAAAfg0AAAAAAAACAAAAICCCDQAAAAAAAIINAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAOQ4AAAAAAAB0AQAAAAAAAAAAAAAAAPC/"
				],
				[
					396,
					1,
					"insert",
					{
						"characters": "SceneBui"
					},
					"CAAAAHADAAAAAAAAcQMAAAAAAAAAAAAAcQMAAAAAAAByAwAAAAAAAAAAAAByAwAAAAAAAHMDAAAAAAAAAAAAAHMDAAAAAAAAdAMAAAAAAAAAAAAAdAMAAAAAAAB1AwAAAAAAAAAAAAB1AwAAAAAAAHYDAAAAAAAAAAAAAHYDAAAAAAAAdwMAAAAAAAAAAAAAdwMAAAAAAAB4AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcAMAAAAAAABwAwAAAAAAAAAAAAAAAPC/"
				],
				[
					397,
					1,
					"insert",
					{
						"characters": "lder::"
					},
					"BgAAAHgDAAAAAAAAeQMAAAAAAAAAAAAAeQMAAAAAAAB6AwAAAAAAAAAAAAB6AwAAAAAAAHsDAAAAAAAAAAAAAHsDAAAAAAAAfAMAAAAAAAAAAAAAfAMAAAAAAAB9AwAAAAAAAAAAAAB9AwAAAAAAAH4DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAMAAAAAAAB4AwAAAAAAAAAAAAAAAPC/"
				],
				[
					403,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"AwAAAD0AAAAAAAAAPgAAAAAAAAAAAAAAPgAAAAAAAAA/AAAAAAAAAAAAAAA/AAAAAAAAAEAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQAAAAAAAAA9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					405,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAD4AAAAAAAAAPwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAAAAA"
				],
				[
					406,
					1,
					"paste",
					null,
					"AQAAAD8AAAAAAAAAtAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwAAAAAAAAA/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					409,
					1,
					"insert",
					{
						"characters": "Unique"
					},
					"BwAAACwBAAAAAAAALQEAAAAAAAAAAAAALQEAAAAAAAAtAQAAAAAAAAYAAABTaGFyZWQtAQAAAAAAAC4BAAAAAAAAAAAAAC4BAAAAAAAALwEAAAAAAAAAAAAALwEAAAAAAAAwAQAAAAAAAAAAAAAwAQAAAAAAADEBAAAAAAAAAAAAADEBAAAAAAAAMgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAEAAAAAAAAyAQAAAAAAAAAAAAAAAPC/"
				],
				[
					417,
					1,
					"paste",
					null,
					"AgAAAIYBAAAAAAAAjwEAAAAAAAAAAAAAjwEAAAAAAACPAQAAAAAAAAkAAABTaGFyZWRQdHI",
					"AQAAAAAAAAABAAAAhgEAAAAAAACPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					427,
					1,
					"paste",
					null,
					"AgAAAB4BAAAAAAAALAEAAAAAAAAAAAAALAEAAAAAAAAsAQAAAAAAAAwAAABTY2VuZUJ1aWxkZXI",
					"AQAAAAAAAAABAAAAHgEAAAAAAAAqAQAAAAAAAAAAAAAAAPC/"
				],
				[
					431,
					1,
					"paste",
					null,
					"AgAAAJYBAAAAAAAApAEAAAAAAAAAAAAApAEAAAAAAACkAQAAAAAAAAwAAABTY2VuZUJ1aWxkZXI",
					"AQAAAAAAAAABAAAAlgEAAAAAAACiAQAAAAAAAAAAAAAAAPC/"
				],
				[
					434,
					1,
					"left_delete",
					null,
					"AQAAAE0BAAAAAAAATQEAAAAAAAAsAAAAc3RkOjpzaGFyZWRfcHRyPERldmljZT4gcERldmljZSwgRmxhZ3MgZmxhZ3M",
					"AQAAAAAAAAABAAAATQEAAAAAAAB5AQAAAAAAAAAAAAAAAPC/"
				],
				[
					437,
					1,
					"left_delete",
					null,
					"AQAAAHkBAAAAAAAAeQEAAAAAAAAOAAAAcERldmljZSwgZmxhZ3M",
					"AQAAAAAAAAABAAAAeQEAAAAAAACHAQAAAAAAAAAAAAAAAPC/"
				],
				[
					440,
					1,
					"left_delete",
					null,
					"AQAAAFoAAAAAAAAAWgAAAAAAAABPAAAAc3RkOjpzaGFyZWRfcHRyPERldmljZT4gcERldmljZSwgRmxhZ3MgZmxhZ3MpIDogbXBEZXZpY2UocERldmljZSksIG1GbGFncyhmbGFncw",
					"AQAAAAAAAAABAAAAWgAAAAAAAACpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					444,
					1,
					"paste",
					null,
					"AgAAAD8AAAAAAAAATQAAAAAAAAAAAAAATQAAAAAAAABNAAAAAAAAAAwAAABTY2VuZUJ1aWxkZXI",
					"AQAAAAAAAAABAAAAPwAAAAAAAABLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					448,
					1,
					"paste",
					null,
					"AgAAAE8AAAAAAAAAXQAAAAAAAAAAAAAAXQAAAAAAAABdAAAAAAAAAAwAAABTY2VuZUJ1aWxkZXI",
					"AQAAAAAAAAABAAAATwAAAAAAAABbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					452,
					2,
					"right_delete",
					null,
					"AgAAAGQAAAAAAAAAZAAAAAAAAAABAAAAIGQAAAAAAAAAZAAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAZAAAAAAAAABkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					454,
					2,
					"right_delete",
					null,
					"AgAAAIwAAAAAAAAAjAAAAAAAAAABAAAAIIwAAAAAAAAAjAAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAjAAAAAAAAACMAAAAAAAAAAAAAAAAADJA"
				],
				[
					458,
					1,
					"left_delete",
					null,
					"AQAAAGIAAAAAAAAAYgAAAAAAAABpAAAAICBtcEZlbmNlID0gR3B1RmVuY2U6OmNyZWF0ZShtcERldmljZSk7CiAgbVNjZW5lRGF0YS5wTWF0ZXJpYWxTeXN0ZW0gPSBNYXRlcmlhbFN5c3RlbTo6Y3JlYXRlKG1wRGV2aWNlKTsK",
					"AQAAAAAAAAABAAAAYgAAAAAAAADLAAAAAAAAAAAAAAAAAAAA"
				],
				[
					461,
					1,
					"left_delete",
					null,
					"AQAAAJkAAAAAAAAAmQAAAAAAAAAsAAAAICAgIHJldHVybiBVbmlxdWVQdHIobmV3IE1lc2hsZXRCdWlsZGVyKCkpOwo",
					"AQAAAAAAAAABAAAAmQAAAAAAAADFAAAAAAAAAAAAAAAAAAAA"
				],
				[
					462,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJkAAAAAAAAAmgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmQAAAAAAAACZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					464,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGIAAAAAAAAAYwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgAAAAAAAABiAAAAAAAAAAAAAAAAAAAA"
				],
				[
					467,
					1,
					"left_delete",
					null,
					"AQAAAJ0AAAAAAAAAnQAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					478,
					1,
					"paste",
					null,
					"AgAAAIEAAAAAAAAAjwAAAAAAAAAAAAAAjwAAAAAAAACPAAAAAAAAAAwAAABTY2VuZUJ1aWxkZXI",
					"AQAAAAAAAAABAAAAgQAAAAAAAACNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					484,
					1,
					"paste",
					null,
					"AQAAAO4AAAAAAAAAFgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gAAAAAAAADuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					486,
					1,
					"right_delete",
					null,
					"AQAAABUBAAAAAAAAFQEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAFQEAAAAAAAAVAQAAAAAAAAAAAAAAAPC/"
				],
				[
					488,
					1,
					"right_delete",
					null,
					"AQAAAO4AAAAAAAAA7gAAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAA7gAAAAAAAADuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					491,
					1,
					"right_delete",
					null,
					"AQAAANoAAAAAAAAA2gAAAAAAAAAJAAAAUHJvY2Vzc2Vk",
					"AQAAAAAAAAABAAAA2gAAAAAAAADjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					494,
					1,
					"insert",
					{
						"characters": "indi"
					},
					"BQAAAGEBAAAAAAAAYgEAAAAAAAAAAAAAYgEAAAAAAABiAQAAAAAAABQAAABtZXNoLmluZGV4Q291bnQgPT0gMGIBAAAAAAAAYwEAAAAAAAAAAAAAYwEAAAAAAABkAQAAAAAAAAAAAABkAQAAAAAAAGUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQEAAAAAAAB1AQAAAAAAAAAAAAAAAPC/"
				],
				[
					495,
					1,
					"insert_completion",
					{
						"completion": "indices",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "indices"
					},
					"AgAAAGEBAAAAAAAAYQEAAAAAAAAEAAAAaW5kaWEBAAAAAAAAaAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQEAAAAAAABlAQAAAAAAAAAAAAAAAPC/"
				],
				[
					496,
					1,
					"insert",
					{
						"characters": ".e"
					},
					"AgAAAGgBAAAAAAAAaQEAAAAAAAAAAAAAaQEAAAAAAABqAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAEAAAAAAABoAQAAAAAAAAAAAAAAAPC/"
				],
				[
					497,
					1,
					"insert_completion",
					{
						"completion": "empty",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "empty"
					},
					"AgAAAGkBAAAAAAAAaQEAAAAAAAABAAAAZWkBAAAAAAAAbgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagEAAAAAAABqAQAAAAAAAAAAAAAAAPC/"
				],
				[
					498,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAG4BAAAAAAAAcAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgEAAAAAAABuAQAAAAAAAAAAAAAAAPC/"
				],
				[
					504,
					1,
					"paste",
					null,
					"AgAAAMYAAAAAAAAA6QAAAAAAAAAAAAAA6QAAAAAAAADpAAAAAAAAAH0AAABjb25zdCBTY2VuZUJ1aWxkZXI6Ok1lc2gmIG1lc2gsIGNvbnN0IHN0ZDo6dmVjdG9yPHVpbnQzMl90PiYgaW5kaWNlcywgc3RkOjp2ZWN0b3I8U2NlbmVCdWlsZGVyOjpNZXNobGV0U3BlYz4mIG1lc2hsZXRTcGVjcykgew",
					"AQAAAAAAAAABAAAAxgAAAAAAAABDAQAAAAAAAAAAAAAAAPC/"
				],
				[
					505,
					1,
					"left_delete",
					null,
					"AQAAAOgAAAAAAAAA6AAAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAA6QAAAAAAAADpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					506,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOgAAAAAAAAA6QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AAAAAAAAADoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					507,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAOkAAAAAAAAA6wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6QAAAAAAAADpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					508,
					1,
					"right_delete",
					null,
					"AQAAAOoAAAAAAAAA6gAAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAA6gAAAAAAAADqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					512,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOwAAAAAAAAA7QAAAAAAAAAAAAAA7QAAAAAAAADuAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AAAAAAAAADsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					514,
					1,
					"insert",
					{
						"characters": "at"
					},
					"AgAAAOwAAAAAAAAA7QAAAAAAAAAAAAAA7QAAAAAAAADuAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AAAAAAAAADsAAAAAAAAAAAAAAAAADJA"
				],
				[
					515,
					1,
					"left_delete",
					null,
					"AQAAAO0AAAAAAAAA7QAAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAA7gAAAAAAAADuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					516,
					1,
					"insert_completion",
					{
						"completion": "auto",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "auto"
					},
					"AgAAAOwAAAAAAAAA7AAAAAAAAAABAAAAYewAAAAAAAAA8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QAAAAAAAADtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					517,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAPAAAAAAAAAA8QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8AAAAAAAAADwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					518,
					1,
					"insert",
					{
						"characters": " me"
					},
					"AwAAAPEAAAAAAAAA8gAAAAAAAAAAAAAA8gAAAAAAAADzAAAAAAAAAAAAAADzAAAAAAAAAPQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QAAAAAAAADxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					520,
					1,
					"insert_completion",
					{
						"completion": "meshletSpecs",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "meshletSpecs"
					},
					"AgAAAPIAAAAAAAAA8gAAAAAAAAACAAAAbWXyAAAAAAAAAP4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AAAAAAAAAD0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					521,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA/wAAAAAAAAAAAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gAAAAAAAAD+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					522,
					1,
					"insert",
					{
						"characters": " mes"
					},
					"BAAAAAABAAAAAAAAAQEAAAAAAAAAAAAAAQEAAAAAAAACAQAAAAAAAAAAAAACAQAAAAAAAAMBAAAAAAAAAAAAAAMBAAAAAAAABAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAPC/"
				],
				[
					526,
					1,
					"insert_completion",
					{
						"completion": "mesh",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "mesh"
					},
					"AgAAAAEBAAAAAAAAAQEAAAAAAAADAAAAbWVzAQEAAAAAAAAFAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAEAAAAAAAAEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					527,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAAUBAAAAAAAABgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQEAAAAAAAAFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					528,
					1,
					"insert",
					{
						"characters": "mes"
					},
					"AwAAAAYBAAAAAAAABwEAAAAAAAAAAAAABwEAAAAAAAAIAQAAAAAAAAAAAAAIAQAAAAAAAAkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgEAAAAAAAAGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					530,
					1,
					"insert_completion",
					{
						"completion": "meshletSpecs",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "meshletSpecs"
					},
					"AgAAAAYBAAAAAAAABgEAAAAAAAADAAAAbWVzBgEAAAAAAAASAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQEAAAAAAAAJAQAAAAAAAAAAAAAAAPC/"
				],
				[
					531,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABIBAAAAAAAAEwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgEAAAAAAAASAQAAAAAAAAAAAAAAAPC/"
				],
				[
					535,
					1,
					"left_delete",
					null,
					"AQAAAOsAAAAAAAAA6wAAAAAAAAA/AAAACWF1dG8mIG1lc2hsZXRTcGVjcyA9IG1lc2gubWVzaGxldFNwZWNzOwoJbWVzaGxldFNwZWNzLmNsZWFyKCk7",
					"AQAAAAAAAAABAAAAKgEAAAAAAADrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					537,
					2,
					"left_delete",
					null,
					"AgAAAOsAAAAAAAAA6wAAAAAAAAABAAAACuoAAAAAAAAA6gAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA7AAAAAAAAADsAAAAAAAAAAAAAAAAAAAA"
				],
				[
					539,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAHsBAAAAAAAAfAEAAAAAAAAAAAAAfAEAAAAAAAB+AQAAAAAAAAAAAAB+AQAAAAAAAH8BAAAAAAAAAAAAAH8BAAAAAAAAgQEAAAAAAAAAAAAAfAEAAAAAAAB8AQAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAAewEAAAAAAAB7AQAAAAAAAAAAAAAA0IRA"
				],
				[
					540,
					1,
					"paste",
					null,
					"AQAAAH8BAAAAAAAAvgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwEAAAAAAAB/AQAAAAAAAAAAAAAAAPC/"
				],
				[
					543,
					1,
					"right_delete",
					null,
					"AQAAAH8BAAAAAAAAfwEAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAAfwEAAAAAAAB/AQAAAAAAAAAAAAAAAPC/"
				],
				[
					550,
					1,
					"paste",
					null,
					"AgAAAPAAAAAAAAAA+QAAAAAAAAAAAAAA+QAAAAAAAAD5AAAAAAAAAAcAAABpbmRpY2Vz",
					"AQAAAAAAAAABAAAA8AAAAAAAAAD3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					554,
					1,
					"paste",
					null,
					"AgAAALcCAAAAAAAAwAIAAAAAAAAAAAAAwAIAAAAAAADAAgAAAAAAAAcAAABpbmRpY2Vz",
					"AQAAAAAAAAABAAAAtwIAAAAAAAC+AgAAAAAAAAAAAAAAAPC/"
				],
				[
					558,
					1,
					"paste",
					null,
					"AgAAAJ0EAAAAAAAApgQAAAAAAAAAAAAApgQAAAAAAACmBAAAAAAAAAcAAABpbmRpY2Vz",
					"AQAAAAAAAAABAAAAnQQAAAAAAACkBAAAAAAAAAAAAAAAAPC/"
				],
				[
					562,
					1,
					"paste",
					null,
					"AgAAAC0FAAAAAAAANgUAAAAAAAAAAAAANgUAAAAAAAA2BQAAAAAAAAcAAABpbmRpY2Vz",
					"AQAAAAAAAAABAAAALQUAAAAAAAA0BQAAAAAAAAAAAAAAAPC/"
				],
				[
					566,
					1,
					"paste",
					null,
					"AgAAAHcFAAAAAAAAgAUAAAAAAAAAAAAAgAUAAAAAAACABQAAAAAAAAcAAABpbmRpY2Vz",
					"AQAAAAAAAAABAAAAdwUAAAAAAAB+BQAAAAAAAAAAAAAAAPC/"
				],
				[
					570,
					1,
					"paste",
					null,
					"AgAAAMMFAAAAAAAAzAUAAAAAAAAAAAAAzAUAAAAAAADMBQAAAAAAAAcAAABpbmRpY2Vz",
					"AQAAAAAAAAABAAAAwwUAAAAAAADKBQAAAAAAAAAAAAAAAPC/"
				],
				[
					574,
					1,
					"paste",
					null,
					"AgAAAFkKAAAAAAAAYgoAAAAAAAAAAAAAYgoAAAAAAABiCgAAAAAAAAcAAABpbmRpY2Vz",
					"AQAAAAAAAAABAAAAWQoAAAAAAABgCgAAAAAAAAAAAAAAAPC/"
				],
				[
					578,
					1,
					"paste",
					null,
					"AgAAAOkKAAAAAAAA8goAAAAAAAAAAAAA8goAAAAAAADyCgAAAAAAAAcAAABpbmRpY2Vz",
					"AQAAAAAAAAABAAAA6QoAAAAAAADwCgAAAAAAAAAAAAAAAPC/"
				],
				[
					582,
					1,
					"paste",
					null,
					"AgAAAHsLAAAAAAAAhAsAAAAAAAAAAAAAhAsAAAAAAACECwAAAAAAAAcAAABpbmRpY2Vz",
					"AQAAAAAAAAABAAAAewsAAAAAAACCCwAAAAAAAAAAAAAAAPC/"
				],
				[
					589,
					1,
					"paste",
					null,
					"AQAAALcCAAAAAAAAuwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtwIAAAAAAAC3AgAAAAAAAAAAAAAAAPC/"
				],
				[
					590,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAALsCAAAAAAAAvAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwIAAAAAAAC7AgAAAAAAAAAAAAAAAPC/"
				],
				[
					602,
					1,
					"paste",
					null,
					"AQAAAKIEAAAAAAAApwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogQAAAAAAACiBAAAAAAAAAAAAAAAAPC/"
				],
				[
					605,
					1,
					"paste",
					null,
					"AQAAADcFAAAAAAAAPAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwUAAAAAAAA3BQAAAAAAAAAAAAAAAPC/"
				],
				[
					608,
					1,
					"paste",
					null,
					"AQAAAIYFAAAAAAAAiwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgUAAAAAAACGBQAAAAAAAAAAAAAAAPC/"
				],
				[
					611,
					1,
					"paste",
					null,
					"AQAAANcFAAAAAAAA3AUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wUAAAAAAADXBQAAAAAAAAAAAAAAAPC/"
				],
				[
					617,
					1,
					"paste",
					null,
					"AQAAAHIKAAAAAAAAdwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgoAAAAAAAByCgAAAAAAAAAAAAAAAPC/"
				],
				[
					620,
					1,
					"paste",
					null,
					"AQAAAAcLAAAAAAAADAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwsAAAAAAAAHCwAAAAAAAAAAAAAAAPC/"
				],
				[
					623,
					1,
					"paste",
					null,
					"AQAAAJ4LAAAAAAAAowsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngsAAAAAAACeCwAAAAAAAAAAAAAAAPC/"
				],
				[
					626,
					1,
					"paste",
					null,
					"AQAAAPAAAAAAAAAA9QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8AAAAAAAAADwAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/lava_lib/reader_lsd/grammar_lsd.h",
			"settings":
			{
				"buffer_size": 33319,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "\nstruct"
					},
					"CAAAAIMQAAAAAAAAhBAAAAAAAAAAAAAAhBAAAAAAAACIEAAAAAAAAAAAAACIEAAAAAAAAIkQAAAAAAAAAAAAAIkQAAAAAAAAihAAAAAAAAAAAAAAihAAAAAAAACLEAAAAAAAAAAAAACLEAAAAAAAAIwQAAAAAAAAAAAAAIwQAAAAAAAAjRAAAAAAAAAAAAAAjRAAAAAAAACOEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgxAAAAAAAACDEAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": " cmd_"
					},
					"BQAAAI4QAAAAAAAAjxAAAAAAAAAAAAAAjxAAAAAAAACQEAAAAAAAAAAAAACQEAAAAAAAAJEQAAAAAAAAAAAAAJEQAAAAAAAAkhAAAAAAAAAAAAAAkhAAAAAAAACTEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjhAAAAAAAACOEAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "procedura"
					},
					"CQAAAJMQAAAAAAAAlBAAAAAAAAAAAAAAlBAAAAAAAACVEAAAAAAAAAAAAACVEAAAAAAAAJYQAAAAAAAAAAAAAJYQAAAAAAAAlxAAAAAAAAAAAAAAlxAAAAAAAACYEAAAAAAAAAAAAACYEAAAAAAAAJkQAAAAAAAAAAAAAJkQAAAAAAAAmhAAAAAAAAAAAAAAmhAAAAAAAACbEAAAAAAAAAAAAACbEAAAAAAAAJwQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkxAAAAAAAACTEAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "l;"
					},
					"AgAAAJwQAAAAAAAAnRAAAAAAAAAAAAAAnRAAAAAAAACeEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnBAAAAAAAACcEAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACYTAAAAAAAAJxMAAAAAAAAAAAAAJxMAAAAAAAAvEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJhMAAAAAAAAmEwAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "cmd_p"
					},
					"BQAAAC8TAAAAAAAAMBMAAAAAAAAAAAAAMBMAAAAAAAAxEwAAAAAAAAAAAAAxEwAAAAAAADITAAAAAAAAAAAAADITAAAAAAAAMxMAAAAAAAAAAAAAMxMAAAAAAAA0EwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALxMAAAAAAAAvEwAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert_completion",
					{
						"completion": "cmd_procedural",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "cmd_procedural"
					},
					"AgAAAC8TAAAAAAAALxMAAAAAAAAFAAAAY21kX3AvEwAAAAAAAD0TAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANBMAAAAAAAA0EwAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAD0TAAAAAAAAPhMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPRMAAAAAAAA9EwAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "\n\nstr"
					},
					"CAAAAAoYAAAAAAAACxgAAAAAAAAAAAAACxgAAAAAAAAPGAAAAAAAAAAAAAAPGAAAAAAAABAYAAAAAAAAAAAAABAYAAAAAAAAFBgAAAAAAAAAAAAACxgAAAAAAAALGAAAAAAAAAQAAAAgICAgEBgAAAAAAAARGAAAAAAAAAAAAAARGAAAAAAAABIYAAAAAAAAAAAAABIYAAAAAAAAExgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAChgAAAAAAAAKGAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert_completion",
					{
						"completion": "struct",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "struct"
					},
					"AgAAABAYAAAAAAAAEBgAAAAAAAADAAAAc3RyEBgAAAAAAAAWGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAExgAAAAAAAATGAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " cmd_pr"
					},
					"BwAAABYYAAAAAAAAFxgAAAAAAAAAAAAAFxgAAAAAAAAYGAAAAAAAAAAAAAAYGAAAAAAAABkYAAAAAAAAAAAAABkYAAAAAAAAGhgAAAAAAAAAAAAAGhgAAAAAAAAbGAAAAAAAAAAAAAAbGAAAAAAAABwYAAAAAAAAAAAAABwYAAAAAAAAHRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFhgAAAAAAAAWGAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "ocedural"
					},
					"CAAAAB0YAAAAAAAAHhgAAAAAAAAAAAAAHhgAAAAAAAAfGAAAAAAAAAAAAAAfGAAAAAAAACAYAAAAAAAAAAAAACAYAAAAAAAAIRgAAAAAAAAAAAAAIRgAAAAAAAAiGAAAAAAAAAAAAAAiGAAAAAAAACMYAAAAAAAAAAAAACMYAAAAAAAAJBgAAAAAAAAAAAAAJBgAAAAAAAAlGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHRgAAAAAAAAdGAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACUYAAAAAAAAJhgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJRgAAAAAAAAlGAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACYYAAAAAAAAKBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJhgAAAAAAAAmGAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAACcYAAAAAAAAKBgAAAAAAAAAAAAAKBgAAAAAAAAsGAAAAAAAAAAAAAAsGAAAAAAAAC0YAAAAAAAAAAAAAC0YAAAAAAAAMRgAAAAAAAAAAAAAKBgAAAAAAAAoGAAAAAAAAAQAAAAgICAgKBgAAAAAAAAwGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJxgAAAAAAAAnGAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AgAAADYYAAAAAAAANxgAAAAAAAAAAAAAKBgAAAAAAAAoGAAAAAAAAAgAAAAgICAgICAgIA",
					"AQAAAAAAAAABAAAANhgAAAAAAAA2GAAAAAAAAAAAAAAAAFJA"
				],
				[
					26,
					1,
					"reindent",
					null,
					"AQAAACgYAAAAAAAAMBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKBgAAAAAAAAoGAAAAAAAAAAAAAAAAEtA"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "Vec"
					},
					"AwAAADAYAAAAAAAAMRgAAAAAAAAAAAAAMRgAAAAAAAAyGAAAAAAAAAAAAAAyGAAAAAAAADMYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMBgAAAAAAAAwGAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert_completion",
					{
						"completion": "Vector3",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Vector3"
					},
					"AgAAADAYAAAAAAAAMBgAAAAAAAADAAAAVmVjMBgAAAAAAAA3GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMxgAAAAAAAAzGAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " bbox"
					},
					"BQAAADcYAAAAAAAAOBgAAAAAAAAAAAAAOBgAAAAAAAA5GAAAAAAAAAAAAAA5GAAAAAAAADoYAAAAAAAAAAAAADoYAAAAAAAAOxgAAAAAAAAAAAAAOxgAAAAAAAA8GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANxgAAAAAAAA3GAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "_min"
					},
					"BAAAADwYAAAAAAAAPRgAAAAAAAAAAAAAPRgAAAAAAAA+GAAAAAAAAAAAAAA+GAAAAAAAAD8YAAAAAAAAAAAAAD8YAAAAAAAAQBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPBgAAAAAAAA8GAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEAYAAAAAAAAQRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQBgAAAAAAABAGAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "\nV"
					},
					"AwAAAEEYAAAAAAAAQhgAAAAAAAAAAAAAQhgAAAAAAABKGAAAAAAAAAAAAABKGAAAAAAAAEsYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQRgAAAAAAABBGAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert_completion",
					{
						"completion": "Vector3",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Vector3"
					},
					"AgAAAEoYAAAAAAAAShgAAAAAAAABAAAAVkoYAAAAAAAAURgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASxgAAAAAAABLGAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " bb"
					},
					"AwAAAFEYAAAAAAAAUhgAAAAAAAAAAAAAUhgAAAAAAABTGAAAAAAAAAAAAABTGAAAAAAAAFQYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAURgAAAAAAABRGAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert_completion",
					{
						"completion": "bbox_min",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "bbox_min"
					},
					"AgAAAFIYAAAAAAAAUhgAAAAAAAACAAAAYmJSGAAAAAAAAFoYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVBgAAAAAAABUGAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					2,
					"left_delete",
					null,
					"AgAAAFkYAAAAAAAAWRgAAAAAAAABAAAAblgYAAAAAAAAWBgAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAWhgAAAAAAABaGAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "ax;"
					},
					"AwAAAFgYAAAAAAAAWRgAAAAAAAAAAAAAWRgAAAAAAABaGAAAAAAAAAAAAABaGAAAAAAAAFsYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWBgAAAAAAABYGAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "\nstd:"
					},
					"BgAAAFsYAAAAAAAAXBgAAAAAAAAAAAAAXBgAAAAAAABkGAAAAAAAAAAAAABkGAAAAAAAAGUYAAAAAAAAAAAAAGUYAAAAAAAAZhgAAAAAAAAAAAAAZhgAAAAAAABnGAAAAAAAAAAAAABnGAAAAAAAAGgYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWxgAAAAAAABbGAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAGgYAAAAAAAAaRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaBgAAAAAAABoGAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert_completion",
					{
						"completion": "string",
						"format": "text",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "string"
					},
					"AQAAAGkYAAAAAAAAbxgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaRgAAAAAAABpGAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG8YAAAAAAAAcBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbxgAAAAAAABvGAAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "proce"
					},
					"BQAAAHAYAAAAAAAAcRgAAAAAAAAAAAAAcRgAAAAAAAByGAAAAAAAAAAAAAByGAAAAAAAAHMYAAAAAAAAAAAAAHMYAAAAAAAAdBgAAAAAAAAAAAAAdBgAAAAAAAB1GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcBgAAAAAAABwGAAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "dual"
					},
					"BAAAAHUYAAAAAAAAdhgAAAAAAAAAAAAAdhgAAAAAAAB3GAAAAAAAAAAAAAB3GAAAAAAAAHgYAAAAAAAAAAAAAHgYAAAAAAAAeRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdRgAAAAAAAB1GAAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAHkYAAAAAAAAehgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeRgAAAAAAAB5GAAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAHcYAAAAAAAAeBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdxgAAAAAAAB3GAAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"right_delete",
					null,
					"AQAAAHoYAAAAAAAAehgAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAehgAAAAAAAB6GAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHoYAAAAAAAAexgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAehgAAAAAAAB6GAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHsYAAAAAAAAfBgAAAAAAAAAAAAAfBgAAAAAAACEGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAexgAAAAAAAB7GAAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "std::"
					},
					"BQAAAIQYAAAAAAAAhRgAAAAAAAAAAAAAhRgAAAAAAACGGAAAAAAAAAAAAACGGAAAAAAAAIcYAAAAAAAAAAAAAIcYAAAAAAAAiBgAAAAAAAAAAAAAiBgAAAAAAACJGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhBgAAAAAAACEGAAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert_completion",
					{
						"completion": "vector",
						"format": "text",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "vector"
					},
					"AQAAAIkYAAAAAAAAjxgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiRgAAAAAAACJGAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "<>"
					},
					"AgAAAI8YAAAAAAAAkBgAAAAAAAAAAAAAkBgAAAAAAACRGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjxgAAAAAAACPGAAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": " atr"
					},
					"BAAAAJEYAAAAAAAAkhgAAAAAAAAAAAAAkhgAAAAAAACTGAAAAAAAAAAAAACTGAAAAAAAAJQYAAAAAAAAAAAAAJQYAAAAAAAAlRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkRgAAAAAAACRGAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					2,
					"left_delete",
					null,
					"AgAAAJQYAAAAAAAAlBgAAAAAAAABAAAAcpMYAAAAAAAAkxgAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAlRgAAAAAAACVGAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "rguments"
					},
					"CAAAAJMYAAAAAAAAlBgAAAAAAAAAAAAAlBgAAAAAAACVGAAAAAAAAAAAAACVGAAAAAAAAJYYAAAAAAAAAAAAAJYYAAAAAAAAlxgAAAAAAAAAAAAAlxgAAAAAAACYGAAAAAAAAAAAAACYGAAAAAAAAJkYAAAAAAAAAAAAAJkYAAAAAAAAmhgAAAAAAAAAAAAAmhgAAAAAAACbGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkxgAAAAAAACTGAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJsYAAAAAAAAnBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmxgAAAAAAACbGAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "std::"
					},
					"BQAAAJAYAAAAAAAAkRgAAAAAAAAAAAAAkRgAAAAAAACSGAAAAAAAAAAAAACSGAAAAAAAAJMYAAAAAAAAAAAAAJMYAAAAAAAAlBgAAAAAAAAAAAAAlBgAAAAAAACVGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkBgAAAAAAACQGAAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert_completion",
					{
						"completion": "string",
						"format": "text",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "string"
					},
					"AQAAAJUYAAAAAAAAmxgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlRgAAAAAAACVGAAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"paste",
					null,
					"AgAAAIQYAAAAAAAAshgAAAAAAAAAAAAAshgAAAAAAACyGAAAAAAAABgAAABzdGQ6OnZlY3RvcjxzdGQ6OnN0cmluZz4",
					"AQAAAAAAAAABAAAAhBgAAAAAAACcGAAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANszAAAAAAAA3DMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2zMAAAAAAADbMwAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"paste",
					null,
					"AQAAANwzAAAAAAAAIjQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3DMAAAAAAADcMwAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					8,
					"left_delete",
					null,
					"CAAAABE0AAAAAAAAETQAAAAAAAABAAAAeRA0AAAAAAAAEDQAAAAAAAABAAAAcg80AAAAAAAADzQAAAAAAAABAAAAdA40AAAAAAAADjQAAAAAAAABAAAAZQ00AAAAAAAADTQAAAAAAAABAAAAbQw0AAAAAAAADDQAAAAAAAABAAAAbws0AAAAAAAACzQAAAAAAAABAAAAZQo0AAAAAAAACjQAAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAAEjQAAAAAAAASNAAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "proce"
					},
					"BQAAAAo0AAAAAAAACzQAAAAAAAAAAAAACzQAAAAAAAAMNAAAAAAAAAAAAAAMNAAAAAAAAA00AAAAAAAAAAAAAA00AAAAAAAADjQAAAAAAAAAAAAADjQAAAAAAAAPNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACjQAAAAAAAAKNAAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert_completion",
					{
						"completion": "cmd_procedural",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "cmd_procedural"
					},
					"AgAAAAY0AAAAAAAABjQAAAAAAAAJAAAAY21kX3Byb2NlBjQAAAAAAAAUNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADzQAAAAAAAAPNAAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					13,
					"right_delete",
					null,
					"DQAAABY0AAAAAAAAFjQAAAAAAAABAAAAZxY0AAAAAAAAFjQAAAAAAAABAAAAZRY0AAAAAAAAFjQAAAAAAAABAAAAbxY0AAAAAAAAFjQAAAAAAAABAAAAbRY0AAAAAAAAFjQAAAAAAAABAAAAZRY0AAAAAAAAFjQAAAAAAAABAAAAdBY0AAAAAAAAFjQAAAAAAAABAAAAchY0AAAAAAAAFjQAAAAAAAABAAAAeRY0AAAAAAAAFjQAAAAAAAABAAAAXxY0AAAAAAAAFjQAAAAAAAABAAAAbhY0AAAAAAAAFjQAAAAAAAABAAAAYRY0AAAAAAAAFjQAAAAAAAABAAAAbRY0AAAAAAAAFjQAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAFjQAAAAAAAAWNAAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "proce"
					},
					"BQAAABY0AAAAAAAAFzQAAAAAAAAAAAAAFzQAAAAAAAAYNAAAAAAAAAAAAAAYNAAAAAAAABk0AAAAAAAAAAAAABk0AAAAAAAAGjQAAAAAAAAAAAAAGjQAAAAAAAAbNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFjQAAAAAAAAWNAAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"insert_completion",
					{
						"completion": "procedural",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "procedural"
					},
					"AgAAABY0AAAAAAAAFjQAAAAAAAAFAAAAcHJvY2UWNAAAAAAAACA0AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGzQAAAAAAAAbNAAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": "bbox_min,"
					},
					"CQAAABY0AAAAAAAAFzQAAAAAAAAAAAAAFzQAAAAAAAAYNAAAAAAAAAAAAAAYNAAAAAAAABk0AAAAAAAAAAAAABk0AAAAAAAAGjQAAAAAAAAAAAAAGjQAAAAAAAAbNAAAAAAAAAAAAAAbNAAAAAAAABw0AAAAAAAAAAAAABw0AAAAAAAAHTQAAAAAAAAAAAAAHTQAAAAAAAAeNAAAAAAAAAAAAAAeNAAAAAAAAB80AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFjQAAAAAAAAWNAAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": " bbo"
					},
					"BAAAAB80AAAAAAAAIDQAAAAAAAAAAAAAIDQAAAAAAAAhNAAAAAAAAAAAAAAhNAAAAAAAACI0AAAAAAAAAAAAACI0AAAAAAAAIzQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHzQAAAAAAAAfNAAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "x_maxm"
					},
					"BgAAACM0AAAAAAAAJDQAAAAAAAAAAAAAJDQAAAAAAAAlNAAAAAAAAAAAAAAlNAAAAAAAACY0AAAAAAAAAAAAACY0AAAAAAAAJzQAAAAAAAAAAAAAJzQAAAAAAAAoNAAAAAAAAAAAAAAoNAAAAAAAACk0AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIzQAAAAAAAAjNAAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"left_delete",
					null,
					"AQAAACg0AAAAAAAAKDQAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAKTQAAAAAAAApNAAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAACg0AAAAAAAAKTQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKDQAAAAAAAAoNAAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACk0AAAAAAAAKjQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKTQAAAAAAAApNAAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADQ0AAAAAAAANTQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANDQAAAAAAAA0NAAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": " srgu"
					},
					"BQAAADU0AAAAAAAANjQAAAAAAAAAAAAANjQAAAAAAAA3NAAAAAAAAAAAAAA3NAAAAAAAADg0AAAAAAAAAAAAADg0AAAAAAAAOTQAAAAAAAAAAAAAOTQAAAAAAAA6NAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANTQAAAAAAAA1NAAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					4,
					"left_delete",
					null,
					"BAAAADk0AAAAAAAAOTQAAAAAAAABAAAAdTg0AAAAAAAAODQAAAAAAAABAAAAZzc0AAAAAAAANzQAAAAAAAABAAAAcjY0AAAAAAAANjQAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAOjQAAAAAAAA6NAAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "argumet"
					},
					"BwAAADY0AAAAAAAANzQAAAAAAAAAAAAANzQAAAAAAAA4NAAAAAAAAAAAAAA4NAAAAAAAADk0AAAAAAAAAAAAADk0AAAAAAAAOjQAAAAAAAAAAAAAOjQAAAAAAAA7NAAAAAAAAAAAAAA7NAAAAAAAADw0AAAAAAAAAAAAADw0AAAAAAAAPTQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANjQAAAAAAAA2NAAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert_completion",
					{
						"completion": "arguments",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "arguments"
					},
					"AgAAADY0AAAAAAAANjQAAAAAAAAHAAAAYXJndW1ldDY0AAAAAAAAPzQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPTQAAAAAAAA9NAAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": " |"
					},
					"AgAAANdRAAAAAAAA2FEAAAAAAAAAAAAA2FEAAAAAAADZUQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA11EAAAAAAADXUQAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANlRAAAAAAAA2lEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2VEAAAAAAADZUQAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert_completion",
					{
						"completion": "lit",
						"format": "text",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "lit"
					},
					"AQAAANpRAAAAAAAA3VEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2lEAAAAAAADaUQAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAN1RAAAAAAAA3lEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3VEAAAAAAADdUQAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"left_delete",
					null,
					"AQAAAN1RAAAAAAAA3VEAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAA3lEAAAAAAADeUQAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAN1RAAAAAAAA31EAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3VEAAAAAAADdUQAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "cmd_"
					},
					"BAAAAN5RAAAAAAAA31EAAAAAAAAAAAAA31EAAAAAAADgUQAAAAAAAAAAAADgUQAAAAAAAOFRAAAAAAAAAAAAAOFRAAAAAAAA4lEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3lEAAAAAAADeUQAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "pe"
					},
					"AgAAAOJRAAAAAAAA41EAAAAAAAAAAAAA41EAAAAAAADkUQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4lEAAAAAAADiUQAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"left_delete",
					null,
					"AQAAAONRAAAAAAAA41EAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAA5FEAAAAAAADkUQAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAONRAAAAAAAA5FEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA41EAAAAAAADjUQAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert_completion",
					{
						"completion": "cmd_procedural",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "cmd_procedural"
					},
					"AgAAAN5RAAAAAAAA3lEAAAAAAAAGAAAAY21kX3By3lEAAAAAAADsUQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5FEAAAAAAADkUQAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAOxRAAAAAAAA7VEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7FEAAAAAAADsUQAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAN5RAAAAAAAA31EAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3lEAAAAAAADeUQAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAGhvAAAAAAAAaW8AAAAAAAAAAAAAaW8AAAAAAABxbwAAAAAAAAAAAABxbwAAAAAAAHJvAAAAAAAAAAAAAHJvAAAAAAAAem8AAAAAAAAAAAAAaW8AAAAAAABpbwAAAAAAAAgAAAAgICAgICAgIA",
					"AQAAAAAAAAABAAAAaG8AAAAAAABobwAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"left_delete",
					null,
					"AQAAAG5vAAAAAAAAbm8AAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAcm8AAAAAAABybwAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAG5vAAAAAAAAb28AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbm8AAAAAAABubwAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert_completion",
					{
						"completion": "auto",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "auto"
					},
					"AgAAAG5vAAAAAAAAbm8AAAAAAAABAAAAYW5vAAAAAAAAcm8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAb28AAAAAAABvbwAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": " c"
					},
					"AgAAAHJvAAAAAAAAc28AAAAAAAAAAAAAc28AAAAAAAB0bwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcm8AAAAAAABybwAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert_completion",
					{
						"completion": "const",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "const"
					},
					"AgAAAHNvAAAAAAAAc28AAAAAAAABAAAAY3NvAAAAAAAAeG8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdG8AAAAAAAB0bwAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": " cmd_pro"
					},
					"CAAAAHhvAAAAAAAAeW8AAAAAAAAAAAAAeW8AAAAAAAB6bwAAAAAAAAAAAAB6bwAAAAAAAHtvAAAAAAAAAAAAAHtvAAAAAAAAfG8AAAAAAAAAAAAAfG8AAAAAAAB9bwAAAAAAAAAAAAB9bwAAAAAAAH5vAAAAAAAAAAAAAH5vAAAAAAAAf28AAAAAAAAAAAAAf28AAAAAAACAbwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeG8AAAAAAAB4bwAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert_completion",
					{
						"completion": "cmd_procedural",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "cmd_procedural"
					},
					"AgAAAHlvAAAAAAAAeW8AAAAAAAAHAAAAY21kX3Byb3lvAAAAAAAAh28AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgG8AAAAAAACAbwAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": "\n\t="
					},
					"BAAAAIdvAAAAAAAAiG8AAAAAAAAAAAAAiG8AAAAAAACMbwAAAAAAAAAAAACMbwAAAAAAAJBvAAAAAAAAAAAAAJBvAAAAAAAAkW8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAh28AAAAAAACHbwAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJFvAAAAAAAAkm8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkW8AAAAAAACRbwAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"insert_completion",
					{
						"completion": "x3",
						"format": "text",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "x3"
					},
					"AQAAAJJvAAAAAAAAlG8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkm8AAAAAAACSbwAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "::"
					},
					"AgAAAJRvAAAAAAAAlW8AAAAAAAAAAAAAlW8AAAAAAACWbwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlG8AAAAAAACUbwAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"insert_completion",
					{
						"completion": "rule",
						"format": "text",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "rule"
					},
					"AQAAAJZvAAAAAAAAmm8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlm8AAAAAAACWbwAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": "<c"
					},
					"AgAAAJpvAAAAAAAAm28AAAAAAAAAAAAAm28AAAAAAACcbwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmm8AAAAAAACabwAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert_completion",
					{
						"completion": "class",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "class"
					},
					"AgAAAJtvAAAAAAAAm28AAAAAAAABAAAAY5tvAAAAAAAAoG8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnG8AAAAAAACcbwAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": " c"
					},
					"AgAAAKBvAAAAAAAAoW8AAAAAAAAAAAAAoW8AAAAAAACibwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoG8AAAAAAACgbwAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"insert_completion",
					{
						"completion": "cmd_property",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "cmd_property"
					},
					"AgAAAKFvAAAAAAAAoW8AAAAAAAABAAAAY6FvAAAAAAAArW8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAom8AAAAAAACibwAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					5,
					"left_delete",
					null,
					"BQAAAKxvAAAAAAAArG8AAAAAAAABAAAAeatvAAAAAAAAq28AAAAAAAABAAAAdKpvAAAAAAAAqm8AAAAAAAABAAAAcqlvAAAAAAAAqW8AAAAAAAABAAAAZahvAAAAAAAAqG8AAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAArW8AAAAAAACtbwAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAKhvAAAAAAAAqW8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqG8AAAAAAACobwAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"insert_completion",
					{
						"completion": "cmd_procedural",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "cmd_procedural"
					},
					"AgAAAKFvAAAAAAAAoW8AAAAAAAAIAAAAY21kX3Byb2OhbwAAAAAAAK9vAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqW8AAAAAAACpbwAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAK9vAAAAAAAAsG8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAr28AAAAAAACvbwAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": " as"
					},
					"AwAAALBvAAAAAAAAsW8AAAAAAAAAAAAAsW8AAAAAAACybwAAAAAAAAAAAACybwAAAAAAALNvAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsG8AAAAAAACwbwAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert_completion",
					{
						"completion": "ast",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "ast"
					},
					"AgAAALFvAAAAAAAAsW8AAAAAAAACAAAAYXOxbwAAAAAAALRvAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAs28AAAAAAACzbwAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "::c"
					},
					"AwAAALRvAAAAAAAAtW8AAAAAAAAAAAAAtW8AAAAAAAC2bwAAAAAAAAAAAAC2bwAAAAAAALdvAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtG8AAAAAAAC0bwAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": "md_pr"
					},
					"BQAAALdvAAAAAAAAuG8AAAAAAAAAAAAAuG8AAAAAAAC5bwAAAAAAAAAAAAC5bwAAAAAAALpvAAAAAAAAAAAAALpvAAAAAAAAu28AAAAAAAAAAAAAu28AAAAAAAC8bwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAt28AAAAAAAC3bwAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"insert_completion",
					{
						"completion": "cmd_procedural",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "cmd_procedural"
					},
					"AgAAALZvAAAAAAAAtm8AAAAAAAAGAAAAY21kX3Bytm8AAAAAAADEbwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvG8AAAAAAAC8bwAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAAMRvAAAAAAAAxW8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxG8AAAAAAADEbwAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAMVvAAAAAAAAx28AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxW8AAAAAAADFbwAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAMZvAAAAAAAAyG8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxm8AAAAAAADGbwAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "cmd"
					},
					"AwAAAMdvAAAAAAAAyG8AAAAAAAAAAAAAyG8AAAAAAADJbwAAAAAAAAAAAADJbwAAAAAAAMpvAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAx28AAAAAAADHbwAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": "_proc"
					},
					"BQAAAMpvAAAAAAAAy28AAAAAAAAAAAAAy28AAAAAAADMbwAAAAAAAAAAAADMbwAAAAAAAM1vAAAAAAAAAAAAAM1vAAAAAAAAzm8AAAAAAAAAAAAAzm8AAAAAAADPbwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAym8AAAAAAADKbwAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"insert_completion",
					{
						"completion": "cmd_procedural",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "cmd_procedural"
					},
					"AgAAAMdvAAAAAAAAx28AAAAAAAAIAAAAY21kX3Byb2PHbwAAAAAAANVvAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAz28AAAAAAADPbwAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAANxvAAAAAAAA4G8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3G8AAAAAAADcbwAAAAAAAAAAAAAAqIVA"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOBvAAAAAAAA4W8AAAAAAAAAAAAA4W8AAAAAAADpbwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4G8AAAAAAADgbwAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AgAAAOBvAAAAAAAA5G8AAAAAAAAAAAAA5W8AAAAAAADlbwAAAAAAAAgAAAAgICAgICAgIA",
					"AQAAAAAAAAABAAAA4G8AAAAAAADgbwAAAAAAAAAAAAAAAFJA"
				],
				[
					157,
					1,
					"left_delete",
					null,
					"AQAAAOBvAAAAAAAA4G8AAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAA5G8AAAAAAADkbwAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAOBvAAAAAAAA4W8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4G8AAAAAAADgbwAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOFvAAAAAAAA4m8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4W8AAAAAAADhbwAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAOJvAAAAAAAA5G8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4m8AAAAAAADibwAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": "cmd"
					},
					"AwAAAONvAAAAAAAA5G8AAAAAAAAAAAAA5G8AAAAAAADlbwAAAAAAAAAAAADlbwAAAAAAAOZvAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA428AAAAAAADjbwAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"insert_completion",
					{
						"completion": "cmd_procedural",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "cmd_procedural"
					},
					"AgAAAONvAAAAAAAA428AAAAAAAADAAAAY21k428AAAAAAADxbwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5m8AAAAAAADmbwAAAAAAAAAAAAAAAPC/"
				],
				[
					164,
					1,
					"insert",
					{
						"characters": " >>"
					},
					"AwAAAPJvAAAAAAAA828AAAAAAAAAAAAA828AAAAAAAD0bwAAAAAAAAAAAAD0bwAAAAAAAPVvAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8m8AAAAAAADybwAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPVvAAAAAAAA9m8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9W8AAAAAAAD1bwAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAPdvAAAAAAAA+G8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA928AAAAAAAD3bwAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"reindent",
					null,
					"AQAAAPdvAAAAAAAA/28AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA928AAAAAAAD3bwAAAAAAAAAAAAAAAAAA"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAP9vAAAAAAAAAHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/28AAAAAAAD/bwAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAABwAAAAAAAAAXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAAFwAAAAAAAAA3AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAXAAAAAAAAABcAAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAAJwAAAAAAAAA3AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert_completion",
					{
						"completion": "cmd_procedural",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "cmd_procedural"
					},
					"AgAAAAJwAAAAAAAAAnAAAAAAAAABAAAAYwJwAAAAAAAAEHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAA3AAAAAAAAADcAAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABBwAAAAAAAAEXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEHAAAAAAAAAQcAAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					1,
					"left_delete",
					null,
					"AQAAABBwAAAAAAAAEHAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAEXAAAAAAAAARcAAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": " >>"
					},
					"AwAAABFwAAAAAAAAEnAAAAAAAAAAAAAAEnAAAAAAAAATcAAAAAAAAAAAAAATcAAAAAAAABRwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEXAAAAAAAAARcAAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABRwAAAAAAAAFXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFHAAAAAAAAAUcAAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "lit"
					},
					"AwAAAPZvAAAAAAAA928AAAAAAAAAAAAA928AAAAAAAD4bwAAAAAAAAAAAAD4bwAAAAAAAPlvAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9m8AAAAAAAD2bwAAAAAAAAAAAAAA4HBA"
				],
				[
					185,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPlvAAAAAAAA+28AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+W8AAAAAAAD5bwAAAAAAAAAAAAAAAPC/"
				],
				[
					186,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAPpvAAAAAAAA/G8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+m8AAAAAAAD6bwAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": "-m"
					},
					"AgAAAPtvAAAAAAAA/G8AAAAAAAAAAAAA/G8AAAAAAAD9bwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+28AAAAAAAD7bwAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					1,
					"insert",
					{
						"characters": " >>"
					},
					"AwAAAP9vAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAJwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/28AAAAAAAD/bwAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAJwAAAAAAAAA3AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"paste",
					null,
					"AQAAAANwAAAAAAAACnAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAA3AAAAAAAAADcAAAAAAAAAAAAAAAAPC/"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": "nu"
					},
					"AgAAAClwAAAAAAAAKnAAAAAAAAAAAAAAKnAAAAAAAAArcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKXAAAAAAAAApcAAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"insert_completion",
					{
						"completion": "null_vector3",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "null_vector3"
					},
					"AgAAAClwAAAAAAAAKXAAAAAAAAACAAAAbnUpcAAAAAAAADVwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAK3AAAAAAAAArcAAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": " >>"
					},
					"AwAAADVwAAAAAAAANnAAAAAAAAAAAAAANnAAAAAAAAA3cAAAAAAAAAAAAAA3cAAAAAAAADhwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANXAAAAAAAAA1cAAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADhwAAAAAAAAOXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOHAAAAAAAAA4cAAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"insert_completion",
					{
						"completion": "null_vector3",
						"format": "text",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "null_vector3"
					},
					"AQAAADlwAAAAAAAARXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOXAAAAAAAAA5cAAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": " >>"
					},
					"AwAAAEVwAAAAAAAARnAAAAAAAAAAAAAARnAAAAAAAABHcAAAAAAAAAAAAABHcAAAAAAAAEhwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARXAAAAAAAABFcAAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": " >>"
					},
					"AwAAAApwAAAAAAAAC3AAAAAAAAAAAAAAC3AAAAAAAAAMcAAAAAAAAAAAAAAMcAAAAAAAAA1wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACnAAAAAAAAAKcAAAAAAAAAAAAAAAKIFA"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": " l"
					},
					"AgAAAA1wAAAAAAAADnAAAAAAAAAAAAAADnAAAAAAAAAPcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADXAAAAAAAAANcAAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"insert_completion",
					{
						"completion": "lit",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "lit"
					},
					"AgAAAA5wAAAAAAAADnAAAAAAAAABAAAAbA5wAAAAAAAAEXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAD3AAAAAAAAAPcAAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABFwAAAAAAAAE3AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEXAAAAAAAAARcAAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAABJwAAAAAAAAFHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEnAAAAAAAAAScAAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAABJwAAAAAAAAEnAAAAAAAAABAAAAJxJwAAAAAAAAEnAAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAE3AAAAAAAAATcAAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAABJwAAAAAAAAFHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEnAAAAAAAAAScAAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"insert",
					{
						"characters": "-M"
					},
					"AgAAABNwAAAAAAAAFHAAAAAAAAAAAAAAFHAAAAAAAAAVcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAE3AAAAAAAAATcAAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": " >>"
					},
					"AwAAABdwAAAAAAAAGHAAAAAAAAAAAAAAGHAAAAAAAAAZcAAAAAAAAAAAAAAZcAAAAAAAABpwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAF3AAAAAAAAAXcAAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					1,
					"insert",
					{
						"characters": " ve"
					},
					"AwAAABpwAAAAAAAAG3AAAAAAAAAAAAAAG3AAAAAAAAAccAAAAAAAAAAAAAAccAAAAAAAAB1wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGnAAAAAAAAAacAAAAAAAAAAAAAAAAPC/"
				],
				[
					219,
					1,
					"insert_completion",
					{
						"completion": "vector3",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "vector3"
					},
					"AgAAABtwAAAAAAAAG3AAAAAAAAACAAAAdmUbcAAAAAAAACJwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHXAAAAAAAAAdcAAAAAAAAAAAAAAAAPC/"
				],
				[
					220,
					1,
					"insert",
					{
						"characters": " >>"
					},
					"AwAAACJwAAAAAAAAI3AAAAAAAAAAAAAAI3AAAAAAAAAkcAAAAAAAAAAAAAAkcAAAAAAAACVwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAInAAAAAAAAAicAAAAAAAAAAAAAAAAPC/"
				],
				[
					228,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACVwAAAAAAAAJnAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJXAAAAAAAAAlcAAAAAAAAAAAAAAAAPC/"
				],
				[
					229,
					1,
					"paste",
					null,
					"AQAAACZwAAAAAAAAMHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJnAAAAAAAAAmcAAAAAAAAAAAAAAAAPC/"
				],
				[
					234,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG5wAAAAAAAAb3AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbnAAAAAAAABucAAAAAAAAAAAAAAAAPC/"
				],
				[
					235,
					1,
					"paste",
					null,
					"AQAAAG9wAAAAAAAAeXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAb3AAAAAAAABvcAAAAAAAAAAAAAAAAPC/"
				],
				[
					236,
					1,
					"insert",
					{
						"characters": " >>"
					},
					"AwAAAHlwAAAAAAAAenAAAAAAAAAAAAAAenAAAAAAAAB7cAAAAAAAAAAAAAB7cAAAAAAAAHxwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeXAAAAAAAAB5cAAAAAAAAAAAAAAAAPC/"
				],
				[
					239,
					1,
					"insert",
					{
						"characters": " >>"
					},
					"AwAAADBwAAAAAAAAMXAAAAAAAAAAAAAAMXAAAAAAAAAycAAAAAAAAAAAAAAycAAAAAAAADNwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMHAAAAAAAAAwcAAAAAAAAAAAAAAAAPC/"
				],
				[
					243,
					5,
					"left_delete",
					null,
					"BQAAAG55AAAAAAAAbnkAAAAAAAAxAAAAYXV0byBjb25zdCBudWxsX3ZlY3RvciA9IHgzOjphdHRyKCIwLjAgMC4wIDAuMCIpO2p5AAAAAAAAankAAAAAAAAEAAAAICAgIGl5AAAAAAAAaXkAAAAAAAABAAAACmh5AAAAAAAAaHkAAAAAAAABAAAACmd5AAAAAAAAZ3kAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAn3kAAAAAAABueQAAAAAAAAAAAAAAAPC/"
				],
				[
					246,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAARtAAAAAAAABW0AAAAAAAAAAAAABW0AAAAAAAAGbQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABG0AAAAAAAAEbQAAAAAAAAAAAAAAAPC/"
				],
				[
					248,
					1,
					"reindent",
					null,
					"AQAAAAVtAAAAAAAACW0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABW0AAAAAAAAFbQAAAAAAAAAAAAAAAAAA"
				],
				[
					249,
					1,
					"paste",
					null,
					"AQAAAAltAAAAAAAAOm0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACW0AAAAAAAAJbQAAAAAAAAAAAAAAAPC/"
				],
				[
					256,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGpwAAAAAAAAa3AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAanAAAAAAAABqcAAAAAAAAAAAAAAAAPC/"
				],
				[
					257,
					1,
					"paste",
					null,
					"AQAAAGtwAAAAAAAAfHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAa3AAAAAAAABrcAAAAAAAAAAAAAAAAPC/"
				],
				[
					260,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMhwAAAAAAAAyXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyHAAAAAAAADIcAAAAAAAAAAAAAAAAPC/"
				],
				[
					261,
					1,
					"paste",
					null,
					"AQAAAMlwAAAAAAAA2nAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyXAAAAAAAADJcAAAAAAAAAAAAAAAAPC/"
				],
				[
					262,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANpwAAAAAAAA23AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2nAAAAAAAADacAAAAAAAAAAAAAAAAPC/"
				],
				[
					265,
					1,
					"insert",
					{
						"characters": " |"
					},
					"AgAAAHxwAAAAAAAAfXAAAAAAAAAAAAAAfXAAAAAAAAB+cAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfHAAAAAAAAB8cAAAAAAAAAAAAAAAAPC/"
				],
				[
					269,
					3,
					"left_delete",
					null,
					"AwAAAMd5AAAAAAAAx3kAAAAAAAC1AAAAICAgIHgzOjpydWxlPGNsYXNzIG51bGxfdmVjdG9yM18sIFZlY3RvcjM+IGNvbnN0IG51bGxfdmVjdG9yMyA9ICJudWxsX3ZlY3RvcjMiOwogICAgYXV0byBjb25zdCBudWxsX3ZlY3RvcjNfZGVmID0gYXR0cihWZWN0b3IzezAuMCwgMC4wLCAwLjB9KTsKICAgIEJPT1NUX1NQSVJJVF9ERUZJTkUobnVsbF92ZWN0b3IzKcZ5AAAAAAAAxnkAAAAAAAABAAAACsV5AAAAAAAAxXkAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAfHoAAAAAAADHeQAAAAAAAAAAAAAAAPC/"
				],
				[
					272,
					1,
					"paste",
					null,
					"AQAAADttAAAAAAAA8G0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAO20AAAAAAAA7bQAAAAAAAAAAAAAAAPC/"
				],
				[
					273,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPBtAAAAAAAA8W0AAAAAAAAAAAAA8W0AAAAAAAD1bQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8G0AAAAAAADwbQAAAAAAAAAAAAAAAPC/"
				],
				[
					275,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAD9tAAAAAAAAQG0AAAAAAAAAAAAAQG0AAAAAAABEbQAAAAAAAAAAAAD2bQAAAAAAAPZtAAAAAAAABAAAACAgICA",
					"AQAAAAAAAAABAAAAP20AAAAAAAA/bQAAAAAAAAAAAAAAAEJA"
				],
				[
					278,
					2,
					"left_delete",
					null,
					"AgAAADhxAAAAAAAAOHEAAAAAAAABAAAAfDdxAAAAAAAAN3EAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAOXEAAAAAAAA5cQAAAAAAAAAAAAAAAPC/"
				],
				[
					279,
					1,
					"insert",
					{
						"characters": " |"
					},
					"AgAAADdxAAAAAAAAOHEAAAAAAAAAAAAAOHEAAAAAAAA5cQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAN3EAAAAAAAA3cQAAAAAAAAAAAAAAAPC/"
				],
				[
					286,
					2,
					"right_delete",
					null,
					"AgAAAEJxAAAAAAAAQnEAAAAAAAABAAAAPUJxAAAAAAAAQnEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAQnEAAAAAAABCcQAAAAAAAAAAAAAAAPC/"
				],
				[
					287,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAEJxAAAAAAAAQ3EAAAAAAAAAAAAAQ3EAAAAAAABEcQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQnEAAAAAAABCcQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/lava_lib/reader_lsd/visitor.h",
			"settings":
			{
				"buffer_size": 4780,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAB4GAAAAAAAAHwYAAAAAAAAAAAAAHwYAAAAAAAAjBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgYAAAAAAAAeBgAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"paste",
					null,
					"AQAAACMGAAAAAAAAXQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwYAAAAAAAAjBgAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAEwGAAAAAAAATQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAYAAAAAAABMBgAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					6,
					"left_delete",
					null,
					"BgAAAEwGAAAAAAAATAYAAAAAAAABAAAAPUsGAAAAAAAASwYAAAAAAAABAAAAeUoGAAAAAAAASgYAAAAAAAABAAAAdEkGAAAAAAAASQYAAAAAAAABAAAAckgGAAAAAAAASAYAAAAAAAABAAAAZUcGAAAAAAAARwYAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAATQYAAAAAAABNBgAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "ce"
					},
					"AgAAAEcGAAAAAAAASAYAAAAAAAAAAAAASAYAAAAAAABJBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwYAAAAAAABHBgAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert_completion",
					{
						"completion": "cmd_procedural",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "cmd_procedural"
					},
					"AgAAAEAGAAAAAAAAQAYAAAAAAAAJAAAAY21kX3Byb2NlQAYAAAAAAABOBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQYAAAAAAABJBgAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAG8OAAAAAAAAcA4AAAAAAAAAAAAAcA4AAAAAAAB0DgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbw4AAAAAAABvDgAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"paste",
					null,
					"AQAAAHQOAAAAAAAArw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdA4AAAAAAAB0DgAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					5,
					"left_delete",
					null,
					"BQAAAJQOAAAAAAAAlA4AAAAAAAABAAAAeZMOAAAAAAAAkw4AAAAAAAABAAAAdJIOAAAAAAAAkg4AAAAAAAABAAAAcpEOAAAAAAAAkQ4AAAAAAAABAAAAZZAOAAAAAAAAkA4AAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAlQ4AAAAAAACVDgAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "ce"
					},
					"AgAAAJAOAAAAAAAAkQ4AAAAAAAAAAAAAkQ4AAAAAAACSDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkA4AAAAAAACQDgAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert_completion",
					{
						"completion": "cmd_procedural",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "cmd_procedural"
					},
					"AgAAAIkOAAAAAAAAiQ4AAAAAAAAJAAAAY21kX3Byb2NliQ4AAAAAAACXDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkg4AAAAAAACSDgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/lava_lib/reader_lsd/visitor_echo.cpp",
			"settings":
			{
				"buffer_size": 7754,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAALoYAAAAAAAAuxgAAAAAAAAAAAAAuxgAAAAAAAC8GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuhgAAAAAAAC6GAAAAAAAAAAAAAAAYG5A"
				],
				[
					6,
					1,
					"paste",
					null,
					"AQAAALwYAAAAAAAA/BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvBgAAAAAAAC8GAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "\n\n}"
					},
					"BgAAAPwYAAAAAAAA/RgAAAAAAAAAAAAA/RgAAAAAAAABGQAAAAAAAAAAAAABGQAAAAAAAAIZAAAAAAAAAAAAAAIZAAAAAAAABhkAAAAAAAAAAAAA/RgAAAAAAAD9GAAAAAAAAAQAAAAgICAgAhkAAAAAAAADGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/BgAAAAAAAD8GAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"left_delete",
					null,
					"AQAAAP4YAAAAAAAA/hgAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAAhkAAAAAAAACGQAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"reindent",
					null,
					"AQAAAP0YAAAAAAAAARkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/RgAAAAAAAD9GAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"paste",
					null,
					"AQAAAAEZAAAAAAAAGBkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAARkAAAAAAAABGQAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABgZAAAAAAAAGRkAAAAAAAAAAAAAGRkAAAAAAAAdGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGBkAAAAAAAAYGQAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"paste",
					null,
					"AQAAAB0ZAAAAAAAAvhkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHRkAAAAAAAAdGQAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "cde"
					},
					"BAAAAOUYAAAAAAAA5hgAAAAAAAAAAAAA5hgAAAAAAADmGAAAAAAAAAUAAABwZXJ0eeYYAAAAAAAA5xgAAAAAAAAAAAAA5xgAAAAAAADoGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5RgAAAAAAADqGAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					2,
					"left_delete",
					null,
					"AgAAAOcYAAAAAAAA5xgAAAAAAAABAAAAZeYYAAAAAAAA5hgAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAA6BgAAAAAAADoGAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAOYYAAAAAAAA5xgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5hgAAAAAAADmGAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert_completion",
					{
						"completion": "cmd_procedural",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "cmd_procedural"
					},
					"AgAAAN4YAAAAAAAA3hgAAAAAAAAJAAAAY21kX3Byb2Nl3hgAAAAAAADsGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5xgAAAAAAADnGAAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"paste",
					null,
					"AgAAADcZAAAAAAAARRkAAAAAAAAAAAAARRkAAAAAAABFGQAAAAAAABAAAABjbWRfZGV2aWNlb3B0aW9u",
					"AQAAAAAAAAABAAAANxkAAAAAAABHGQAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "proce"
					},
					"BgAAAEcZAAAAAAAASBkAAAAAAAAAAAAASBkAAAAAAABIGQAAAAAAAAQAAAB0eXBlSBkAAAAAAABJGQAAAAAAAAAAAABJGQAAAAAAAEoZAAAAAAAAAAAAAEoZAAAAAAAASxkAAAAAAAAAAAAASxkAAAAAAABMGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARxkAAAAAAABLGQAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert_completion",
					{
						"completion": "cmd_procedural",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "cmd_procedural"
					},
					"AgAAAEcZAAAAAAAARxkAAAAAAAAFAAAAcHJvY2VHGQAAAAAAAFUZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATBkAAAAAAABMGQAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					4,
					"right_delete",
					null,
					"BAAAAEcZAAAAAAAARxkAAAAAAAABAAAAY0cZAAAAAAAARxkAAAAAAAABAAAAbUcZAAAAAAAARxkAAAAAAAABAAAAZEcZAAAAAAAARxkAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAARxkAAAAAAABHGQAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					4,
					"right_delete",
					null,
					"BAAAAFoZAAAAAAAAWhkAAAAAAAABAAAAdFoZAAAAAAAAWhkAAAAAAAABAAAAeVoZAAAAAAAAWhkAAAAAAAABAAAAcFoZAAAAAAAAWhkAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAWhkAAAAAAABaGQAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "proce"
					},
					"BQAAAFoZAAAAAAAAWxkAAAAAAAAAAAAAWxkAAAAAAABcGQAAAAAAAAAAAABcGQAAAAAAAF0ZAAAAAAAAAAAAAF0ZAAAAAAAAXhkAAAAAAAAAAAAAXhkAAAAAAABfGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWhkAAAAAAABaGQAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "dutal"
					},
					"BQAAAF8ZAAAAAAAAYBkAAAAAAAAAAAAAYBkAAAAAAABhGQAAAAAAAAAAAABhGQAAAAAAAGIZAAAAAAAAAAAAAGIZAAAAAAAAYxkAAAAAAAAAAAAAYxkAAAAAAABkGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXxkAAAAAAABfGQAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					3,
					"left_delete",
					null,
					"AwAAAGMZAAAAAAAAYxkAAAAAAAABAAAAbGIZAAAAAAAAYhkAAAAAAAABAAAAYWEZAAAAAAAAYRkAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAZBkAAAAAAABkGQAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "ral"
					},
					"AwAAAGEZAAAAAAAAYhkAAAAAAAAAAAAAYhkAAAAAAABjGQAAAAAAAAAAAABjGQAAAAAAAGQZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYRkAAAAAAABhGQAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					31,
					"right_delete",
					null,
					"HwAAAGQZAAAAAAAAZBkAAAAAAAABAAAAIGQZAAAAAAAAZBkAAAAAAAABAAAAPGQZAAAAAAAAZBkAAAAAAAABAAAAPGQZAAAAAAAAZBkAAAAAAAABAAAAIGQZAAAAAAAAZBkAAAAAAAABAAAAImQZAAAAAAAAZBkAAAAAAAABAAAAIGQZAAAAAAAAZBkAAAAAAAABAAAAbmQZAAAAAAAAZBkAAAAAAAABAAAAYWQZAAAAAAAAZBkAAAAAAAABAAAAbWQZAAAAAAAAZBkAAAAAAAABAAAAZWQZAAAAAAAAZBkAAAAAAAABAAAAOmQZAAAAAAAAZBkAAAAAAAABAAAAIGQZAAAAAAAAZBkAAAAAAAABAAAAImQZAAAAAAAAZBkAAAAAAAABAAAAIGQZAAAAAAAAZBkAAAAAAAABAAAAPGQZAAAAAAAAZBkAAAAAAAABAAAAPGQZAAAAAAAAZBkAAAAAAAABAAAAIGQZAAAAAAAAZBkAAAAAAAABAAAAY2QZAAAAAAAAZBkAAAAAAAABAAAALmQZAAAAAAAAZBkAAAAAAAABAAAAbmQZAAAAAAAAZBkAAAAAAAABAAAAYWQZAAAAAAAAZBkAAAAAAAABAAAAbWQZAAAAAAAAZBkAAAAAAAABAAAAZWQZAAAAAAAAZBkAAAAAAAABAAAAIGQZAAAAAAAAZBkAAAAAAAABAAAAPGQZAAAAAAAAZBkAAAAAAAABAAAAPGQZAAAAAAAAZBkAAAAAAAABAAAAIGQZAAAAAAAAZBkAAAAAAAABAAAAImQZAAAAAAAAZBkAAAAAAAABAAAAIGQZAAAAAAAAZBkAAAAAAAABAAAAdmQZAAAAAAAAZBkAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAZBkAAAAAAABkGQAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					7,
					"right_delete",
					null,
					"BwAAAGQZAAAAAAAAZBkAAAAAAAABAAAAbGQZAAAAAAAAZBkAAAAAAAABAAAAdWQZAAAAAAAAZBkAAAAAAAABAAAAZWQZAAAAAAAAZBkAAAAAAAABAAAAc2QZAAAAAAAAZBkAAAAAAAABAAAAOmQZAAAAAAAAZBkAAAAAAAABAAAAIGQZAAAAAAAAZBkAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAZBkAAAAAAABkGQAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					34,
					"left_delete",
					null,
					"IgAAAIsZAAAAAAAAixkAAAAAAAABAAAAO4oZAAAAAAAAihkAAAAAAAABAAAAKYkZAAAAAAAAiRkAAAAAAAABAAAAc4gZAAAAAAAAiBkAAAAAAAABAAAAZYcZAAAAAAAAhxkAAAAAAAABAAAAdYYZAAAAAAAAhhkAAAAAAAABAAAAbIUZAAAAAAAAhRkAAAAAAAABAAAAYYQZAAAAAAAAhBkAAAAAAAABAAAAdoMZAAAAAAAAgxkAAAAAAAABAAAALoIZAAAAAAAAghkAAAAAAAABAAAAY4EZAAAAAAAAgRkAAAAAAAABAAAAKIAZAAAAAAAAgBkAAAAAAAABAAAAKX8ZAAAAAAAAfxkAAAAAAAABAAAAKH4ZAAAAAAAAfhkAAAAAAAABAAAAcn0ZAAAAAAAAfRkAAAAAAAABAAAAb3wZAAAAAAAAfBkAAAAAAAABAAAAdHsZAAAAAAAAexkAAAAAAAABAAAAYXoZAAAAAAAAehkAAAAAAAABAAAAcnkZAAAAAAAAeRkAAAAAAAABAAAAZXgZAAAAAAAAeBkAAAAAAAABAAAAcHcZAAAAAAAAdxkAAAAAAAABAAAAb3YZAAAAAAAAdhkAAAAAAAABAAAAOnUZAAAAAAAAdRkAAAAAAAABAAAAOnQZAAAAAAAAdBkAAAAAAAABAAAAcnMZAAAAAAAAcxkAAAAAAAABAAAAb3IZAAAAAAAAchkAAAAAAAABAAAAdHEZAAAAAAAAcRkAAAAAAAABAAAAaXAZAAAAAAAAcBkAAAAAAAABAAAAc28ZAAAAAAAAbxkAAAAAAAABAAAAaW4ZAAAAAAAAbhkAAAAAAAABAAAAVm0ZAAAAAAAAbRkAAAAAAAABAAAAb2wZAAAAAAAAbBkAAAAAAAABAAAAaGsZAAAAAAAAaxkAAAAAAAABAAAAY2oZAAAAAAAAahkAAAAAAAABAAAARQ",
					"AQAAAAAAAAABAAAAjBkAAAAAAACMGQAAAAAAAAAAAAAAiIRA"
				]
			]
		},
		{
			"file": "src/lava_lib/reader_lsd/session.h",
			"settings":
			{
				"buffer_size": 6395,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJEKAAAAAAAAkgoAAAAAAAAAAAAAkgoAAAAAAACWCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQoAAAAAAACRCgAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "void"
					},
					"BAAAAJEKAAAAAAAAkgoAAAAAAAAAAAAAkgoAAAAAAACTCgAAAAAAAAAAAACTCgAAAAAAAJQKAAAAAAAAAAAAAJQKAAAAAAAAlQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQoAAAAAAACRCgAAAAAAAAAAAAAAAEJA"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " cm"
					},
					"AwAAAJUKAAAAAAAAlgoAAAAAAAAAAAAAlgoAAAAAAACXCgAAAAAAAAAAAACXCgAAAAAAAJgKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQoAAAAAAACVCgAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert_completion",
					{
						"completion": "cmdDeclare",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "cmdDeclare"
					},
					"AgAAAJYKAAAAAAAAlgoAAAAAAAACAAAAY22WCgAAAAAAAKAKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAoAAAAAAACYCgAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					7,
					"left_delete",
					null,
					"BwAAAJ8KAAAAAAAAnwoAAAAAAAABAAAAZZ4KAAAAAAAAngoAAAAAAAABAAAAcp0KAAAAAAAAnQoAAAAAAAABAAAAYZwKAAAAAAAAnAoAAAAAAAABAAAAbJsKAAAAAAAAmwoAAAAAAAABAAAAY5oKAAAAAAAAmgoAAAAAAAABAAAAZZkKAAAAAAAAmQoAAAAAAAABAAAARA",
					"AQAAAAAAAAABAAAAoAoAAAAAAACgCgAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "Procedura"
					},
					"CQAAAJkKAAAAAAAAmgoAAAAAAAAAAAAAmgoAAAAAAACbCgAAAAAAAAAAAACbCgAAAAAAAJwKAAAAAAAAAAAAAJwKAAAAAAAAnQoAAAAAAAAAAAAAnQoAAAAAAACeCgAAAAAAAAAAAACeCgAAAAAAAJ8KAAAAAAAAAAAAAJ8KAAAAAAAAoAoAAAAAAAAAAAAAoAoAAAAAAAChCgAAAAAAAAAAAAChCgAAAAAAAKIKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmQoAAAAAAACZCgAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAAKIKAAAAAAAAowoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogoAAAAAAACiCgAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKMKAAAAAAAApQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowoAAAAAAACjCgAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "cosnt"
					},
					"BQAAAKQKAAAAAAAApQoAAAAAAAAAAAAApQoAAAAAAACmCgAAAAAAAAAAAACmCgAAAAAAAKcKAAAAAAAAAAAAAKcKAAAAAAAAqAoAAAAAAAAAAAAAqAoAAAAAAACpCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAoAAAAAAACkCgAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					3,
					"left_delete",
					null,
					"AwAAAKgKAAAAAAAAqAoAAAAAAAABAAAAdKcKAAAAAAAApwoAAAAAAAABAAAAbqYKAAAAAAAApgoAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAqQoAAAAAAACpCgAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert_completion",
					{
						"completion": "const",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "const"
					},
					"AgAAAKQKAAAAAAAApAoAAAAAAAACAAAAY2+kCgAAAAAAAKkKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgoAAAAAAACmCgAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " std::s"
					},
					"BwAAAKkKAAAAAAAAqgoAAAAAAAAAAAAAqgoAAAAAAACrCgAAAAAAAAAAAACrCgAAAAAAAKwKAAAAAAAAAAAAAKwKAAAAAAAArQoAAAAAAAAAAAAArQoAAAAAAACuCgAAAAAAAAAAAACuCgAAAAAAAK8KAAAAAAAAAAAAAK8KAAAAAAAAsAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQoAAAAAAACpCgAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert_completion",
					{
						"completion": "string",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "string"
					},
					"AgAAAK8KAAAAAAAArwoAAAAAAAABAAAAc68KAAAAAAAAtQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsAoAAAAAAACwCgAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " pro"
					},
					"BAAAALUKAAAAAAAAtgoAAAAAAAAAAAAAtgoAAAAAAAC3CgAAAAAAAAAAAAC3CgAAAAAAALgKAAAAAAAAAAAAALgKAAAAAAAAuQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQoAAAAAAAC1CgAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert_completion",
					{
						"completion": "procedural",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "procedural"
					},
					"AgAAALYKAAAAAAAAtgoAAAAAAAADAAAAcHJvtgoAAAAAAADACgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQoAAAAAAAC5CgAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAALUKAAAAAAAAtgoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQoAAAAAAAC1CgAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMEKAAAAAAAAwgoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQoAAAAAAADBCgAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " s"
					},
					"AgAAAMIKAAAAAAAAwwoAAAAAAAAAAAAAwwoAAAAAAADECgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwgoAAAAAAADCCgAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"left_delete",
					null,
					"AQAAAMMKAAAAAAAAwwoAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAxAoAAAAAAADECgAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "F"
					},
					"AQAAAMMKAAAAAAAAxAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwoAAAAAAADDCgAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert_completion",
					{
						"completion": "Falcor",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Falcor"
					},
					"AgAAAMMKAAAAAAAAwwoAAAAAAAABAAAARsMKAAAAAAAAyQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAoAAAAAAADECgAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "::f"
					},
					"AwAAAMkKAAAAAAAAygoAAAAAAAAAAAAAygoAAAAAAADLCgAAAAAAAAAAAADLCgAAAAAAAMwKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQoAAAAAAADJCgAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert_completion",
					{
						"completion": "float4",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "float4"
					},
					"AgAAAMsKAAAAAAAAywoAAAAAAAABAAAAZssKAAAAAAAA0QoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAoAAAAAAADMCgAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"left_delete",
					null,
					"AQAAANAKAAAAAAAA0AoAAAAAAAABAAAANA",
					"AQAAAAAAAAABAAAA0QoAAAAAAADRCgAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAANAKAAAAAAAA0QoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AoAAAAAAADQCgAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": " bbx"
					},
					"BAAAANEKAAAAAAAA0goAAAAAAAAAAAAA0goAAAAAAADTCgAAAAAAAAAAAADTCgAAAAAAANQKAAAAAAAAAAAAANQKAAAAAAAA1QoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QoAAAAAAADRCgAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"left_delete",
					null,
					"AQAAANQKAAAAAAAA1AoAAAAAAAABAAAAeA",
					"AQAAAAAAAAABAAAA1QoAAAAAAADVCgAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "ox_min"
					},
					"BgAAANQKAAAAAAAA1QoAAAAAAAAAAAAA1QoAAAAAAADWCgAAAAAAAAAAAADWCgAAAAAAANcKAAAAAAAAAAAAANcKAAAAAAAA2AoAAAAAAAAAAAAA2AoAAAAAAADZCgAAAAAAAAAAAADZCgAAAAAAANoKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1AoAAAAAAADUCgAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANoKAAAAAAAA2woAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2goAAAAAAADaCgAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " F"
					},
					"AgAAANsKAAAAAAAA3AoAAAAAAAAAAAAA3AoAAAAAAADdCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2woAAAAAAADbCgAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert_completion",
					{
						"completion": "Falcor",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Falcor"
					},
					"AgAAANwKAAAAAAAA3AoAAAAAAAABAAAARtwKAAAAAAAA4goAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QoAAAAAAADdCgAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "::fl"
					},
					"BAAAAOIKAAAAAAAA4woAAAAAAAAAAAAA4woAAAAAAADkCgAAAAAAAAAAAADkCgAAAAAAAOUKAAAAAAAAAAAAAOUKAAAAAAAA5goAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4goAAAAAAADiCgAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert_completion",
					{
						"completion": "float3",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "float3"
					},
					"AgAAAOQKAAAAAAAA5AoAAAAAAAACAAAAZmzkCgAAAAAAAOoKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5goAAAAAAADmCgAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " bbo"
					},
					"BAAAAOoKAAAAAAAA6woAAAAAAAAAAAAA6woAAAAAAADsCgAAAAAAAAAAAADsCgAAAAAAAO0KAAAAAAAAAAAAAO0KAAAAAAAA7goAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6goAAAAAAADqCgAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "x_max,"
					},
					"BgAAAO4KAAAAAAAA7woAAAAAAAAAAAAA7woAAAAAAADwCgAAAAAAAAAAAADwCgAAAAAAAPEKAAAAAAAAAAAAAPEKAAAAAAAA8goAAAAAAAAAAAAA8goAAAAAAADzCgAAAAAAAAAAAADzCgAAAAAAAPQKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7goAAAAAAADuCgAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPQKAAAAAAAA9QoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AoAAAAAAAD0CgAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"paste",
					null,
					"AQAAAPUKAAAAAAAANwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QoAAAAAAAD1CgAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADgLAAAAAAAAOQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAsAAAAAAAA4CwAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					6,
					"left_delete",
					null,
					"BgAAADYLAAAAAAAANgsAAAAAAAABAAAAczULAAAAAAAANQsAAAAAAAABAAAAZTQLAAAAAAAANAsAAAAAAAABAAAAdTMLAAAAAAAAMwsAAAAAAAABAAAAbDILAAAAAAAAMgsAAAAAAAABAAAAYTELAAAAAAAAMQsAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAANwsAAAAAAAA3CwAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "argume"
					},
					"BgAAADELAAAAAAAAMgsAAAAAAAAAAAAAMgsAAAAAAAAzCwAAAAAAAAAAAAAzCwAAAAAAADQLAAAAAAAAAAAAADQLAAAAAAAANQsAAAAAAAAAAAAANQsAAAAAAAA2CwAAAAAAAAAAAAA2CwAAAAAAADcLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQsAAAAAAAAxCwAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert_completion",
					{
						"completion": "arguments",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "arguments"
					},
					"AgAAADELAAAAAAAAMQsAAAAAAAAGAAAAYXJndW1lMQsAAAAAAAA6CwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwsAAAAAAAA3CwAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BQAAAMMKAAAAAAAAxAoAAAAAAAAAAAAAxAoAAAAAAADFCgAAAAAAAAAAAADFCgAAAAAAAMYKAAAAAAAAAAAAAMYKAAAAAAAAxwoAAAAAAAAAAAAAxwoAAAAAAADICgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwoAAAAAAADDCgAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMgKAAAAAAAAyQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAoAAAAAAADICgAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAANcKAAAAAAAA2AoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1woAAAAAAADXCgAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BQAAAOMKAAAAAAAA5AoAAAAAAAAAAAAA5AoAAAAAAADlCgAAAAAAAAAAAADlCgAAAAAAAOYKAAAAAAAAAAAAAOYKAAAAAAAA5woAAAAAAAAAAAAA5woAAAAAAADoCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4woAAAAAAADjCgAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOgKAAAAAAAA6QoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AoAAAAAAADoCgAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAPcKAAAAAAAA+AoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9woAAAAAAAD3CgAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "Veco"
					},
					"BQAAAMkKAAAAAAAAygoAAAAAAAAAAAAAygoAAAAAAADKCgAAAAAAAA0AAABGYWxjb3I6OmZsb2F0ygoAAAAAAADLCgAAAAAAAAAAAADLCgAAAAAAAMwKAAAAAAAAAAAAAMwKAAAAAAAAzQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQoAAAAAAADWCgAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"left_delete",
					null,
					"AQAAAMwKAAAAAAAAzAoAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAzQoAAAAAAADNCgAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "tor"
					},
					"AwAAAMwKAAAAAAAAzQoAAAAAAAAAAAAAzQoAAAAAAADOCgAAAAAAAAAAAADOCgAAAAAAAM8KAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAoAAAAAAADMCgAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"paste",
					null,
					"AgAAAOIKAAAAAAAA6QoAAAAAAAAAAAAA6QoAAAAAAADpCgAAAAAAAA4AAABGYWxjb3I6OmZsb2F0Mw",
					"AQAAAAAAAAABAAAA4goAAAAAAADwCgAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"CAAAAFMCAAAAAAAAVAIAAAAAAAAAAAAAVAIAAAAAAABYAgAAAAAAAAAAAABYAgAAAAAAAFkCAAAAAAAAAAAAAFkCAAAAAAAAXQIAAAAAAAAAAAAAVAIAAAAAAABUAgAAAAAAAAQAAAAgICAgWQIAAAAAAABaAgAAAAAAAAAAAABaAgAAAAAAAF4CAAAAAAAAAAAAAFUCAAAAAAAAVQIAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAUwIAAAAAAABTAgAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"reindent",
					null,
					"AQAAAFUCAAAAAAAAWQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQIAAAAAAABVAgAAAAAAAAAAAAAAAEJA"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "us"
					},
					"AwAAAFkCAAAAAAAAWgIAAAAAAAAAAAAAWwIAAAAAAABbAgAAAAAAAAQAAAAgICAgWgIAAAAAAABbAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQIAAAAAAABZAgAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert_completion",
					{
						"completion": "using",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "using"
					},
					"AgAAAFkCAAAAAAAAWQIAAAAAAAACAAAAdXNZAgAAAAAAAF4CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwIAAAAAAABbAgAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": " Vec"
					},
					"BAAAAF4CAAAAAAAAXwIAAAAAAAAAAAAAXwIAAAAAAABgAgAAAAAAAAAAAABgAgAAAAAAAGECAAAAAAAAAAAAAGECAAAAAAAAYgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgIAAAAAAABeAgAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert_completion",
					{
						"completion": "Vector3",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Vector3"
					},
					"AgAAAF8CAAAAAAAAXwIAAAAAAAADAAAAVmVjXwIAAAAAAABmAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgIAAAAAAABiAgAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGYCAAAAAAAAZwIAAAAAAAAAAAAAZwIAAAAAAABoAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZgIAAAAAAABmAgAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": " ls"
					},
					"AwAAAGgCAAAAAAAAaQIAAAAAAAAAAAAAaQIAAAAAAABqAgAAAAAAAAAAAABqAgAAAAAAAGsCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAIAAAAAAABoAgAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert_completion",
					{
						"completion": "lsd",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "lsd"
					},
					"AgAAAGkCAAAAAAAAaQIAAAAAAAACAAAAbHNpAgAAAAAAAGwCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawIAAAAAAABrAgAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGwCAAAAAAAAbQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAIAAAAAAABsAgAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"left_delete",
					null,
					"AQAAAGwCAAAAAAAAbAIAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAbQIAAAAAAABtAgAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "::s"
					},
					"AwAAAGwCAAAAAAAAbQIAAAAAAAAAAAAAbQIAAAAAAABuAgAAAAAAAAAAAABuAgAAAAAAAG8CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAIAAAAAAABsAgAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"left_delete",
					null,
					"AQAAAG4CAAAAAAAAbgIAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAbwIAAAAAAABvAgAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "as"
					},
					"AgAAAG4CAAAAAAAAbwIAAAAAAAAAAAAAbwIAAAAAAABwAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgIAAAAAAABuAgAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert_completion",
					{
						"completion": "ast",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "ast"
					},
					"AgAAAG4CAAAAAAAAbgIAAAAAAAACAAAAYXNuAgAAAAAAAHECAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcAIAAAAAAABwAgAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "::V"
					},
					"AwAAAHECAAAAAAAAcgIAAAAAAAAAAAAAcgIAAAAAAABzAgAAAAAAAAAAAABzAgAAAAAAAHQCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQIAAAAAAABxAgAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert_completion",
					{
						"completion": "Vector3",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Vector3"
					},
					"AgAAAHMCAAAAAAAAcwIAAAAAAAABAAAAVnMCAAAAAAAAegIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAIAAAAAAAB0AgAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHoCAAAAAAAAewIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegIAAAAAAAB6AgAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					3,
					"right_delete",
					null,
					"AwAAAG4CAAAAAAAAbgIAAAAAAAADAAAAYXN0bgIAAAAAAABuAgAAAAAAAAEAAAA6bgIAAAAAAABuAgAAAAAAAAEAAAA6",
					"AQAAAAAAAAABAAAAbgIAAAAAAABxAgAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": "map"
					},
					"AwAAACQLAAAAAAAAJQsAAAAAAAAAAAAAJQsAAAAAAAAmCwAAAAAAAAAAAAAmCwAAAAAAACcLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAsAAAAAAAAkCwAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					10,
					"right_delete",
					null,
					"CgAAACcLAAAAAAAAJwsAAAAAAAABAAAAdicLAAAAAAAAJwsAAAAAAAABAAAAZScLAAAAAAAAJwsAAAAAAAABAAAAYycLAAAAAAAAJwsAAAAAAAABAAAAdCcLAAAAAAAAJwsAAAAAAAABAAAAbycLAAAAAAAAJwsAAAAAAAABAAAAcicLAAAAAAAAJwsAAAAAAAABAAAAPCcLAAAAAAAAJwsAAAAAAAABAAAAcycLAAAAAAAAJwsAAAAAAAABAAAAdCcLAAAAAAAAJwsAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAJwsAAAAAAAAnCwAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					6,
					"right_delete",
					null,
					"BgAAACcLAAAAAAAAJwsAAAAAAAABAAAAOicLAAAAAAAAJwsAAAAAAAABAAAAOicLAAAAAAAAJwsAAAAAAAABAAAAcCcLAAAAAAAAJwsAAAAAAAABAAAAYScLAAAAAAAAJwsAAAAAAAABAAAAaScLAAAAAAAAJwsAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAJwsAAAAAAAAnCwAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"right_delete",
					null,
					"AQAAAEULAAAAAAAARQsAAAAAAAABAAAAPg",
					"AQAAAAAAAAABAAAARQsAAAAAAABFCwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "#include <utility>\n#include <mutex>\n#include <limits>\n#include <fstream>\n#include <cstdlib>\n\n#include <math.h>\n\n#include \"Falcor/Core/API/Texture.h\"\n#include \"Falcor/Scene/Lights/Light.h\"\n#include \"Falcor/Scene/Material/StandardMaterial.h\"\n#include \"Falcor/Scene/MaterialX/MxNode.h\"\n#include \"Falcor/Scene/MaterialX/MaterialX.h\"\n#include \"Falcor/Utils/ConfigStore.h\"\n#include \"Falcor/Utils/Math/FalcorMath.h\"\n#include \"Falcor/Utils/Timing/TimeReport.h\"\n\n#include \"session.h\"\n#include \"session_helpers.h\"\n\n#include \"../display.h\"\n#include \"../aov.h\"\n#include \"../renderer.h\"\n#include \"../scene_builder.h\" \n\n#include \"lava_utils_lib/ut_fsys.h\"\n#include \"lava_utils_lib/ut_string.h\"\n#include \"lava_utils_lib/logging.h\"\n\n#include \"glm/gtx/string_cast.hpp\"\n\n\nstatic constexpr float halfC = (float)M_PI / 180.0f;\n\nnamespace lava {\n\nnamespace lsd {\n\nusing DisplayType = Display::DisplayType;\n\n\nSession::UniquePtr Session::create(std::shared_ptr<Renderer> pRenderer) {\n\tassert(pRenderer);\n\n\tauto pSession = Session::UniquePtr(new Session(pRenderer));\n\tauto pGlobal = scope::Global::create();\n\tif (!pGlobal) {\n\t\treturn nullptr;\n\t}\n\n\tpSession->mpGlobal = pGlobal;\n\tpSession->mpCurrentScope = pGlobal;\n\n\treturn std::move(pSession);\n}\n\nSession::Session(std::shared_ptr<Renderer> pRenderer):mFirstRun(true) { \n\tmpRenderer = pRenderer;\n\tmpDevice = mpRenderer->device();\n}\n\nSession::~Session() {\n\tif(mpDisplay) mpDisplay = nullptr;\n}\n\nvoid Session::cmdSetEnv(const std::string& key, const std::string& value) {\n\tsetEnvVariable(key, value);\n}\n\nvoid Session::cmdConfig(lsd::ast::Type type, const std::string& name, const lsd::PropValue& value) {\n#define get_bool(_a) (boost::get<int>(_a) == 0) ? false : true\n\n\tif (name == \"vtoff\") { mRendererConfig.useVirtualTexturing = get_bool(value); return; }\n\tif (name == \"fconv\") { mRendererConfig.forceVirtualTexturesReconversion = get_bool(value); return; }\n\tif (name == \"async_geo\") { mRendererConfig.useAsyncGeometryProcessing = get_bool(value); return; }\n\tif (name == \"generate_meshlets\") { mRendererConfig.generateMeshlets = get_bool(value); return; }\n\tif (name == \"cull_mode\") { mRendererConfig.cullMode = boost::get<std::string>(value); return; }\n\tif (name == \"vtex_conv_quality\") { mRendererConfig.virtualTexturesCompressionQuality = boost::get<std::string>(value); return; }\n\tif (name == \"vtex_tlc\") { mRendererConfig.virtualTexturesCompressorType = boost::get<std::string>(value); return; }\n\tif (name == \"vtex_tlc_level\") { mRendererConfig.virtualTexturesCompressionLevel = (uint8_t)boost::get<int>(value); return; }\n\tif (name == \"geo_tangent_generation\") { mRendererConfig.tangentGenerationMode = boost::get<std::string>(value); return; }\n\n\tLLOG_WRN << \"Unsupported renderer configuration property: \" << name << \" of type:\" << to_string(type);\n\treturn;\n\n#undef get_bool\n}\n\nvoid Session::setEnvVariable(const std::string& key, const std::string& value){\n\tLLOG_DBG << \"setEnvVariable: \" << key << \" : \" << value;\n\tmEnvmap[key] = value;\n}\n\nstd::string Session::getExpandedString(const std::string& s) {\n\t\tstd::string result = s;\n\n\tfor( auto const& [key, val] : mEnvmap )\n\t\tresult = ut::string::replace(result, '$' + key, val);\n\n\treturn result;\n}\n\nvoid Session::cmdImage(lsd::ast::DisplayType display_type, const std::string& filename) {\n\tmCurrentDisplayInfo.outputFileName = ((!filename.empty()) ? filename : std::string(\"unnamed\"));\n\n\tif (mIPR) {\n\t\tmCurrentDisplayInfo.displayType = Display::DisplayType::IP;\n\t} else if (display_type == lsd::ast::DisplayType::NONE ) {\n\t\tmCurrentDisplayInfo.displayType = resolveDisplayTypeByFileName(filename);\n\t} else {\n    \tmCurrentDisplayInfo.displayType = display_type;\n    }\n}\n\n// initialize frame independet render data\nbool Session::prepareDisplayData() {\n\t// prepare display driver parameters\n\tauto& props_container = mpGlobal->filterProperties(ast::Style::PLANE, std::regex(\"^IPlay\\\\.[a-zA-Z]*\"));\n\tfor( auto const& item: props_container.properties()) {\n\t\tLLOG_DBG << \"Display property: \" << to_string(item.first);\n\n\t\tconst std::string& parm_name = item.first.second.substr(6); // remove leading \"IPlay.\"\n\t\tconst Property& prop = item.second;\n\t\tswitch(item.second.type()) {\n\t\t\tcase ast::Type::FLOAT:\n\t\t\t\tmCurrentDisplayInfo.displayFloatParameters.push_back(std::pair<std::string, std::vector<float>>( parm_name, {prop.get<float>()} ));\n\t\t\t\tbreak;\n\t\t\tcase ast::Type::INT:\n\t\t\t\tmCurrentDisplayInfo.displayIntParameters.push_back(std::pair<std::string, std::vector<int>>( parm_name, {prop.get<int>()} ));\n\t\t\t\tbreak;\n\t\t\tcase ast::Type::STRING:\n\t\t\t\tmCurrentDisplayInfo.displayStringParameters.push_back(std::pair<std::string, std::vector<std::string>>( parm_name, {prop.get<std::string>()} ));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t// quantization parameters\n\tstd::string typeFormatName = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"quantize\", std::string(\"float16\"));\n\n\tmCurrentDisplayInfo.typeFormat = resolveDisplayTypeFormat(typeFormatName);\n\treturn true;\n}\n\nvoid Session::setUpCamera(Falcor::Camera::SharedPtr pCamera, Falcor::float4 cropRegion) {\n\tassert(pCamera);\n\t\n\t// set up camera data\n\tVector2 camera_clip = mpGlobal->getPropertyValue(ast::Style::CAMERA, \"clip\", Vector2{0.01, 1000.0});\n\n\tstd::string camera_projection_name = mpGlobal->getPropertyValue(ast::Style::CAMERA, \"projection\", std::string(\"perspective\"));\n\n\tauto dims = mCurrentFrameInfo.renderRegionDims();\n\n\tfloat aspect_ratio = static_cast<float>(mCurrentFrameInfo.imageWidth) / static_cast<float>(mCurrentFrameInfo.imageHeight);\n\t\n\tpCamera->setAspectRatio(aspect_ratio);\n\tpCamera->setViewMatrix(mpGlobal->getTransformList()[0]);\n\tpCamera->setNearPlane(camera_clip[0]);\n\tpCamera->setFarPlane(camera_clip[1]);\n\tpCamera->setCropRegion(cropRegion);\n\n\tconst auto& segments = mpGlobal->segments();\n\tif(segments.size()) {\n\t\tconst auto& pSegment = segments[0];\n\n\t\tconst float camera_focus_distance = pSegment->getPropertyValue(ast::Style::CAMERA, \"focus\", 10000.0f);\n\t\tconst float camera_fstop = pSegment->getPropertyValue(ast::Style::CAMERA, \"fstop\", 5.6f);\n\t\tconst float camera_focal = pSegment->getPropertyValue(ast::Style::CAMERA, \"focal\", 50.0f);\n\t\tconst bool use_dof = pSegment->getPropertyValue(ast::Style::IMAGE, \"usedof\", bool(false));\n\n\t\tfloat apertureRadius = 0.0f;\n\t\tif (use_dof) {\n\t\t\tfloat sceneUnit = 1.0f;\n\t\t\tfloat focalLength = camera_focal;\n\t \t\tapertureRadius = apertureFNumberToRadius(camera_fstop, focalLength, sceneUnit);\n\t\t}\n\n\t\tpCamera->setFocalDistance(camera_focus_distance);\n\t\tpCamera->setApertureRadius(apertureRadius);\n\t\tpCamera->setFocalLength(50.0 * pSegment->getPropertyValue(ast::Style::CAMERA, \"zoom\", (double)1.0));\n\t\tpCamera->setFrameHeight((1.0f / aspect_ratio) * 50.0);\n\t}\n}\n\nvoid Session::cmdQuit() {\n\t//mpRendererIface = nullptr;\n}\n\nbool Session::cmdRaytrace() {\n\tPROFILE(mpDevice, \"cmdRaytrace\");\n\n\t// Set up image sampling\n\tconst int imageSamples = mCurrentFrameInfo.imageSamples = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"samples\", 1);\n\tint  sampleUpdateInterval = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"sampleupdate\", 0);\n\n\tconst Int2 tileSize = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"tilesize\", Int2{256, 256});\n\tconst bool tiled_rendering_mode = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"tiling\", false);\n\n\t// Renderer and it's rendergraph configuration\n\tauto& confDict = mpRenderer->getRendererConfDict();\n\tconfDict[\"primaryraygentype\"] = mpGlobal->getPropertyValue(ast::Style::RENDERER, \"primaryraygentype\", std::string(\"hwraster\"));\n\tconfDict[\"shadingpasstype\"] = mpGlobal->getPropertyValue(ast::Style::RENDERER, \"shadingpasstype\", std::string(\"deferred\"));\n\n\t// Rendering passes configuration\n\tauto& passDict = mpRenderer->getRenderPassesDict();\n\n  \tpassDict[\"russRoulleteLevel\"] = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"rrouletlevel\", int(2));\n  \tpassDict[\"rayContribThreshold\"] = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"raythreshold\", float(0.1f));\n\tpassDict[\"useDOF\"] = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"usedof\", bool(false));\n\tpassDict[\"useSTBN\"] = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"stbn_sampling\", bool(false));\n\tpassDict[\"shadingRate\"] = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"shadingrate\", int(1));\n\n\tpassDict[\"asyncLtxLoading\"] = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"asyncltxloading\", bool(true));\n\n\tpassDict[\"rayBias\"] = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"raybias\", 0.001f);\n\tpassDict[\"colorLimit\"] = to_float3(mpGlobal->getPropertyValue(ast::Style::IMAGE, \"colorlimit\", lsd::Vector3{10.0f, 10.0f, 10.0f}));\n\tpassDict[\"indirectColorLimit\"] = to_float3(mpGlobal->getPropertyValue(ast::Style::IMAGE, \"indirectcolorlimit\", lsd::Vector3{3.0f, 3.0f, 3.0f}));\n\tpassDict[\"rayReflectLimit\"] = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"reflectlimit\", int(0));\n\tpassDict[\"rayRefractLimit\"] = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"refractlimit\", int(0));\n\tpassDict[\"rayDiffuseLimit\"] = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"diffuselimit\", int(0));\n\tpassDict[\"areaLightsSamplingMode\"] = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"areasampling\", std::string(\"urena\"));\n\n\tpassDict[\"MAIN.ToneMappingPass.enable\"] = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"ToneMappingPass.enable\", bool(false));\n\tpassDict[\"MAIN.ToneMappingPass.operator\"] = (uint32_t)mpGlobal->getPropertyValue(ast::Style::IMAGE, \"ToneMappingPass.operator\", int(4));\n\n\tpassDict[\"MAIN.ToneMappingPass.filmSpeed\"] = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"ToneMappingPass.filmSpeed\", float(100.0));\n\tpassDict[\"MAIN.ToneMappingPass.exposureValue\"] = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"ToneMappingPass.exposureValue\", float(0.0));\n\tpassDict[\"MAIN.ToneMappingPass.autoExposure\"] = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"ToneMappingPass.autoExposure\", bool(false));\n\n\tpassDict[\"MAIN.OpenDenoisePass.enable\"] = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"OpenDenoisePass.enable\", bool(false));\n\tpassDict[\"MAIN.OpenDenoisePass.useAlbedo\"] = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"OpenDenoisePass.useAlbedo\", bool(true));\n\tpassDict[\"MAIN.OpenDenoisePass.useNormal\"] = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"OpenDenoisePass.useNormal\", bool(true));\n\n\tauto pMainOutputPlane = mpRenderer->getAOVPlane(\"MAIN\");\n\n\tif(!pMainOutputPlane) {\n\t\tLLOG_ERR << \"No main output plane exists !\";\n\t\treturn false;\n\t}\n\n#ifdef _DEBUG\n\tmpGlobal->printSummary(std::cout);\n#endif\n\n\tif(!mpDisplay) {\n\t\tmpDisplay = createDisplay(mCurrentDisplayInfo);\n\t\tif(!mpDisplay) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tif (!mpDisplay->isInteractive()) {\n\t\t// Non interactive display. No need to make intermediate updates\n\t\tsampleUpdateInterval = 0;\n\t}\n\n\t// Prepare frame data\n\t// Set up frame resolution (as they don't have to be the same size)\n\tInt2 resolution = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"resolution\", Int2{640, 480});\n\tmCurrentFrameInfo.imageWidth = resolution[0];\n\tmCurrentFrameInfo.imageHeight = resolution[1];\n\n\tif((mCurrentFrameInfo.imageWidth == 0) || (mCurrentFrameInfo.imageHeight == 0)) {\n\t\tLLOG_ERR << \"Wrong render frame size: \" << to_string(resolution) << \" !!!\";\n\t\treturn false;\n\t}\n\n\t// Crop region\n\tVector4 crop = mpGlobal->getPropertyValue(ast::Style::IMAGE, \"crop\", Vector4({0, 0, 0, 0})); // default no crop. houdini crop is: 0-left, 1-right, 2-bottom, 3-top\n\t\n\tif((crop[0] > 0.0) || (crop[1] < 1.0) || (crop[2] > 0) || (crop[3] < 1.0)) { \n\t\tmCurrentFrameInfo.renderRegion = {\n\t\t\tuint((float)mCurrentFrameInfo.imageWidth * crop[0]), \n\t\t\tuint((float)mCurrentFrameInfo.imageHeight * (1.0f - crop[3])), \n\t\t\tuint((float)mCurrentFrameInfo.imageWidth * crop[1]), \n\t\t\tuint((float)mCurrentFrameInfo.imageHeight * (1.0f - crop[2]))\n\t\t};\n\n\t\tif((mCurrentFrameInfo.imageWidth == 0) || (mCurrentFrameInfo.imageHeight == 0)) {\n\t\t\tLLOG_ERR << \"Wrong render image region: \" << to_string(crop) << \" !!!\";\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t// No render region specified so it takes a whole frame\n\t\tmCurrentFrameInfo.renderRegion = {0, 0, resolution[0] - 1, resolution[1] - 1};\n\t}\n\n\t// Set up tiles if required or one full frame tile\n\tstd::vector<TileInfo> tiles;\n\tif (tiled_rendering_mode) {\n\t\tLLOG_DBG << \"Tiles mode\";\n\t\tmakeImageTiles(mCurrentFrameInfo, to_uint2(tileSize), tiles);\n\t} else {\n\t\tLLOG_DBG << \"Full frame mode\";\n\t\tmakeImageTiles(mCurrentFrameInfo, mCurrentFrameInfo.renderRegionDims(), tiles);\n\t}\n\n\tLLOG_INF << \"Rendering image tiles:\";\n\tfor(const TileInfo& tileInfo: tiles) LLOG_INF << to_string(tileInfo);\n\n\t// Get renderer aov planes\n\tstd::vector<std::pair<uint, AOVPlane::SharedPtr>> aovPlanes;\n\tfor(auto& entry: mpRenderer->aovPlanes()) {\n\t\tif(!entry.second->isMain()) aovPlanes.push_back({0, entry.second});\n\t}\n\n\t// Open display image\n\tuint hImage;\n\n    if(!mIPR) mpDisplay->closeAll(); // close previous frame display images (if still opened) \n\n\tstd::string imageFileName = mCurrentDisplayInfo.outputFileName;\n\tstd::string renderLabel = mpGlobal->getPropertyValue(ast::Style::RENDERER, \"renderlabel\", std::string(\"\"));\n\n\tbool clearDisplayBeforeRendering = false;\n\n\t// In case display supports metadata output and there are planes that has metadata we need to open images\n\t// after the rendring process is completed as there is no mechanism to such metadata after image already opened\n\tstd::vector<std::function<bool()>> delayedImageOpens; // Tasks to open display images if requested to be opened later\n\n\tTimeReport initDisplayTimeReport;\n\n\t{\n\t\tstd::vector<Display::UserParm> userParams;\n\t\n\t\t// houdini display driver section\n\t\tif((mpDisplay->type() == DisplayType::HOUDINI) || (mpDisplay->type() == DisplayType::MD) || (mpDisplay->type() == DisplayType::IP)) {\n\t\t\tclearDisplayBeforeRendering = mpGlobal->getPropertyValue(ast::Style::PLANE, \"IPlay.zeroimage\", bool(true));\n\t\t\tconst int houdiniPortNum = mpGlobal->getPropertyValue(ast::Style::PLANE, \"IPlay.houdiniportnum\", int(0)); \n\t\t\tconst int mplayPortNum = mpGlobal->getPropertyValue(ast::Style::PLANE, \"IPlay.socketport\", int(0));\n\t\t\tconst std::string mplayHostname = mpGlobal->getPropertyValue(ast::Style::PLANE, \"IPlay.sockethost\", std::string(\"localhost\"));\n\t\t\tconst std::string mplayRendermode = mpGlobal->getPropertyValue(ast::Style::PLANE, \"IPlay.rendermode\", std::string(\"\"));\n\t\t\t//std::string mplayLabel = mpGlobal->getPropertyValue(ast::Style::PLANE, \"IPlay.label\", renderLabel);\n\t\t\tconst std::string mplayFrange = mpGlobal->getPropertyValue(ast::Style::PLANE, \"IPlay.framerange\", std::string(\"1 1\"));\n\t\t\tconst int mplayCframe = mpGlobal->getPropertyValue(ast::Style::PLANE, \"IPlay.currentframe\", int(1));\n\n\t\t\timageFileName = mpGlobal->getPropertyValue(ast::Style::PLANE, \"IPlay.rendersource\", std::string(mCurrentDisplayInfo.outputFileName));\n\n\t\t\tuserParams.push_back(Display::makeStringsParameter(\"label\", {renderLabel}));\n\n\t\t\tif (mplayRendermode != \"\") userParams.push_back(Display::makeStringsParameter(\"numbering\", {mplayRendermode}));\n\n\t\t\tuserParams.push_back(Display::makeStringsParameter(\"frange\", {std::to_string(mplayCframe) + \" \" + mplayFrange}));\n\t    \t\n\t\t\tif ((mplayPortNum > 0) && mIPR) {\n\t    \t\tuserParams.push_back(Display::makeStringsParameter(\"remotedisplay\", {mplayHostname + \":\" + std::to_string(mplayPortNum)}));\n\t    \t\timageFileName = \"iprsocket:\" + std::to_string(mplayPortNum);\n\t    \t}\n\n\t    \tif (houdiniPortNum > 0) userParams.push_back(Display::makeIntsParameter(\"houdiniportnum\", {houdiniPortNum}));\n\t\t}\n\n    \t// Open main image plane\n    \tconst bool delayedMainImageFileCreation = mpDisplay->supportsMetaData();\n    \tauto _openMainImage = [this, imageFileName, userParams, pMainOutputPlane, &hImage]() {\n    \t\tbool result = false;\n    \t\tFalcor::ResourceFormat format = pMainOutputPlane->format();\n    \t\tif(pMainOutputPlane->hasMetaData()) {\n    \t\t\tauto metaData = pMainOutputPlane->getMetaData();\t\n    \t\t\tresult = mpDisplay->openImage(imageFileName, mCurrentFrameInfo.imageWidth, mCurrentFrameInfo.imageHeight, format, hImage, userParams, \"C\", &metaData);\n        \t} else {\n        \t\tresult = mpDisplay->openImage(imageFileName, mCurrentFrameInfo.imageWidth, mCurrentFrameInfo.imageHeight, format, hImage, userParams, \"C\");\n        \t}\n    \t\tif(!result) LLOG_FTL << \"Unable to open main output plane image !!!\";\n    \t\treturn result;\n    \t};\n\n    \tif(delayedMainImageFileCreation) {\n    \t\tdelayedImageOpens.push_back(_openMainImage);\n    \t} else {\n    \t\tif(!_openMainImage()) return false;\n    \t}\n    \tinitDisplayTimeReport.measure(\"Display main image open\");\n\t}\n\n\t// Auxiliary image planes\n\tfor(auto& entry: aovPlanes) {\n    \tauto& pPlane = entry.second;\n    \tif(!pPlane->isEnabled()) continue;\n    \t\n    \tconst std::string aovImageFileName = (pPlane->filename() != \"\") ? pPlane->filename() : imageFileName;\n    \tstd::vector<Display::UserParm> userParams;\n    \tuserParams.push_back(Display::makeStringsParameter(\"label\", {renderLabel}));\n    \tauto pPlaneDisplay = pPlane->hasDisplay() ? pPlane->getDisplay() : mpDisplay;\n    \tconst bool delayedImagFileCreation = pPlaneDisplay->supportsMetaData();\n\n    \tauto _openImage = [this, aovImageFileName, userParams, pPlaneDisplay, pPlane, &entry]() {\n    \t\tbool result = false;\n    \t\tconst std::string channel_prefix = pPlane->outputName();\n    \t\tconst Falcor::ResourceFormat format = pPlane->format();\n    \t\tif(pPlane->hasMetaData()) {\n    \t\t\tauto metaData = pPlane->getMetaData();\n    \t\t\tresult = pPlaneDisplay->openImage(aovImageFileName, mCurrentFrameInfo.imageWidth, mCurrentFrameInfo.imageHeight, format, entry.first, userParams, channel_prefix, &metaData); \n    \t\t} else {\n    \t\t\tresult = pPlaneDisplay->openImage(aovImageFileName, mCurrentFrameInfo.imageWidth, mCurrentFrameInfo.imageHeight, format, entry.first, userParams, channel_prefix);\n    \t\t}\n    \t\tif(!result) LLOG_ERR << \"Unable to open image file \" << aovImageFileName << \" for output plane \" << channel_prefix << \" !!!\";\n    \t\treturn result;\n    \t};\n\n    \tif(delayedImagFileCreation) {\n    \t\tdelayedImageOpens.push_back(_openImage);\n    \t} else {\n    \t\tif(!_openImage()) entry.second = nullptr;\n    \t}\n    }\n    initDisplayTimeReport.measure(\"Display additional images open\");\n\n///////\n\tif( 1 == 2 ) {\n\t\t// Simple performace test by sending zero image a bunch of times\n    \tfor(uint i = 0; i < 100; i++) sendImageRegionData(hImage, mpDisplay.get(), mCurrentFrameInfo, nullptr);\n    \tinitDisplayTimeReport.measure(\"Display initial zero data sent 100 times in\");\n\t}\n///////\n\n\t// It there was request to fill image with zero data before the rendering starts, we have to check out configuration meets certain criteria\n\t// First fo all there should be no additional displays that refers to the same image as main output plane driver (mpDisplay) that are postponed\n\t// to be opened later (after frame is rendered). Aslo we skip this step if the main output driver is not interactive, e.g it writes to a filesystem\n\t// as there is no benifit in doing this.\n\t// TODO: mark displays that we are going to open later and check they are writing to the same image as main mpDisplay!\n\tif(clearDisplayBeforeRendering && mpDisplay->isInteractive()) sendImageRegionData(hImage, mpDisplay.get(), mCurrentFrameInfo, nullptr);\n\n\n    initDisplayTimeReport.addTotal(\"Display init total time\");\n    initDisplayTimeReport.printToLog();\n\n    // Frame rendering\n    TimeReport renderingTimeReport;\n\t\t\n\t\tLLOG_INF << \"Rendering image started...\";\n\t\tsetUpCamera(mpRenderer->currentCamera());\n    \n    for(const auto& tile: tiles) {\n    \tLLOG_DBG << \"Rendering \" << to_string(tile);\n\n    \tRenderer::FrameInfo frameInfo = mCurrentFrameInfo;\n      \tframeInfo.renderRegion = tile.renderRegion;\n\n    \tmpRenderer->currentCamera()->setCropRegion(tile.cameraCropRegion);\n    \tmpRenderer->prepareFrame(frameInfo);\n\n\t\tAOVPlaneGeometry aov_geometry;\n\t\tif(!pMainOutputPlane->getAOVPlaneGeometry(aov_geometry)) {\n\t\t\tLLOG_FTL << \"No AOV !!!\";\n\t\t\tbreak;\n\t\t}\n\n\t\tlong int sampleUpdateIterations = 0;\n\t\tconst bool doInteractiveImageUpdates = (sampleUpdateInterval > 0) && mpDisplay->isInteractive() && mpDisplay->opened(hImage);\n\n\t\tfor(uint32_t sample_number = 0; sample_number < mCurrentFrameInfo.imageSamples; sample_number++) {\n\t\t\tmpRenderer->renderSample();\n\t\t\tif (doInteractiveImageUpdates) {\n\t\t\t\tlong int updateIter = ldiv(sample_number, sampleUpdateInterval).quot;\n\t\t\t\tif (updateIter > sampleUpdateIterations) {\n\t\t\t\t\tLLOG_DBG << \"Updating display data at sample number \" << std::to_string(sample_number);\n\t\t\t\t\t// Send image/region region for interactive/live image update\n\t\t\t\t\tif (!sendImageRegionData(hImage, mpDisplay.get(), frameInfo, pMainOutputPlane.get())) break;\n\t\t\t\t\tsampleUpdateIterations = updateIter;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmpRenderer->device()->getRenderContext()->flush(true);\n\t\trenderingTimeReport.measure(\"Image rendering time\");\n\t\tLLOG_INF << renderingTimeReport.printToString();\n\t\t\n\t\t// Open delayed images \n\t\tLLOG_DBG << \"Open \" << delayedImageOpens.size() << \" delayed images.\";\n\t\tfor(size_t i = 0; i < delayedImageOpens.size(); i++) {\n\t\t\tdelayedImageOpens[i]();\n\t\t}\n\n\t\tLLOG_DBG << \"Sending MAIN output \" << std::string(pMainOutputPlane->name()) << \" data to image handle \" << std::to_string(hImage);\n\t\t// Send image region\n\t\tif (!sendImageRegionData(hImage, mpDisplay.get(), frameInfo, pMainOutputPlane.get())) break;\n\t\t\n\t\t// Send secondary aov image planes data\n    \tfor(auto& entry: aovPlanes) {\n    \t\tuint hImage = entry.first;\n\t    \tauto& pPlane = entry.second;\n\t    \tif (pPlane && pPlane->isEnabled()) {\n\t    \t\tAOVPlaneGeometry aov_geometry;\n\t\t\t\tif(!pPlane->getAOVPlaneGeometry(aov_geometry)) {\n\t\t\t\t\tLLOG_ERR << \"Error getting AOV \" << std::string(pPlane->name()) << \" geometry!\";\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tLLOG_DBG << \"Sending AOV \" << std::string(pPlane->name()) << \" data to image handle \" << std::to_string(hImage);\n\t\t\t\t// Send image region\n\t\t\t\tauto pDisplay = pPlane->hasDisplay() ? pPlane->getDisplay() : mpDisplay;\n\t\t\t\tif (!sendImageRegionData(hImage, pDisplay.get(), frameInfo, pPlane.get())) {\n\t\t\t\t\tLLOG_ERR << \"Error sending AOV \" << std::string(pPlane->name()) << \" to display!\";\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t    \t}\n\t    }\n\t}\n\n\tLLOG_DBG << \"Closing display...\";\n  if(!mIPR) mpDisplay->closeImage(hImage);\n\n  // Close secondary aov images\n\tfor(auto& entry: aovPlanes) {\n\tuint hImage = entry.first;\n  \tauto& pPlane = entry.second;\n  \tif (pPlane) {\n  \t\tauto pDisplay = pPlane->hasDisplay() ? pPlane->getDisplay() : mpDisplay;\n  \t\tif(!mIPR) pDisplay->closeImage(hImage);\n  \t}\n  }\n\n  LLOG_DBG << \"Display closed!\";\n\n//#ifdef FALCOR_ENABLE_PROFILER\n//    auto profiler = Falcor::Profiler::instance(mpDevice);\n//    profiler.endFrame();\n//#endif\n\treturn true;\n}\n\nvoid Session::pushBgeo(const std::string& name, lsd::scope::Geo::SharedPtr pGeo) {\n\tassert(pGeo);\n\n  auto pSceneBuilder = mpRenderer->sceneBuilder();\n  if(!pSceneBuilder) {\n\tLLOG_ERR << \"Can't push geometry (bgeo). SceneBuilder not ready !!!\";\n\treturn;\n  }\n\n \t// immediate mesh add\n \tika::bgeo::Bgeo::SharedPtr pBgeo = pGeo->bgeo();\n \tstd::string fullpath = pGeo->detailFilePath().string();\n  pBgeo->readGeoFromFile(fullpath.c_str(), false); // FIXME: don't check version for now\n\n \tif(!pBgeo) {\n \t\tLLOG_ERR << \"Can't load geometry (bgeo) !!!\";\n \t\treturn;\n \t}\n\n#ifdef _DEBUG\n    pBgeo->printSummary(std::cout);\n#endif\n\n   mMeshMap[name] = pSceneBuilder->addGeometry(pBgeo, name);\n}\n\nvoid Session::pushBgeoAsync(const std::string& name, lsd::scope::Geo::SharedPtr pGeo) {\n\tassert(pGeo);\n\n\tauto pSceneBuilder = mpRenderer->sceneBuilder();\n\tif(!pSceneBuilder) {\n\t\tLLOG_ERR << \"Can't push geometry (bgeo). SceneBuilder not ready !!!\";\n\t\treturn;\n\t}\n\n\t// async mesh add \n   \tmMeshMap[name] = pSceneBuilder->addGeometryAsync(pGeo, name);\n}\n\nvoid Session::pushLight(const scope::Light::SharedPtr pLightScope) {\n\tassert(pLightScope);\n\n\tauto pSceneBuilder = mpRenderer->sceneBuilder();\n\n    if (!pSceneBuilder) {\n\t\tLLOG_ERR << \"Unable to push light. SceneBuilder not ready !!!\";\n\t\treturn;\n\t}\n\n\tconst std::string& light_type = pLightScope->getPropertyValue(ast::Style::LIGHT, \"type\", std::string(\"point\"));\n\tconst std::string& light_name = pLightScope->getPropertyValue(ast::Style::OBJECT, \"name\", std::string(\"\"));\n\tglm::mat4 transform = pLightScope->getTransformList()[0];\n\n\tlsd::Vector3 light_color = lsd::Vector3{1.0, 1.0, 1.0}; // defualt light color\n\tFalcor::float3 light_pos = {transform[3][0], transform[3][1], transform[3][2]}; // light position\n\tFalcor::float3 light_dir = {-transform[2][0], -transform[2][1], -transform[2][2]};\n\t\n\tProperty* pShaderProp = pLightScope->getProperty(ast::Style::LIGHT, \"shader\");\n\tstd::shared_ptr<PropertiesContainer> pShaderProps;\n\n\tif(pShaderProp) {\n\t\tpShaderProps = pShaderProp->subContainer();\n\t\tlight_color = pShaderProps->getPropertyValue(ast::Style::LIGHT, \"lightcolor\", lsd::Vector3{1.0, 1.0, 1.0});\n\t} else {\n\t\tLLOG_ERR << \"No shader property set for light \" << light_name;\n\t}\n\n\tlsd::Vector3 light_diffuse_color = pLightScope->getPropertyValue(ast::Style::LIGHT, \"diffuse_color\", light_color);\n\tlsd::Vector3 light_specular_color = pLightScope->getPropertyValue(ast::Style::LIGHT, \"specular_color\", light_diffuse_color);\n\tlsd::Vector3 light_indirect_diffuse_color = pLightScope->getPropertyValue(ast::Style::LIGHT, \"indirect_diffuse_color\", light_diffuse_color);\n\tlsd::Vector3 light_indirect_specular_color = pLightScope->getPropertyValue(ast::Style::LIGHT, \"indirect_specular_color\", light_specular_color);\n\n\tFalcor::Light::SharedPtr pLight = nullptr;\n\n\tif(light_type == \"distant\") {\n\t\t// Directional light\n\n\t\tauto pDirectionalLight = Falcor::DirectionalLight::create(\"noname_distant\");\n\t\tpDirectionalLight->setWorldDirection(light_dir);\n\n\t\tpLight = std::dynamic_pointer_cast<Falcor::Light>(pDirectionalLight);\n\t} else if (light_type == \"sun\") {\n\t\t// Distant/Sun light\n\n\t\tauto pDistantLight = Falcor::DistantLight::create(\"noname_sun\");\n\t\tpDistantLight->setWorldDirection(light_dir);\n\n\t\tconst float env_angle = pLightScope->getPropertyValue(ast::Style::LIGHT, \"envangle\", float(5.0));\n\t\tpDistantLight->setAngleDegrees(env_angle);\n\n\t\tpLight = std::dynamic_pointer_cast<Falcor::Light>(pDistantLight);\n\t} else if( light_type == \"point\") {\n\t\t// Point/Spot light\n\n\n\t\tfloat light_radius = pLightScope->getPropertyValue(ast::Style::LIGHT, \"lightradius\", (float)0.0f);\n\n\t\tauto pPointLight = Falcor::PointLight::create(\"noname_point\");\n\t\tpPointLight->setWorldPosition(light_pos);\n\t\tpPointLight->setWorldDirection(light_dir);\n\n\t\tif(light_radius > 0.0f) pPointLight->setLightRadius(light_radius);\n\n\t\tbool do_cone = false;\n\t\tfloat coneangle_degrees = 360.0f;\n\t\tfloat conedelta_degrees = 0.0f;\n\n\t\tif(pShaderProps) {\n\t\t\tdo_cone = pShaderProps->getPropertyValue(ast::Style::LIGHT, \"docone\", bool(false));\n\t\t\tconeangle_degrees = pShaderProps->getPropertyValue(ast::Style::LIGHT, \"coneangle\", (float)360.0f);\n\t\t\tconedelta_degrees = pShaderProps->getPropertyValue(ast::Style::LIGHT, \"conedelta\", (float)0.0f);\n\t\t}\n\n\t\t// Spot light case\n\t\tif(do_cone && (coneangle_degrees <= 180.0f)) {\n\t\t\tpPointLight->setOpeningAngle((coneangle_degrees + conedelta_degrees * 2.0f) * halfC);\n\t\t\tpPointLight->setPenumbraHalfAngle(conedelta_degrees * halfC);\n\t\t}\n\n\t\tpLight = std::dynamic_pointer_cast<Falcor::Light>(pPointLight);\n\t} else if( light_type == \"grid\" || light_type == \"disk\" || light_type == \"sphere\") {\n\t\t// Area lights\n\t\tFalcor::AnalyticAreaLight::SharedPtr pAreaLight = nullptr;\n\n\t\tbool singleSidedLight = pLightScope->getPropertyValue(ast::Style::LIGHT, \"singlesided\", bool(false));\n\t\tbool reverseLight = false;\n\n\t\tlsd::Vector2 area_size = pLightScope->getPropertyValue(ast::Style::LIGHT, \"areasize\", lsd::Vector2{1.0, 1.0});\n\t\tbool area_normalize = pLightScope->getPropertyValue(ast::Style::LIGHT, \"areanormalize\", bool(true));\n\n\t\tif(pShaderProp) {\n\t\t\tpShaderProps = pShaderProp->subContainer();\n\t\t\treverseLight = pShaderProps->getPropertyValue(ast::Style::LIGHT, \"reverse\", bool(false));\n\t\t}\n\n\t\tif( light_type == \"grid\") {\n\t\t\tpAreaLight = Falcor::RectLight::create(\"noname_rect\");\n\t\t\tpAreaLight->setScaling({area_size[0], area_size[1], 1.0f});\n\t\t} else if ( light_type == \"disk\") {\n\t\t\tpAreaLight = Falcor::DiscLight::create(\"noname_disk\");\n\t\t\tpAreaLight->setScaling({area_size[0], area_size[1], 1.0f});\n\t\t} else if ( light_type == \"sphere\") {\n\t\t\tpAreaLight = Falcor::SphereLight::create(\"noname_sphere\");\n\t\t\tpAreaLight->setScaling({area_size[0], area_size[1], area_size[0]});\n\t\t}\n\n\t\tif (!pAreaLight) {\n\t\t\tLLOG_ERR << \"Error creating AnalyticAreaLight !!! Skipping...\";\n\t\t\treturn;\n\t\t}\n\n\t\tpAreaLight->setTransformMatrix(transform);\n\t\tpAreaLight->setSingleSided(singleSidedLight);\n\t\tpAreaLight->setNormalizeArea(area_normalize);\n\n\t\tpLight = std::dynamic_pointer_cast<Falcor::Light>(pAreaLight);\n\t} else if( light_type == \"env\") {\n\t\t// Environment light probe is not a classid light source. It should be created later by scene builder or renderer\n\n\t\tstd::string texture_file_name = pLightScope->getPropertyValue(ast::Style::LIGHT, \"areamap\", std::string(\"\"));\n\t\tbool phantom = !pLightScope->getPropertyValue(ast::Style::LIGHT, \"visible_primary\", bool(false));\n\n\t\tauto pDevice = pSceneBuilder->device();\n\t\t//LightProbe::SharedPtr pLightProbe;\n\t\t\n\t\tTexture::SharedPtr pEnvMapTexture;\n\t\tif (texture_file_name.size() > 0) {\n\t\t\tbool loadAsSrgb = false;\t\n    \t\tpEnvMapTexture = Texture::createFromFile(pDevice, texture_file_name, true, loadAsSrgb);\n    \t}\n    \t\n    \tEnvMap::SharedPtr pEnvMap = EnvMap::create(pDevice, pEnvMapTexture);\n    \tpEnvMap->setTint(to_float3(light_color));\n    \tpEnvMap->setPhantom(phantom);\n\n    \tpSceneBuilder->setEnvMap(pEnvMap);\n\n    \t// New EnvironmentLight test\n    \tauto pEnvLight = EnvironmentLight::create(light_name, pEnvMapTexture);\n    \tpLight = std::dynamic_pointer_cast<Falcor::Light>(pEnvLight);\n\n\t} else { \n\t\tLLOG_WRN << \"Unsupported light type \" << light_type << \". Skipping...\";\n\t\treturn;\n\t}\n\n\tif(pLight) {\n\t\tLLOG_DBG << \"Light \" << light_name << \"  type \" << Falcor::to_string(pLight->getData().type);\n\n\t\tif (light_name != \"\") {\n\t\t\tpLight->setName(light_name);\n\t\t}\n\n\t\tpLight->setHasAnimation(false);\n\n\t\tProperty* pShadowProp = pLightScope->getProperty(ast::Style::LIGHT, \"shadow\");\n\t\t\n\t\t// set shadow parameters\n\t\tif (pShadowProp) {\n\t\t\tauto pShadowProps = pShadowProp->subContainer();\n\t\t\tif (pShadowProps) {\n\t\t\t\tconst std::string shadow_type_name = pShadowProps->getPropertyValue(ast::Style::LIGHT, \"shadowtype\", std::string(\"\"));\n\t\t\t\tif (shadow_type_name == \"filter\") {\n\t\t\t\t\t// alpha aware ray traced shadows\n\t\t\t\t\tpLight->setShadowType(LightShadowType::RayTraced);\n\t\t\t\t} else if (shadow_type_name == \"fast\") {\n\t\t\t\t\t// opaque ray traced shadows\n\t\t\t\t\tpLight->setShadowType(LightShadowType::RayTraced);\n\t\t\t\t} else if (shadow_type_name == \"deep\") {\n\t\t\t\t\tpLight->setShadowType(LightShadowType::ShadowMap);\n\t\t\t\t}\n\t\t\t\tconst Falcor::float3 shadow_color = to_float3(pShadowProps->getPropertyValue(ast::Style::LIGHT, \"shadow_color\", lsd::Vector3{0.0, 0.0, 0.0}));\n\t\t\t\tpLight->setShadowColor(shadow_color);\n\t\t\t}\n\t\t}\n\n\t\tpLight->setDiffuseIntensity(to_float3(light_diffuse_color));\n\t\tpLight->setSpecularIntensity(to_float3(light_specular_color));\n\t\tpLight->setIndirectDiffuseIntensity(to_float3(light_indirect_diffuse_color));\n\t\tpLight->setIndirectSpecularIntensity(to_float3(light_indirect_specular_color));\n\t\tuint32_t light_id = pSceneBuilder->addLight(pLight);\n\t\tmLightsMap[light_name] = light_id;\n\t}\n}\n\nvoid Session::cmdProperty(lsd::ast::Style style, const std::string& token, const Property::Value& value) {\n\tif(!mpCurrentScope) {\n\t\tLLOG_ERR << \"No current scope is set !!!\";\n\t\treturn; \n\t}\n\tauto pProp = mpCurrentScope->getProperty(style, token);\n\tif(!mpCurrentScope->getProperty(style, token)) {\n\t\tmpCurrentScope->declareProperty(style, valueType(value), token, value, Property::Owner::USER);\n\t} else {\n\t\tmpCurrentScope->setProperty(style, token, value);\n\t}\n}\n\nvoid Session::cmdPropertyV(lsd::ast::Style style, const std::vector<std::pair<std::string, Property::Value>>& values) {\n\tif(!mpCurrentScope) {\n\t\tLLOG_ERR << \"No current scope is set !!!\";\n\t\treturn; \n\t}\n\n\tif (values.size() < 2) {\n\t\tLLOG_ERR << \"Property array size should be at least 2 elements !!!\";\n\t\treturn;\n\t}\n\n\tmpCurrentScope->setProperty(style, values[0].first, values[0].second);\n\tProperty* pProp = mpCurrentScope->getProperty(style, values[0].first);\n\n\tif(!pProp) {\n\t\tLLOG_ERR << \"Error getting property \" << values[0].first;\n\t\treturn;\n\t}\n\n\tauto pSubContainer = pProp->subContainer();\n\tif(!pSubContainer) {\n\t\tLLOG_DBG << \"No sub-container for property \" << values[0].first;\n\t\treturn;\n\t}\n\n\tfor(auto it = values.begin() + 1; it != values.end(); it++) {\n\t\tpSubContainer->setProperty(style, it->first, it->second);\n\t}\n}\n\nvoid Session::cmdProcedural(const std::string& procedural, const Vector3& bbox_min, const Vector3& bbox_max, const std::map<std::string, Property::Value>& arguments) {\n\tif(procedural == \"ptinstance\") {\n\t\t// 'ptinstance' is not real procedural, rather it's a trick so we can support instances geometries using other mesh points\n\t\t\n\t}\n}\n\n\nvoid Session::cmdEdge(const std::string& src_node_uuid, const std::string& src_node_output_socket, const std::string& dst_node_uuid, const std::string& dst_node_input_socket) {\n\tauto pNode = std::dynamic_pointer_cast<scope::Node>(mpCurrentScope);\n\tif(pNode) {\n\t\tpNode->addChildEdge(src_node_uuid, src_node_output_socket, dst_node_uuid, dst_node_input_socket);\n\t}\n}\n\nvoid Session::cmdDeclare(lsd::ast::Style style, lsd::ast::Type type, const std::string& token, const lsd::PropValue& value) {\n\tif(mpCurrentScope) {\n\t\tmpCurrentScope->declareProperty(style, type, token, value.get(), Property::Owner::USER);\n\t}\n}\n\nvoid Session::cmdTransform(const Matrix4& transform) {\n\tauto pScope = std::dynamic_pointer_cast<scope::Transformable>(mpCurrentScope);\n\tif(!pScope) {\n\t\tLLOG_DBG << \"Trying to set transform on non-transformable scope !!!\";\n\t\treturn;\n\t}\n\tpScope->setTransform(transform);\n}\n\nvoid Session::cmdMTransform(const Matrix4& transform) {\n\tauto pScope = std::dynamic_pointer_cast<scope::Transformable>(mpCurrentScope);\n\tif(!pScope) {\n\t\tLLOG_DBG << \"Trying to add transform to non-transformable scope !!!\";\n\t\treturn;\n\t}\n\tpScope->addTransform(transform);\n}\n\nscope::Geo::SharedPtr Session::getCurrentGeo() {\n\tauto pGeo = std::dynamic_pointer_cast<scope::Geo>(mpCurrentScope);\n\tif(!pGeo) {\n\t\tLLOG_ERR << \"Unable to get scope::Geo. Current scope type is \" << to_string(mpCurrentScope->type()) << \" !!!\";\n\t\treturn nullptr;\n\t}\n\treturn pGeo;\n}\n\nscope::ScopeBase::SharedPtr Session::getCurrentScope() {\n\treturn std::dynamic_pointer_cast<scope::ScopeBase>(mpCurrentScope);\n}\n\nvoid Session::cmdIPRmode(lsd::ast::IPRMode mode, bool stash) {\n\tLLOG_DBG << \"cmdIPRmode \" << to_string(mode) << \" stash \" << stash;\n\tif (!mIPR) mIPR = true;\n\tmIPRmode = mode;\n}\n\nbool Session::cmdStart(lsd::ast::Style object_type) {\n\tmpRenderer->init(mRendererConfig);\n\n\tswitch (object_type) {\n\t\tcase lsd::ast::Style::GEO:\n\t\t\t{ \n\t\t\t\tauto pGlobal = std::dynamic_pointer_cast<scope::Global>(mpCurrentScope);\n\t\t\t\tif(!pGlobal) {\n\t\t\t\t\tLLOG_FTL << \"Geometries creation allowed only inside global scope !!!\";\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tmpCurrentScope = pGlobal->addGeo();\n\t\t\t\tbreak;\n\t\t\t}\n\t\tcase lsd::ast::Style::OBJECT:\n\t\t\t{\n\t\t\t\tauto pGlobal = std::dynamic_pointer_cast<scope::Global>(mpCurrentScope);\n\t\t\t\tif(!pGlobal) {\n\t\t\t\t\tLLOG_FTL << \"Objects creation allowed only inside global scope !!!\";\n\t\t\t\t\treturn false;\n\t\t\t\t} \n\t\t\t\tmpCurrentScope = pGlobal->addObject();\n\t\t\t\tbreak;\n\t\t\t}\n\t\tcase lsd::ast::Style::LIGHT:\n\t\t\t{\n\t\t\t\tauto pGlobal = std::dynamic_pointer_cast<scope::Global>(mpCurrentScope);\n\t\t\t\tif(!pGlobal) {\n\t\t\t\t\tLLOG_FTL << \"Lights creation allowed only inside global scope !!!\";\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tmpCurrentScope = pGlobal->addLight();\n\t\t\t\tbreak;\n\t\t\t}\n\t\tcase lsd::ast::Style::PLANE:\n\t\t\t{\n\t\t\t\tauto pGlobal = std::dynamic_pointer_cast<scope::Global>(mpCurrentScope);\n\t\t\t\tif(!pGlobal) {\n\t\t\t\t\tLLOG_FTL << \"Planes creation allowed only inside global scope !!!\";\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tmpCurrentScope = pGlobal->addPlane();\n\t\t\t\tbreak;\n\t\t\t}\n\t\tcase lsd::ast::Style::SEGMENT:\n\t\t\t{\n\t\t\t\tauto pGlobal = std::dynamic_pointer_cast<scope::Global>(mpCurrentScope);\n\t\t\t\tif(!pGlobal) {\n\t\t\t\t\tLLOG_FTL << \"Segments creation allowed only inside global scope !!!\";\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tmpCurrentScope = pGlobal->addSegment();\n\t\t\t\tbreak;\n\t\t\t}\n\t\tcase lsd::ast::Style::MATERIAL:\n\t\t\t{\n\t\t\t\tauto pGlobal = std::dynamic_pointer_cast<scope::Global>(mpCurrentScope); \n\t\t\t\tif(!pGlobal) {\n\t\t\t\t\tLLOG_FTL << \"Materials creation allowed only inside global scope !!!\";\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tmpCurrentScope = pGlobal->addMaterial();\n\t\t\t\tmpMaterialScope = std::dynamic_pointer_cast<scope::Material>(mpCurrentScope);\n\t\t\t\tbreak;\n\t\t\t}\n\t\tcase lsd::ast::Style::NODE:\n\t\t\t{ \n\t\t\t\tauto pNode = std::dynamic_pointer_cast<scope::Node>(mpCurrentScope);\n\t\t\t\tif(!pNode) {\n\t\t\t\t\tLLOG_FTL << \"Nodes creation allowed only inside material/node scope !!!\";\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tmpCurrentScope = pNode->addChildNode();\n\t\t\t\tbreak;\n\t\t\t}\n\t\tdefault:\n\t\t\tLLOG_FTL << \"Unsupported cmd_start style: \" << to_string(object_type);\n\t\t\treturn false;\n\t}\n\n\treturn mpCurrentScope ? true : false;\n}\n\nbool Session::cmdEnd() {\n\tauto pGlobalScope = std::dynamic_pointer_cast<scope::Global>(mpCurrentScope);\n\tif(pGlobalScope) {\n\t\tLLOG_FTL << \"Can't end global scope !!!\";\n\t\treturn false;\n\t}\n\n\tauto pParentScope = mpCurrentScope->parent();\n\tif(!pParentScope) {\n\t\tLLOG_FTL << \"Unable to end scope with no parent !!!\";\n\t\treturn false;\n\t}\n\n\tconst auto& configStore = Falcor::ConfigStore::instance();\n\n\tbool result = true;\n\n\tswitch(mpCurrentScope->type()) {\n\t\tcase ast::Style::GEO:\n\t\t\t{\n\t\t\t\tscope::Geo::SharedPtr pScopeGeo = std::dynamic_pointer_cast<scope::Geo>(mpCurrentScope);\n\t\t\t\tif(!pScopeGeo) {\n\t\t\t\t\tLLOG_ERR << \"Error ending scope of type \\\"geometry\\\"!!!\";\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tbool pushGeoAsync = mpGlobal->getPropertyValue(ast::Style::GLOBAL, \"async_geo\", bool(true));\n\t\t\t\tif( pScopeGeo->isInline() || !pushGeoAsync) {\n\t\t\t\t\tpushBgeo(pScopeGeo->detailName(), pScopeGeo);\n\t\t\t\t} else {\n\t\t\t\t\tpushBgeoAsync(pScopeGeo->detailName(), pScopeGeo);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ast::Style::OBJECT:\n\t\t\t{\n\t\t\t\tscope::Object::SharedPtr pScopeObj = std::dynamic_pointer_cast<scope::Object>(mpCurrentScope);\n\t\t\t\tif(!pScopeObj) {\n\t\t\t\t\tLLOG_ERR << \"Error ending scope of type \\\"object\\\"!!!\";\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif(!pushGeometryInstance(pScopeObj)) {\n\t\t\t\t\tmFailed = true;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ast::Style::PLANE:\n\t\t\t{\n\t\t\t\tscope::Plane::SharedPtr pScopePlane = std::dynamic_pointer_cast<scope::Plane>(mpCurrentScope);\n\t\t\t\tauto pPlane = mpRenderer->addAOVPlane(aovInfoFromLSD(pScopePlane));\n\t\t\t\t\n\t\t\t\t// Check if output plane wants own display for image output\n\t\t\t\tconst std::string& display_filename = pPlane->filename();\n\t\t\t\tif(display_filename != \"\" && !pPlane->hasDisplay()) {\n\t\t\t\t\tDisplay::SharedPtr pDisplay;\n\t\t\t\t\tif (mDisplays.find(display_filename) != mDisplays.end()) {\n\t\t\t\t\t\tpDisplay = mDisplays[display_filename];\n\t\t\t\t\t}else {\n\t\t\t\t\t\tDisplayInfo createDisplayInfo;\n\t\t\t\t\t\tcreateDisplayInfo.displayType = resolveDisplayTypeByFileName(display_filename);\n\t\t\t\t\t\tmDisplays[display_filename] = pDisplay = createDisplay(createDisplayInfo);\n\t\t\t\t\t}\n\t\t\t\t\tif(!pDisplay) {\n\t\t\t\t\t\tLLOG_FTL << \"Output plane \" << pPlane->name() << \" needs own display but has none!\";\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tpPlane->setDisplay(pDisplay);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (!pPlane) {\n\t\t\t\t\tLLOG_FTL << \"Error creating output plane \" << pPlane->name();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\ttranslateLSDPlanePropertiesToLavaDict(pScopePlane, pPlane->getRenderPassesDict());\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ast::Style::LIGHT:\n\t\t\t{\n\t\t\t\tscope::Light::SharedPtr pScopeLight = std::dynamic_pointer_cast<scope::Light>(mpCurrentScope);\n\t\t\t\tif(!pScopeLight) {\n\t\t\t\t\tLLOG_ERR << \"Error ending scope of type \\\"light\\\"!!!\";\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tpushLight(pScopeLight);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ast::Style::MATERIAL:\n\t\t\t{\n\t\t\t\tscope::Material::SharedPtr pMaterialScope = std::dynamic_pointer_cast<scope::Material>(mpCurrentScope);\n\t\t\t\tif(pMaterialScope) {\n\t\t\t\t\tauto pMaterialX = createMaterialXFromLSD(pMaterialScope);\n\t\t\t\t\tif (pMaterialX) {\n\t\t\t\t\t\t//mpRenderer->addMaterialX(std::move(pMaterialX));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresult = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ast::Style::NODE:\n\t\t\t{\n\t\t\t\tscope::Node::SharedPtr pScopeNode = std::dynamic_pointer_cast<scope::Node>(mpCurrentScope);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ast::Style::SEGMENT:\n\t\tcase ast::Style::GLOBAL:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tLLOG_ERR << \"cmd_end makes no sense. Current scope type is \" << to_string(mpCurrentScope->type()) << \" !!!\";\n\t\t\tbreak;\n\t}\n\n\tmpCurrentScope = pParentScope;\n\treturn result;\n}\n\nvoid Session::addMxNode(Falcor::MxNode::SharedPtr pParent, scope::Node::SharedConstPtr pNodeLSD) {\n\treturn;\n\tassert(pParent);\n\n\tbool is_subnet = pNodeLSD->getPropertyValue(ast::Style::OBJECT, \"is_subnet\", bool(false));\n\tstd::string node_name = pNodeLSD->getPropertyValue(ast::Style::OBJECT, \"node_name\", std::string(\"\"));\n\tstd::string node_type = pNodeLSD->getPropertyValue(ast::Style::OBJECT, \"node_type\", std::string(\"\"));\n\tstd::string node_uuid = pNodeLSD->getPropertyValue(ast::Style::OBJECT, \"node_uuid\", std::string(\"\"));\n\tstd::string node_namespace = pNodeLSD->getPropertyValue(ast::Style::OBJECT, \"node_namespace\", std::string(\"houdini\"));\n\n\tMxNode::TypeCreateInfo info = {};\n    info.nameSpace = node_namespace;\n    info.typeName = node_type;\n    info.version = 0;\n\n\tauto pNode = pParent->createNode(info, node_name);\n\tif (pNode) {\n\t\tif (mpMaterialScope->insertNode(node_uuid, pNode)) {\n\n\t\t\tfor( const auto& tmpl: pNodeLSD->socketTemplates()) {\n\t\t\t\tauto pSocket = pNode->addDataSocket(tmpl.name, tmpl.dataType, tmpl.direction);\n\t\t\t\tif (!pSocket) {\n\t\t\t\t\tLLOG_ERR << \"Error creating shading node data socket \" << tmpl.name << \" !!!\";\n\t\t\t\t} else {\n\t\t\t\t\tLLOG_DBG << \"Created node \" << tmpl.direction << \" socket \" << pSocket->path(); \n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (is_subnet) {\n\t\t\t\t// add child nodes\n\t\t\t\tfor( scope::Node::SharedConstPtr pChildNodeLSD: pNodeLSD->childNodes()) {\n\t\t\t\t\taddMxNode(pNode, pChildNodeLSD);\n\t\t\t\t}\n\n\t\t\t\t// link sockets\n\t\t\t\tfor( const scope::Node::EdgeInfo& edge: pNodeLSD->childEdges()) {\n\t\t\t\t\tFalcor::MxNode::SharedPtr pSrcNode = pNode->node(edge.src_node_uuid);\n\t\t\t\t\tFalcor::MxNode::SharedPtr pDstNode = pNode->node(edge.dst_node_uuid);\n\n\t\t\t\t\tif( pSrcNode && pDstNode) {\n\t\t\t\t\t\tFalcor::MxSocket::SharedPtr pSrcSocket = pSrcNode->outputSocket(edge.src_node_output_socket);\n\t\t\t\t\t\tFalcor::MxSocket::SharedPtr pDstSocket = pDstNode->inputSocket(edge.dst_node_input_socket);\n\t\t\t\t\t\tif( pSrcSocket && pDstSocket) {\n\t\t\t\t\t\t\tif (!pDstSocket->setInput(pDstSocket)) {\n\t\t\t\t\t\t\t\tLLOG_ERR << \"Error connecting socket \" << edge.src_node_output_socket << \" to \" << edge.dst_node_input_socket;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif( !pSrcSocket) LLOG_ERR << \"No socket named \" << edge.src_node_output_socket << \" at node \" << pSrcNode->name();\n\t\t\t\t\t\t\tif( !pDstSocket) LLOG_ERR << \"No socket named \" << edge.dst_node_input_socket << \" at node \" << pDstNode->name();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif( !pSrcNode) LLOG_ERR << \"No shading node \" << edge.src_node_uuid << \" exist !!!\";\n\t\t\t\t\t\tif( !pDstNode) LLOG_ERR << \"No shading node \" << edge.dst_node_uuid << \" exist !!!\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nFalcor::MaterialX::UniquePtr Session::createMaterialXFromLSD(scope::Material::SharedConstPtr pMaterialLSD) {\n\t\n\tstd::string material_name = pMaterialLSD->getPropertyValue(ast::Style::OBJECT, \"material_name\", std::string(\"\"));\n\n\t// We create material without device at this stage. Actual device would be set up for this material later by the\n\t// renderer itself.\n\tauto pMx = Falcor::MaterialX::createUnique(nullptr, material_name);\n\n\tfor( scope::Node::SharedConstPtr pNodeLSD: pMaterialLSD->childNodes()) {\n\t\taddMxNode(pMx->rootNode(), pNodeLSD);\n\t}\n\n\treturn std::move(pMx);\n}\n\nbool Session::cmdSocket(Falcor::MxSocketDirection direction, Falcor::MxSocketDataType dataType, const std::string& name) {\n\tassert(mpCurrentScope);\n\n\tif (mpCurrentScope->type() != ast::Style::NODE) {\n\t\tLLOG_ERR << \"Error adding node socket. Current scope is not \\\"node\\\" !!!\";\n\t\treturn false;\n\t}\n\n\tauto pNode = std::dynamic_pointer_cast<scope::Node>(mpCurrentScope);\n\tpNode->addDataSocketTemplate(name, dataType, direction);\n\treturn true;\n}\n\nbool Session::pushGeometryInstance(scope::Object::SharedConstPtr pObj) {\n\tassert(pObj);\n\n\tLLOG_DBG << \"pushGeometryInstance for geometry (mesh) name: \" << pObj->geometryName();\n\t\n\tauto pSceneBuilder = mpRenderer->sceneBuilder();\n\tif (!pSceneBuilder) {\n\t\tLLOG_ERR << \"Unable to push geometry instance. SceneBuilder not ready !!!\";\n\t\treturn false;\n\t}\n\n\tauto it = mMeshMap.find(pObj->geometryName());\n\tif(it == mMeshMap.end()) {\n\t\tLLOG_ERR << \"No geometry found for name \" << pObj->geometryName();\n\t\treturn false;\n\t}\n\n\tuint32_t exportedInstanceID = SceneBuilder::kInvalidExportedID;\n\tconst Property* pIDProperty = pObj->getProperty(ast::Style::OBJECT, \"id\");\n\tif(pIDProperty) {\n\t\texportedInstanceID = pIDProperty->get<uint32_t>();\n\t}\n\tstd::string obj_name = pObj->getPropertyValue(ast::Style::OBJECT, \"name\", std::string());\n\n\tuint32_t mesh_id = std::numeric_limits<uint32_t>::max();\n\n\ttry {\n\t\tmesh_id = std::get<uint32_t>(it->second);\t\n\t\tLLOG_DBG << \"Getting sync mesh_id for obj name instance: \"  << obj_name << \" geo name: \" << pObj->geometryName();\n\t} catch (const std::bad_variant_access&) {\n\t\tauto& f = std::get<std::shared_future<uint32_t>>(it->second);\n\t\ttry {\n\t\t\tmesh_id = f.get();\n\t\t\tLLOG_DBG << \"Getting async mesh_id for obj_name \" << obj_name;\t\n\t\t} catch(const std::exception& e) {\n        \tLLOG_ERR << \"Async geo instance creation error!!! Exception from the thread: \" << e.what();\n        \treturn false;\n    \t}\n\t} catch (...) {\n\t\tLLOG_ERR << \"Async geo instance creation error!!! Unable to get mesh id for object: \" << obj_name;\n\t}\n\n\tif (mesh_id == std::numeric_limits<uint32_t>::max()) {\n\t\treturn false;\n\t}\n\tit->second = mesh_id;\n\n\tLLOG_TRC << \"mesh_id \" << mesh_id;\n\n\tFalcor::SceneBuilder::Node node = {};\n\tnode.name = it->first;\n\tnode.transform = pObj->getTransformList()[0];\n\tnode.meshBind = glm::mat4(1);          // For skinned meshes. World transform at bind time.\n    node.localToBindPose = glm::mat4(1);   // For bones. Inverse bind transform.\n\t/*\n\t\tglm::mat4(1), // For skinned meshes. World transform at bind time.\n\t\tglm::mat4(1), // For bones. Inverse bind transform.\n\t\tFalcor::SceneBuilder::kInvalidNode // just a node with no parent\n\t};\n\t*/\n\n\tuint32_t node_id = pSceneBuilder->addNode(node);\n\n\t// TODO: this is naive test. fetch basic material data\n\tconst Property* pShaderProp = pObj->getProperty(ast::Style::OBJECT, \"surface\");\n    \n    Falcor::float3 \tsurface_base_color = {0.2, 0.2, 0.2};\n    std::string \tsurface_base_color_texture_path  = \"\";\n    std::string \tsurface_base_normal_texture_path = \"\";\n    std::string \tsurface_metallic_texture_path    = \"\";\n    std::string \tsurface_roughness_texture_path   = \"\";\n    std::string\t\tsurface_emission_texture_path    = \"\";\n\n    bool \t\t\tsurface_use_basecolor_texture  = false;\n    bool \t\t\tsurface_use_roughness_texture  = false;\n    bool \t\t\tsurface_use_metallic_texture   = false;\n    bool \t\t\tsurface_use_basenormal_texture = false;\n    bool \t\t\tsurface_use_emission_texture   = false;\n\n    bool            front_face = false;\n\n    float \t\t \tsurface_ior = 1.5;\n    float \t\t\tsurface_metallic = 0.0;\n    float \t\t\tsurface_roughness = 0.3;\n    float \t\t\tsurface_reflectivity = 1.0;\n\n    Falcor::float3  emissive_color = {0.0, 0.0, 0.0};\n    float           emissive_factor = 1.0f;\n\n    Falcor::float3  trans_color = {1.0, 1.0, 1.0};\n    float           transmission = 0.0f;\n\n    float           ao_distance = 1.0f;\n\n    if(pShaderProp) {\n    \tauto pShaderProps = pShaderProp->subContainer();\n    \tsurface_base_color = to_float3(pShaderProps->getPropertyValue(ast::Style::OBJECT, \"basecolor\", lsd::Vector3{0.2, 0.2, 0.2}));\n    \tsurface_base_color_texture_path = pShaderProps->getPropertyValue(ast::Style::OBJECT, \"basecolor_texture\", std::string());\n    \tsurface_base_normal_texture_path = pShaderProps->getPropertyValue(ast::Style::OBJECT, \"baseNormal_texture\", std::string());\n    \tsurface_metallic_texture_path = pShaderProps->getPropertyValue(ast::Style::OBJECT, \"metallic_texture\", std::string());\n    \tsurface_roughness_texture_path = pShaderProps->getPropertyValue(ast::Style::OBJECT, \"rough_texture\", std::string());\n    \tsurface_emission_texture_path = pShaderProps->getPropertyValue(ast::Style::OBJECT, \"emitcolor_texture\", std::string());\n\n    \tsurface_use_basecolor_texture = pShaderProps->getPropertyValue(ast::Style::OBJECT, \"basecolor_useTexture\", false);\n    \tsurface_use_metallic_texture = pShaderProps->getPropertyValue(ast::Style::OBJECT, \"metallic_useTexture\", false);\n    \tsurface_use_roughness_texture = pShaderProps->getPropertyValue(ast::Style::OBJECT, \"rough_useTexture\", false);\n    \tsurface_use_emission_texture = pShaderProps->getPropertyValue(ast::Style::OBJECT, \"emitcolor_useTexture\", false);\n    \tsurface_use_basenormal_texture = pShaderProps->getPropertyValue(ast::Style::OBJECT, \"baseBumpAndNormal_enable\", false);\n\n    \tsurface_ior = pShaderProps->getPropertyValue(ast::Style::OBJECT, \"ior\", 1.5f);\n    \tsurface_metallic = pShaderProps->getPropertyValue(ast::Style::OBJECT, \"metallic\", 0.0f);\n    \tsurface_roughness = pShaderProps->getPropertyValue(ast::Style::OBJECT, \"rough\", 0.3f);\n    \tsurface_reflectivity = pShaderProps->getPropertyValue(ast::Style::OBJECT, \"reflect\", 1.0f);\n\n    \temissive_color = to_float3(pShaderProps->getPropertyValue(ast::Style::OBJECT, \"emitcolor\", lsd::Vector3{1.0, 1.0, 1.0}));\n    \temissive_factor = pShaderProps->getPropertyValue(ast::Style::OBJECT, \"emitint\", 0.0f);\n\n    \ttrans_color = to_float3(pShaderProps->getPropertyValue(ast::Style::OBJECT, \"transcolor\", lsd::Vector3{1.0, 1.0, 1.0}));\n    \ttransmission = pShaderProps->getPropertyValue(ast::Style::OBJECT, \"transparency\", 0.0f);\n\n    \tao_distance = pShaderProps->getPropertyValue(ast::Style::OBJECT, \"ao_distance\", 1.0f);\n\n    \tfront_face = pShaderProps->getPropertyValue(ast::Style::OBJECT, \"frontface\", false);\n    } else {\n    \tLLOG_ERR << \"No surface property set for object \" << obj_name;\n    }\n\n    std::string material_name = pObj->getPropertyValue(ast::Style::OBJECT, \"materialname\", std::string(obj_name + \"_material\"));\n    \n\tFalcor::StandardMaterial::SharedPtr pMaterial = std::dynamic_pointer_cast<Falcor::StandardMaterial>(pSceneBuilder->getMaterial(material_name));\n\t\n\tif (!pMaterial) {\n\t\t// It's the first time material declaration or instance default material that should be resolved to instanced object material instead \n\t\tpMaterial = Falcor::StandardMaterial::create(mpDevice, material_name);\n\t}\n\n\tif (pMaterial) {\n\t    pMaterial->setBaseColor(surface_base_color);\n\t    pMaterial->setIndexOfRefraction(surface_ior);\n\t    pMaterial->setMetallic(surface_metallic);\n\t    pMaterial->setRoughness(surface_roughness);\n\t    pMaterial->setReflectivity(surface_reflectivity);\n\t    pMaterial->setEmissiveColor(emissive_color);\n\t    pMaterial->setEmissiveFactor(emissive_factor);\n\t    pMaterial->setAODistance(ao_distance);\n\t    pMaterial->setDoubleSided(!front_face);\n\n\t    pMaterial->setTransmissionColor(trans_color);\n\t    pMaterial->setSpecularTransmission(transmission);\n\n\t  \t//bool loadAsSrgb = true;\n\t    bool loadTexturesAsSparse = !mpGlobal->getPropertyValue(ast::Style::GLOBAL, \"vtoff\", bool(false));\n\n\t    LLOG_DBG << \"Setting \" << (loadTexturesAsSparse ? \"sparse\" : \"simple\") << \" textures for material: \" << pMaterial->getName();\n\n\t    if(surface_base_color_texture_path != \"\" && surface_use_basecolor_texture) {\n\t    \tif(!pSceneBuilder->loadMaterialTexture(pMaterial, Falcor::Material::TextureSlot::BaseColor, surface_base_color_texture_path, loadTexturesAsSparse)) {\n\t    \t\treturn false;\n\t    \t}\n\t    }\n\n\t    if(surface_metallic_texture_path != \"\" && surface_use_metallic_texture) {\n\t    \tif(!pSceneBuilder->loadMaterialTexture(pMaterial, Falcor::Material::TextureSlot::Metallic, surface_metallic_texture_path, loadTexturesAsSparse)) {\n\t    \t\treturn false;\n\t    \t}\n\t    }\n\n\t    if(surface_emission_texture_path != \"\" && surface_use_emission_texture) { \n\t    \tif(!pSceneBuilder->loadMaterialTexture(pMaterial, Falcor::Material::TextureSlot::Emissive, surface_emission_texture_path, loadTexturesAsSparse)) {\n\t    \t\treturn false;\n\t    \t}\n\t    }\n\n\t    if(surface_roughness_texture_path != \"\" && surface_use_roughness_texture) {\n\t    \tif(!pSceneBuilder->loadMaterialTexture(pMaterial, Falcor::Material::TextureSlot::Roughness, surface_roughness_texture_path, loadTexturesAsSparse)) {\n\t    \t\treturn false;\n\t    \t}\n\t    }\n\n\t    if(surface_base_normal_texture_path != \"\" && surface_use_basenormal_texture) { \n\t    \tif(!pSceneBuilder->loadMaterialTexture(pMaterial, Falcor::Material::TextureSlot::Normal, surface_base_normal_texture_path, loadTexturesAsSparse)) {\n\t    \t\treturn false;\n\t    \t}\n\t    }\n\t}\n\n\t// Instance exported data\n\tSceneBuilder::InstanceExportedDataSpec exportedSpec;\n\texportedSpec.id = exportedInstanceID;\n\texportedSpec.name = obj_name;\n\n    // Instance shading spec\n    SceneBuilder::InstanceShadingSpec shadingSpec;\n    shadingSpec.isMatte = pObj->getPropertyValue(ast::Style::OBJECT, \"matte\", false);\n    shadingSpec.fixShadowTerminator = pObj->getPropertyValue(ast::Style::OBJECT, \"fix_shadow\", true);\n    shadingSpec.biasAlongNormal = pObj->getPropertyValue(ast::Style::OBJECT, \"biasnormal\", false);\n    shadingSpec.doubleSided = pObj->getPropertyValue(ast::Style::OBJECT, \"double_sided\", true);\n\n    // Instance visibility spec\n    SceneBuilder::InstanceVisibilitySpec visibilitySpec;\n    visibilitySpec.visibleToPrimaryRays = pObj->getPropertyValue(ast::Style::OBJECT, \"visible_primary\", true);\n    visibilitySpec.visibleToShadowRays = pObj->getPropertyValue(ast::Style::OBJECT, \"visible_shadows\", true);\n    visibilitySpec.visibleToDiffuseRays = pObj->getPropertyValue(ast::Style::OBJECT, \"visible_diffuse\", true);\n    visibilitySpec.visibleToReflectionRays = pObj->getPropertyValue(ast::Style::OBJECT, \"visible_reflect\", true);\n    visibilitySpec.visibleToRefractionRays = pObj->getPropertyValue(ast::Style::OBJECT, \"visible_refract\", true);\n    visibilitySpec.receiveShadows = pObj->getPropertyValue(ast::Style::OBJECT, \"receive_shadows\", true);\n    visibilitySpec.receiveSelfShadows = pObj->getPropertyValue(ast::Style::OBJECT, \"receive_self_shadows\", true);\n    \n    SceneBuilder::MeshInstanceCreationSpec creationSpec;\n    creationSpec.pExportedDataSpec = &exportedSpec;\n    creationSpec.pVisibilitySpec = &visibilitySpec;\n    creationSpec.pShadingSpec = &shadingSpec;\n    creationSpec.pMaterialOverride = pMaterial;\n\n    // Add a mesh instance to a node\n    return pSceneBuilder->addMeshInstance(node_id, mesh_id, &creationSpec);\n}\n\n\nbool Session::cmdGeometry(const std::string& name) {\n \tif( mpCurrentScope->type() != ast::Style::OBJECT) {\n \t\tLLOG_ERR << \"cmd_geometry outside object scope !!!\";\n \t\treturn false;\n \t}\n\n \tauto pObj = std::dynamic_pointer_cast<scope::Object>(mpCurrentScope);\n \tpObj->setGeometryName(name);\n\n \treturn true;\n}\n\nvoid Session::cmdTime(double time) {\n\tmCurrentTime = time;\n\tmpRenderer->init(mRendererConfig);\n}\n\n\n}  // namespace lsd\n\n}  // namespace lava",
			"file": "src/lava_lib/reader_lsd/session.cpp",
			"file_size": 54783,
			"file_write_time": 133357093742264603,
			"settings":
			{
				"buffer_size": 54910,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAId+AAAAAAAAiH4AAAAAAAAAAAAAiH4AAAAAAACJfgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAh34AAAAAAACHfgAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"paste",
					null,
					"AQAAAIl+AAAAAAAAOX8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiX4AAAAAAACJfgAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"left_delete",
					null,
					"AgAAADN/AAAAAAAAM38AAAAAAAABAAAAOzR/AAAAAAAANH8AAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAANH8AAAAAAAA0fwAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADN/AAAAAAAANH8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAM38AAAAAAAAzfwAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAADR/AAAAAAAANn8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANH8AAAAAAAA0fwAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAADV/AAAAAAAANn8AAAAAAAAAAAAANn8AAAAAAAA3fwAAAAAAAAAAAAA2fwAAAAAAADd/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANX8AAAAAAAA1fwAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"paste",
					null,
					"AQAAAI5+AAAAAAAAl34AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjn4AAAAAAACOfgAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BgAAAMR+AAAAAAAAxX4AAAAAAAAAAAAAQH8AAAAAAABAfwAAAAAAAAEAAAAJxX4AAAAAAADGfgAAAAAAAAAAAADGfgAAAAAAAMd+AAAAAAAAAAAAAMd+AAAAAAAAyH4AAAAAAAAAAAAAyH4AAAAAAADJfgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxH4AAAAAAADEfgAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMl+AAAAAAAAyn4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyX4AAAAAAADJfgAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAANh+AAAAAAAA2X4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2H4AAAAAAADYfgAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BQAAAOR+AAAAAAAA5X4AAAAAAAAAAAAA5X4AAAAAAADmfgAAAAAAAAAAAADmfgAAAAAAAOd+AAAAAAAAAAAAAOd+AAAAAAAA6H4AAAAAAAAAAAAA6H4AAAAAAADpfgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5H4AAAAAAADkfgAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOl+AAAAAAAA6n4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6X4AAAAAAADpfgAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAPh+AAAAAAAA+X4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+H4AAAAAAAD4fgAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"paste",
					null,
					"AgAAAMp+AAAAAAAA0X4AAAAAAAAAAAAA0X4AAAAAAADRfgAAAAAAAA4AAABGYWxjb3I6OmZsb2F0Mw",
					"AQAAAAAAAAABAAAAyn4AAAAAAADYfgAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"paste",
					null,
					"AgAAAON+AAAAAAAA6n4AAAAAAAAAAAAA6n4AAAAAAADqfgAAAAAAAA4AAABGYWxjb3I6OmZsb2F0Mw",
					"AQAAAAAAAAABAAAA434AAAAAAADxfgAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAD9/AAAAAAAAQH8AAAAAAAAAAAAAQH8AAAAAAABBfwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAP38AAAAAAAA/fwAAAAAAAAAAAAAAACJA"
				],
				[
					38,
					1,
					"reindent",
					null,
					"AQAAAEB/AAAAAAAAQX8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQH8AAAAAAABAfwAAAAAAAAAAAAAAAAAA"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAEF/AAAAAAAAQn8AAAAAAAAAAAAAQn8AAAAAAABDfwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQX8AAAAAAABBfwAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEN/AAAAAAAARX8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQ38AAAAAAABDfwAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "proce"
					},
					"BQAAAER/AAAAAAAARX8AAAAAAAAAAAAARX8AAAAAAABGfwAAAAAAAAAAAABGfwAAAAAAAEd/AAAAAAAAAAAAAEd/AAAAAAAASH8AAAAAAAAAAAAASH8AAAAAAABJfwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARH8AAAAAAABEfwAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert_completion",
					{
						"completion": "procedural",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "procedural"
					},
					"AgAAAER/AAAAAAAARH8AAAAAAAAFAAAAcHJvY2VEfwAAAAAAAE5/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASX8AAAAAAABJfwAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAE5/AAAAAAAAT38AAAAAAAAAAAAAT38AAAAAAABQfwAAAAAAAAAAAABQfwAAAAAAAFF/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATn8AAAAAAABOfwAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFF/AAAAAAAAUn8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUX8AAAAAAABRfwAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAFJ/AAAAAAAAVH8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUn8AAAAAAABSfwAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"paste",
					null,
					"AQAAAFN/AAAAAAAAXX8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAU38AAAAAAABTfwAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"right_delete",
					null,
					"AQAAAF1/AAAAAAAAXX8AAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAXX8AAAAAAABdfwAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAF1/AAAAAAAAXn8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXX8AAAAAAABdfwAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAFJ/AAAAAAAAU38AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUn8AAAAAAABSfwAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"right_delete",
					null,
					"AQAAAFN/AAAAAAAAU38AAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAU38AAAAAAABTfwAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAF9/AAAAAAAAYH8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAX38AAAAAAABffwAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAGB/AAAAAAAAYn8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYH8AAAAAAABgfwAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAGF/AAAAAAAAYn8AAAAAAAAAAAAAYn8AAAAAAABjfwAAAAAAAAAAAABjfwAAAAAAAGR/AAAAAAAAAAAAAGR/AAAAAAAAZX8AAAAAAAAAAAAAYn8AAAAAAABifwAAAAAAAAEAAAAJYn8AAAAAAABkfwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYX8AAAAAAABhfwAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"left_delete",
					null,
					"AgAAAGd/AAAAAAAAZ38AAAAAAAABAAAACmJ/AAAAAAAAYn8AAAAAAAACAAAACQk",
					"AQAAAAAAAAABAAAAaH8AAAAAAABofwAAAAAAAAAAAAAAAFJA"
				],
				[
					59,
					1,
					"left_delete",
					null,
					"AQAAAD5/AAAAAAAAPn8AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAP38AAAAAAAA/fwAAAAAAAAAAAAAAgEZA"
				],
				[
					61,
					1,
					"reindent",
					null,
					"AQAAAGF/AAAAAAAAY38AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYX8AAAAAAABhfwAAAAAAAAAAAAAAdJlA"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "map"
					},
					"BAAAAAF/AAAAAAAAAn8AAAAAAAAAAAAAYn8AAAAAAABifwAAAAAAAAIAAAAJCQJ/AAAAAAAAA38AAAAAAAAAAAAAA38AAAAAAAAEfwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAX8AAAAAAAABfwAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					6,
					"right_delete",
					null,
					"BgAAAAR/AAAAAAAABH8AAAAAAAABAAAAdgR/AAAAAAAABH8AAAAAAAABAAAAZQR/AAAAAAAABH8AAAAAAAABAAAAYwR/AAAAAAAABH8AAAAAAAABAAAAdAR/AAAAAAAABH8AAAAAAAABAAAAbwR/AAAAAAAABH8AAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAABH8AAAAAAAAEfwAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					9,
					"right_delete",
					null,
					"CQAAAAV/AAAAAAAABX8AAAAAAAABAAAAcwV/AAAAAAAABX8AAAAAAAABAAAAdAV/AAAAAAAABX8AAAAAAAABAAAAZAV/AAAAAAAABX8AAAAAAAABAAAAOgV/AAAAAAAABX8AAAAAAAABAAAAOgV/AAAAAAAABX8AAAAAAAABAAAAcAV/AAAAAAAABX8AAAAAAAABAAAAYQV/AAAAAAAABX8AAAAAAAABAAAAaQV/AAAAAAAABX8AAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAABX8AAAAAAAAFfwAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"right_delete",
					null,
					"AQAAAAV/AAAAAAAABX8AAAAAAAABAAAAPA",
					"AQAAAAAAAAABAAAABX8AAAAAAAAFfwAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"right_delete",
					null,
					"AQAAACJ/AAAAAAAAIn8AAAAAAAABAAAAPg",
					"AQAAAAAAAAABAAAAIn8AAAAAAAAifwAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"reindent",
					null,
					"AQAAAFN/AAAAAAAAVX8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAU38AAAAAAABTfwAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAFV/AAAAAAAAVn8AAAAAAAAAAAAAVn8AAAAAAABXfwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVX8AAAAAAABVfwAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFd/AAAAAAAAWH8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAV38AAAAAAABXfwAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAFh/AAAAAAAAWn8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWH8AAAAAAABYfwAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "ptinstan"
					},
					"CAAAAFl/AAAAAAAAWn8AAAAAAAAAAAAAWn8AAAAAAABbfwAAAAAAAAAAAABbfwAAAAAAAFx/AAAAAAAAAAAAAFx/AAAAAAAAXX8AAAAAAAAAAAAAXX8AAAAAAABefwAAAAAAAAAAAABefwAAAAAAAF9/AAAAAAAAAAAAAF9/AAAAAAAAYH8AAAAAAAAAAAAAYH8AAAAAAABhfwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWX8AAAAAAABZfwAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "ce"
					},
					"AgAAAGF/AAAAAAAAYn8AAAAAAAAAAAAAYn8AAAAAAABjfwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYX8AAAAAAABhfwAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAAGR/AAAAAAAAZX8AAAAAAAAAAAAAZX8AAAAAAABmfwAAAAAAAAAAAABmfwAAAAAAAGd/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZH8AAAAAAABkfwAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": " not"
					},
					"BAAAAGd/AAAAAAAAaH8AAAAAAAAAAAAAaH8AAAAAAABpfwAAAAAAAAAAAABpfwAAAAAAAGp/AAAAAAAAAAAAAGp/AAAAAAAAa38AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZ38AAAAAAABnfwAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAGt/AAAAAAAAbH8AAAAAAAAAAAAAbH8AAAAAAABtfwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAa38AAAAAAABrfwAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"left_delete",
					null,
					"AQAAAGx/AAAAAAAAbH8AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAbX8AAAAAAABtfwAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": "real"
					},
					"BAAAAGx/AAAAAAAAbX8AAAAAAAAAAAAAbX8AAAAAAABufwAAAAAAAAAAAABufwAAAAAAAG9/AAAAAAAAAAAAAG9/AAAAAAAAcH8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbH8AAAAAAABsfwAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": " procedu"
					},
					"CAAAAHB/AAAAAAAAcX8AAAAAAAAAAAAAcX8AAAAAAAByfwAAAAAAAAAAAAByfwAAAAAAAHN/AAAAAAAAAAAAAHN/AAAAAAAAdH8AAAAAAAAAAAAAdH8AAAAAAAB1fwAAAAAAAAAAAAB1fwAAAAAAAHZ/AAAAAAAAAAAAAHZ/AAAAAAAAd38AAAAAAAAAAAAAd38AAAAAAAB4fwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcH8AAAAAAABwfwAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "ral"
					},
					"AwAAAHh/AAAAAAAAeX8AAAAAAAAAAAAAeX8AAAAAAAB6fwAAAAAAAAAAAAB6fwAAAAAAAHt/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeH8AAAAAAAB4fwAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAHt/AAAAAAAAfH8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAe38AAAAAAAB7fwAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": " t"
					},
					"AgAAAHx/AAAAAAAAfX8AAAAAAAAAAAAAfX8AAAAAAAB+fwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfH8AAAAAAAB8fwAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"left_delete",
					null,
					"AQAAAH1/AAAAAAAAfX8AAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAfn8AAAAAAAB+fwAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "rather"
					},
					"BgAAAH1/AAAAAAAAfn8AAAAAAAAAAAAAfn8AAAAAAAB/fwAAAAAAAAAAAAB/fwAAAAAAAIB/AAAAAAAAAAAAAIB/AAAAAAAAgX8AAAAAAAAAAAAAgX8AAAAAAACCfwAAAAAAAAAAAACCfwAAAAAAAIN/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfX8AAAAAAAB9fwAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAAIN/AAAAAAAAhH8AAAAAAAAAAAAAhH8AAAAAAACFfwAAAAAAAAAAAACFfwAAAAAAAIZ/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAg38AAAAAAACDfwAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"left_delete",
					null,
					"AQAAAIV/AAAAAAAAhX8AAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAhn8AAAAAAACGfwAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "t'"
					},
					"AgAAAIV/AAAAAAAAhn8AAAAAAAAAAAAAhn8AAAAAAACHfwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhX8AAAAAAACFfwAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAId/AAAAAAAAiH8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAh38AAAAAAACHfwAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"left_delete",
					null,
					"AQAAAId/AAAAAAAAh38AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAiH8AAAAAAACIfwAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAId/AAAAAAAAiH8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAh38AAAAAAACHfwAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAAIh/AAAAAAAAiX8AAAAAAAAAAAAAiX8AAAAAAACKfwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiH8AAAAAAACIfwAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": " trick"
					},
					"BgAAAIp/AAAAAAAAi38AAAAAAAAAAAAAi38AAAAAAACMfwAAAAAAAAAAAACMfwAAAAAAAI1/AAAAAAAAAAAAAI1/AAAAAAAAjn8AAAAAAAAAAAAAjn8AAAAAAACPfwAAAAAAAAAAAACPfwAAAAAAAJB/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAin8AAAAAAACKfwAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "\n//"
					},
					"BAAAAJB/AAAAAAAAkX8AAAAAAAAAAAAAkX8AAAAAAACTfwAAAAAAAAAAAACTfwAAAAAAAJR/AAAAAAAAAAAAAJR/AAAAAAAAlX8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkH8AAAAAAACQfwAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": " so"
					},
					"AwAAAJB/AAAAAAAAkX8AAAAAAAAAAAAAkX8AAAAAAACSfwAAAAAAAAAAAACSfwAAAAAAAJN/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkH8AAAAAAACQfwAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": " we"
					},
					"AwAAAJN/AAAAAAAAlH8AAAAAAAAAAAAAlH8AAAAAAACVfwAAAAAAAAAAAACVfwAAAAAAAJZ/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAk38AAAAAAACTfwAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": " can"
					},
					"BAAAAJZ/AAAAAAAAl38AAAAAAAAAAAAAl38AAAAAAACYfwAAAAAAAAAAAACYfwAAAAAAAJl/AAAAAAAAAAAAAJl/AAAAAAAAmn8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAln8AAAAAAACWfwAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": " sy"
					},
					"AwAAAJp/AAAAAAAAm38AAAAAAAAAAAAAm38AAAAAAACcfwAAAAAAAAAAAACcfwAAAAAAAJ1/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmn8AAAAAAACafwAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"left_delete",
					null,
					"AQAAAJx/AAAAAAAAnH8AAAAAAAABAAAAeQ",
					"AQAAAAAAAAABAAAAnX8AAAAAAACdfwAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "upport"
					},
					"BgAAAJx/AAAAAAAAnX8AAAAAAAAAAAAAnX8AAAAAAACefwAAAAAAAAAAAACefwAAAAAAAJ9/AAAAAAAAAAAAAJ9/AAAAAAAAoH8AAAAAAAAAAAAAoH8AAAAAAAChfwAAAAAAAAAAAAChfwAAAAAAAKJ/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnH8AAAAAAACcfwAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": " instances"
					},
					"CgAAAKJ/AAAAAAAAo38AAAAAAAAAAAAAo38AAAAAAACkfwAAAAAAAAAAAACkfwAAAAAAAKV/AAAAAAAAAAAAAKV/AAAAAAAApn8AAAAAAAAAAAAApn8AAAAAAACnfwAAAAAAAAAAAACnfwAAAAAAAKh/AAAAAAAAAAAAAKh/AAAAAAAAqX8AAAAAAAAAAAAAqX8AAAAAAACqfwAAAAAAAAAAAACqfwAAAAAAAKt/AAAAAAAAAAAAAKt/AAAAAAAArH8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAon8AAAAAAACifwAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": " geome"
					},
					"BgAAAKx/AAAAAAAArX8AAAAAAAAAAAAArX8AAAAAAACufwAAAAAAAAAAAACufwAAAAAAAK9/AAAAAAAAAAAAAK9/AAAAAAAAsH8AAAAAAAAAAAAAsH8AAAAAAACxfwAAAAAAAAAAAACxfwAAAAAAALJ/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArH8AAAAAAACsfwAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "trire"
					},
					"BQAAALJ/AAAAAAAAs38AAAAAAAAAAAAAs38AAAAAAAC0fwAAAAAAAAAAAAC0fwAAAAAAALV/AAAAAAAAAAAAALV/AAAAAAAAtn8AAAAAAAAAAAAAtn8AAAAAAAC3fwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsn8AAAAAAACyfwAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"left_delete",
					null,
					"AQAAALZ/AAAAAAAAtn8AAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAt38AAAAAAAC3fwAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAALZ/AAAAAAAAt38AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtn8AAAAAAAC2fwAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					2,
					"left_delete",
					null,
					"AgAAALZ/AAAAAAAAtn8AAAAAAAABAAAAZbV/AAAAAAAAtX8AAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAt38AAAAAAAC3fwAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "es"
					},
					"AgAAALV/AAAAAAAAtn8AAAAAAAAAAAAAtn8AAAAAAAC3fwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtX8AAAAAAAC1fwAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": " using"
					},
					"BgAAALd/AAAAAAAAuH8AAAAAAAAAAAAAuH8AAAAAAAC5fwAAAAAAAAAAAAC5fwAAAAAAALp/AAAAAAAAAAAAALp/AAAAAAAAu38AAAAAAAAAAAAAu38AAAAAAAC8fwAAAAAAAAAAAAC8fwAAAAAAAL1/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAt38AAAAAAAC3fwAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": " y"
					},
					"AgAAAL1/AAAAAAAAvn8AAAAAAAAAAAAAvn8AAAAAAAC/fwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvX8AAAAAAAC9fwAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"left_delete",
					null,
					"AQAAAL5/AAAAAAAAvn8AAAAAAAABAAAAeQ",
					"AQAAAAAAAAABAAAAv38AAAAAAAC/fwAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "oyher"
					},
					"BQAAAL5/AAAAAAAAv38AAAAAAAAAAAAAv38AAAAAAADAfwAAAAAAAAAAAADAfwAAAAAAAMF/AAAAAAAAAAAAAMF/AAAAAAAAwn8AAAAAAAAAAAAAwn8AAAAAAADDfwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvn8AAAAAAAC+fwAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					4,
					"left_delete",
					null,
					"BAAAAMJ/AAAAAAAAwn8AAAAAAAABAAAAcsF/AAAAAAAAwX8AAAAAAAABAAAAZcB/AAAAAAAAwH8AAAAAAAABAAAAaL9/AAAAAAAAv38AAAAAAAABAAAAeQ",
					"AQAAAAAAAAABAAAAw38AAAAAAADDfwAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "yher"
					},
					"BAAAAL9/AAAAAAAAwH8AAAAAAAAAAAAAwH8AAAAAAADBfwAAAAAAAAAAAADBfwAAAAAAAMJ/AAAAAAAAAAAAAMJ/AAAAAAAAw38AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAv38AAAAAAAC/fwAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					4,
					"left_delete",
					null,
					"BAAAAMJ/AAAAAAAAwn8AAAAAAAABAAAAcsF/AAAAAAAAwX8AAAAAAAABAAAAZcB/AAAAAAAAwH8AAAAAAAABAAAAaL9/AAAAAAAAv38AAAAAAAABAAAAeQ",
					"AQAAAAAAAAABAAAAw38AAAAAAADDfwAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": "ther"
					},
					"BAAAAL9/AAAAAAAAwH8AAAAAAAAAAAAAwH8AAAAAAADBfwAAAAAAAAAAAADBfwAAAAAAAMJ/AAAAAAAAAAAAAMJ/AAAAAAAAw38AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAv38AAAAAAAC/fwAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": " mesh"
					},
					"BQAAAMN/AAAAAAAAxH8AAAAAAAAAAAAAxH8AAAAAAADFfwAAAAAAAAAAAADFfwAAAAAAAMZ/AAAAAAAAAAAAAMZ/AAAAAAAAx38AAAAAAAAAAAAAx38AAAAAAADIfwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAw38AAAAAAADDfwAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": " points"
					},
					"BwAAAMh/AAAAAAAAyX8AAAAAAAAAAAAAyX8AAAAAAADKfwAAAAAAAAAAAADKfwAAAAAAAMt/AAAAAAAAAAAAAMt/AAAAAAAAzH8AAAAAAAAAAAAAzH8AAAAAAADNfwAAAAAAAAAAAADNfwAAAAAAAM5/AAAAAAAAAAAAAM5/AAAAAAAAz38AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyH8AAAAAAADIfwAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					2,
					"left_delete",
					null,
					"AgAAANN/AAAAAAAA038AAAAAAAABAAAAL9J/AAAAAAAA0n8AAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAA1H8AAAAAAADUfwAAAAAAAAAAAAAASJJA"
				]
			]
		},
		{
			"file": "src/lava_lib/reader_lsd/visitor.cpp",
			"settings":
			{
				"buffer_size": 8037,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAADkaAAAAAAAAOhoAAAAAAAAAAAAAOhoAAAAAAAA7GgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAORoAAAAAAAA5GgAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"paste",
					null,
					"AQAAADsaAAAAAAAAKRwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOxoAAAAAAAA7GgAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "cedua"
					},
					"BQAAAGAaAAAAAAAAYRoAAAAAAAAAAAAAYRoAAAAAAABiGgAAAAAAAAAAAABiGgAAAAAAAGMaAAAAAAAAAAAAAGMaAAAAAAAAZBoAAAAAAAAAAAAAZBoAAAAAAABlGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYBoAAAAAAABgGgAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"left_delete",
					null,
					"AQAAAGQaAAAAAAAAZBoAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAZRoAAAAAAABlGgAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "rl"
					},
					"AgAAAGQaAAAAAAAAZRoAAAAAAAAAAAAAZRoAAAAAAABmGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZBoAAAAAAABkGgAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"left_delete",
					null,
					"AQAAAGUaAAAAAAAAZRoAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAZhoAAAAAAABmGgAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "al"
					},
					"AgAAAGUaAAAAAAAAZhoAAAAAAAAAAAAAZhoAAAAAAABnGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZRoAAAAAAABlGgAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					5,
					"right_delete",
					null,
					"BQAAAGcaAAAAAAAAZxoAAAAAAAABAAAAcGcaAAAAAAAAZxoAAAAAAAABAAAAZWcaAAAAAAAAZxoAAAAAAAABAAAAcmcaAAAAAAAAZxoAAAAAAAABAAAAdGcaAAAAAAAAZxoAAAAAAAABAAAAeQ",
					"AQAAAAAAAAABAAAAZxoAAAAAAABnGgAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"left_delete",
					null,
					"AQAAAH4aAAAAAAAAfhoAAAAAAABqAQAAaWYgKGMudmFsdWVzLnNpemUoKSA9PSAwKQogICAgICAgIHJldHVybjsKCiAgICBpZiAoYy52YWx1ZXMuc2l6ZSgpICE9IDEpIHsKICAgICAgICBzdGQ6OnZlY3RvcjxzdGQ6OnBhaXI8c3RkOjpzdHJpbmcsIFByb3BlcnR5OjpWYWx1ZT4+IHY7CiAgICAgICAgZm9yKGF1dG8gY29uc3QmIHZhbHVlOiBjLnZhbHVlcykgewogICAgICAgICAgICB2LnB1c2hfYmFjayh7dmFsdWUuZmlyc3QsIHZhbHVlLnNlY29uZC5nZXQoKX0pOwogICAgICAgIH0KICAgICAgICBtcFNlc3Npb24tPmNtZFByb3BlcnR5VihjLnN0eWxlLCB2KTsKICAgICAgICByZXR1cm47CiAgICB9CiAgIAogICBhdXRvIGNvbnN0JiB2YWx1ZSA9IGMudmFsdWVzWzBdOwogICA",
					"AQAAAAAAAAABAAAAfhoAAAAAAADoGwAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "cedural"
					},
					"BwAAAI8aAAAAAAAAkBoAAAAAAAAAAAAAkBoAAAAAAACRGgAAAAAAAAAAAACRGgAAAAAAAJIaAAAAAAAAAAAAAJIaAAAAAAAAkxoAAAAAAAAAAAAAkxoAAAAAAACUGgAAAAAAAAAAAACUGgAAAAAAAJUaAAAAAAAAAAAAAJUaAAAAAAAAlhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjxoAAAAAAACPGgAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					5,
					"right_delete",
					null,
					"BQAAAJYaAAAAAAAAlhoAAAAAAAABAAAAcJYaAAAAAAAAlhoAAAAAAAABAAAAZZYaAAAAAAAAlhoAAAAAAAABAAAAcpYaAAAAAAAAlhoAAAAAAAABAAAAdJYaAAAAAAAAlhoAAAAAAAABAAAAeQ",
					"AQAAAAAAAAABAAAAlhoAAAAAAACWGgAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					5,
					"right_delete",
					null,
					"BQAAAJkaAAAAAAAAmRoAAAAAAAABAAAAc5kaAAAAAAAAmRoAAAAAAAABAAAAdJkaAAAAAAAAmRoAAAAAAAABAAAAeZkaAAAAAAAAmRoAAAAAAAABAAAAbJkaAAAAAAAAmRoAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAmRoAAAAAAACZGgAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "proce"
					},
					"BQAAAJkaAAAAAAAAmhoAAAAAAAAAAAAAmhoAAAAAAACbGgAAAAAAAAAAAACbGgAAAAAAAJwaAAAAAAAAAAAAAJwaAAAAAAAAnRoAAAAAAAAAAAAAnRoAAAAAAACeGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmRoAAAAAAACZGgAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert_completion",
					{
						"completion": "procedural",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "procedural"
					},
					"AgAAAJkaAAAAAAAAmRoAAAAAAAAFAAAAcHJvY2WZGgAAAAAAAKMaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnhoAAAAAAACeGgAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "c."
					},
					"AgAAAKUaAAAAAAAAphoAAAAAAAAAAAAAphoAAAAAAACnGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApRoAAAAAAAClGgAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "bbox"
					},
					"BAAAAKcaAAAAAAAAqBoAAAAAAAAAAAAAqBoAAAAAAACpGgAAAAAAAAAAAACpGgAAAAAAAKoaAAAAAAAAAAAAAKoaAAAAAAAAqxoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApxoAAAAAAACnGgAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "_min"
					},
					"BAAAAKsaAAAAAAAArBoAAAAAAAAAAAAArBoAAAAAAACtGgAAAAAAAAAAAACtGgAAAAAAAK4aAAAAAAAAAAAAAK4aAAAAAAAArxoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqxoAAAAAAACrGgAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					11,
					"right_delete",
					null,
					"CwAAAK8aAAAAAAAArxoAAAAAAAABAAAAdq8aAAAAAAAArxoAAAAAAAABAAAAYa8aAAAAAAAArxoAAAAAAAABAAAAbK8aAAAAAAAArxoAAAAAAAABAAAAda8aAAAAAAAArxoAAAAAAAABAAAAZa8aAAAAAAAArxoAAAAAAAABAAAALq8aAAAAAAAArxoAAAAAAAABAAAAZq8aAAAAAAAArxoAAAAAAAABAAAAaa8aAAAAAAAArxoAAAAAAAABAAAAcq8aAAAAAAAArxoAAAAAAAABAAAAc68aAAAAAAAArxoAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAArxoAAAAAAACvGgAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "c."
					},
					"AgAAALEaAAAAAAAAshoAAAAAAAAAAAAAshoAAAAAAACzGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsRoAAAAAAACxGgAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "bbox_max"
					},
					"CAAAALMaAAAAAAAAtBoAAAAAAAAAAAAAtBoAAAAAAAC1GgAAAAAAAAAAAAC1GgAAAAAAALYaAAAAAAAAAAAAALYaAAAAAAAAtxoAAAAAAAAAAAAAtxoAAAAAAAC4GgAAAAAAAAAAAAC4GgAAAAAAALkaAAAAAAAAAAAAALkaAAAAAAAAuhoAAAAAAAAAAAAAuhoAAAAAAAC7GgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsxoAAAAAAACzGgAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAALsaAAAAAAAAvBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuxoAAAAAAAC7GgAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALwaAAAAAAAAvRoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvBoAAAAAAAC8GgAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAL0aAAAAAAAAvhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvRoAAAAAAAC9GgAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"left_delete",
					null,
					"AQAAAL0aAAAAAAAAvRoAAAAAAAABAAAAeA",
					"AQAAAAAAAAABAAAAvhoAAAAAAAC+GgAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "c.arg"
					},
					"BQAAAL0aAAAAAAAAvhoAAAAAAAAAAAAAvhoAAAAAAAC/GgAAAAAAAAAAAAC/GgAAAAAAAMAaAAAAAAAAAAAAAMAaAAAAAAAAwRoAAAAAAAAAAAAAwRoAAAAAAADCGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvRoAAAAAAAC9GgAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "umentsw"
					},
					"BwAAAMIaAAAAAAAAwxoAAAAAAAAAAAAAwxoAAAAAAADEGgAAAAAAAAAAAADEGgAAAAAAAMUaAAAAAAAAAAAAAMUaAAAAAAAAxhoAAAAAAAAAAAAAxhoAAAAAAADHGgAAAAAAAAAAAADHGgAAAAAAAMgaAAAAAAAAAAAAAMgaAAAAAAAAyRoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwhoAAAAAAADCGgAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					17,
					"right_delete",
					null,
					"EQAAAMgaAAAAAAAAyBoAAAAAAAABAAAAd8gaAAAAAAAAyBoAAAAAAAABAAAAdsgaAAAAAAAAyBoAAAAAAAABAAAAYcgaAAAAAAAAyBoAAAAAAAABAAAAbMgaAAAAAAAAyBoAAAAAAAABAAAAdcgaAAAAAAAAyBoAAAAAAAABAAAAZcgaAAAAAAAAyBoAAAAAAAABAAAALsgaAAAAAAAAyBoAAAAAAAABAAAAc8gaAAAAAAAAyBoAAAAAAAABAAAAZcgaAAAAAAAAyBoAAAAAAAABAAAAY8gaAAAAAAAAyBoAAAAAAAABAAAAb8gaAAAAAAAAyBoAAAAAAAABAAAAbsgaAAAAAAAAyBoAAAAAAAABAAAAZMgaAAAAAAAAyBoAAAAAAAABAAAALsgaAAAAAAAAyBoAAAAAAAABAAAAZ8gaAAAAAAAAyBoAAAAAAAABAAAAZcgaAAAAAAAAyBoAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAyBoAAAAAAADIGgAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					2,
					"right_delete",
					null,
					"AgAAAMgaAAAAAAAAyBoAAAAAAAABAAAAKMgaAAAAAAAAyBoAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAyBoAAAAAAADIGgAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "emp"
					},
					"BAAAAJkYAAAAAAAAmhgAAAAAAAAAAAAAmhgAAAAAAACaGAAAAAAAAAsAAABzaXplKCkgPT0gMJoYAAAAAAAAmxgAAAAAAAAAAAAAmxgAAAAAAACcGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmRgAAAAAAACkGAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert_completion",
					{
						"completion": "empty",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "empty"
					},
					"AgAAAJkYAAAAAAAAmRgAAAAAAAADAAAAZW1wmRgAAAAAAACeGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnBgAAAAAAACcGAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJ4YAAAAAAAAoBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnhgAAAAAAACeGAAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					3,
					"left_delete",
					null,
					"AwAAAKYYAAAAAAAAphgAAAAAAAAEAAAAICAgIKIYAAAAAAAAohgAAAAAAAAEAAAAICAgIKEYAAAAAAAAoRgAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAqhgAAAAAAACqGAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKEYAAAAAAAAohgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoRgAAAAAAAChGAAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAG0aAAAAAAAAbhoAAAAAAAAAAAAAbhoAAAAAAAByGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbRoAAAAAAABtGgAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"paste",
					null,
					"AQAAAHIaAAAAAAAAGhsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAchoAAAAAAAByGgAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABobAAAAAAAAGxsAAAAAAAAAAAAAGxsAAAAAAAAjGwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGhsAAAAAAAAaGwAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"left_delete",
					null,
					"AgAAABUbAAAAAAAAFRsAAAAAAAAEAAAAICAgIBcbAAAAAAAAFxsAAAAAAAAIAAAAICAgICAgICA",
					"AQAAAAAAAAABAAAAGRsAAAAAAAAZGwAAAAAAAAAAAAAAAFJA"
				],
				[
					75,
					4,
					"right_delete",
					null,
					"BAAAANkaAAAAAAAA2RoAAAAAAAABAAAAINkaAAAAAAAA2RoAAAAAAAABAAAAINkaAAAAAAAA2RoAAAAAAAABAAAAINkaAAAAAAAA2RoAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA2RoAAAAAAADZGgAAAAAAAAAAAAAAAEJA"
				],
				[
					77,
					4,
					"right_delete",
					null,
					"BAAAAK4aAAAAAAAArhoAAAAAAAABAAAAIK4aAAAAAAAArhoAAAAAAAABAAAAIK4aAAAAAAAArhoAAAAAAAABAAAAIK4aAAAAAAAArhoAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAArhoAAAAAAACuGgAAAAAAAAAAAAAAAEJA"
				],
				[
					80,
					1,
					"left_delete",
					null,
					"AQAAAA0bAAAAAAAADRsAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAADhsAAAAAAAAOGwAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					4,
					"left_delete",
					null,
					"BAAAANUaAAAAAAAA1RoAAAAAAAAEAAAAICAgINEaAAAAAAAA0RoAAAAAAAAEAAAAICAgINAaAAAAAAAA0BoAAAAAAAABAAAACs8aAAAAAAAAzxoAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAA2RoAAAAAAADZGgAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					2,
					"left_delete",
					null,
					"AgAAAAMbAAAAAAAAAxsAAAAAAAABAAAACv8aAAAAAAAA/xoAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAABBsAAAAAAAAEGwAAAAAAAAAAAAAA0HRA"
				],
				[
					88,
					11,
					"left_delete",
					null,
					"CwAAAE0bAAAAAAAATRsAAAAAAAABAAAAc0wbAAAAAAAATBsAAAAAAAABAAAAdEsbAAAAAAAASxsAAAAAAAABAAAAbkobAAAAAAAAShsAAAAAAAABAAAAZUkbAAAAAAAASRsAAAAAAAABAAAAbUgbAAAAAAAASBsAAAAAAAABAAAAdUcbAAAAAAAARxsAAAAAAAABAAAAZ0YbAAAAAAAARhsAAAAAAAABAAAAckUbAAAAAAAARRsAAAAAAAABAAAAYUQbAAAAAAAARBsAAAAAAAABAAAALkMbAAAAAAAAQxsAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAThsAAAAAAABOGwAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "v"
					},
					"AQAAAEMbAAAAAAAARBsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQxsAAAAAAABDGwAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "arg"
					},
					"BAAAAMcaAAAAAAAAyBoAAAAAAAAAAAAAyBoAAAAAAADIGgAAAAAAAAYAAAB2YWx1ZXPIGgAAAAAAAMkaAAAAAAAAAAAAAMkaAAAAAAAAyhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxxoAAAAAAADNGgAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "uments"
					},
					"BgAAAMoaAAAAAAAAyxoAAAAAAAAAAAAAyxoAAAAAAADMGgAAAAAAAAAAAADMGgAAAAAAAM0aAAAAAAAAAAAAAM0aAAAAAAAAzhoAAAAAAAAAAAAAzhoAAAAAAADPGgAAAAAAAAAAAADPGgAAAAAAANAaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyhoAAAAAAADKGgAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "arg"
					},
					"AwAAAL4aAAAAAAAAvxoAAAAAAAAAAAAAvxoAAAAAAADAGgAAAAAAAAAAAADAGgAAAAAAAMEaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvhoAAAAAAAC+GgAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					5,
					"right_delete",
					null,
					"BQAAAMEaAAAAAAAAwRoAAAAAAAABAAAAdsEaAAAAAAAAwRoAAAAAAAABAAAAYcEaAAAAAAAAwRoAAAAAAAABAAAAbMEaAAAAAAAAwRoAAAAAAAABAAAAdcEaAAAAAAAAwRoAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAwRoAAAAAAADBGgAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "arg"
					},
					"AwAAAN0aAAAAAAAA3hoAAAAAAAAAAAAA3hoAAAAAAADfGgAAAAAAAAAAAADfGgAAAAAAAOAaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3RoAAAAAAADdGgAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					5,
					"right_delete",
					null,
					"BQAAAOAaAAAAAAAA4BoAAAAAAAABAAAAduAaAAAAAAAA4BoAAAAAAAABAAAAYeAaAAAAAAAA4BoAAAAAAAABAAAAbOAaAAAAAAAA4BoAAAAAAAABAAAAdeAaAAAAAAAA4BoAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAA4BoAAAAAAADgGgAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "aeg"
					},
					"AwAAAOgaAAAAAAAA6RoAAAAAAAAAAAAA6RoAAAAAAADqGgAAAAAAAAAAAADqGgAAAAAAAOsaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6BoAAAAAAADoGgAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					2,
					"right_delete",
					null,
					"AgAAAOsaAAAAAAAA6xoAAAAAAAABAAAAdusaAAAAAAAA6xoAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAA6xoAAAAAAADrGgAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAOkaAAAAAAAA6hoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6RoAAAAAAADpGgAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"right_delete",
					null,
					"AQAAAOoaAAAAAAAA6hoAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAA6hoAAAAAAADqGgAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					3,
					"right_delete",
					null,
					"AwAAAOsaAAAAAAAA6xoAAAAAAAABAAAAbOsaAAAAAAAA6xoAAAAAAAABAAAAdesaAAAAAAAA6xoAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAA6xoAAAAAAADrGgAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "map"
					},
					"BAAAAHcaAAAAAAAAeBoAAAAAAAAAAAAAeBoAAAAAAAB4GgAAAAAAABAAAAB2ZWN0b3I8c3RkOjpwYWlyeBoAAAAAAAB5GgAAAAAAAAAAAAB5GgAAAAAAAHoaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdxoAAAAAAACHGgAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"right_delete",
					null,
					"AQAAAJgaAAAAAAAAmBoAAAAAAAABAAAAPg",
					"AQAAAAAAAAABAAAAmBoAAAAAAACYGgAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"right_delete",
					null,
					"AQAAAJkaAAAAAAAAmRoAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAAmRoAAAAAAACZGgAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAJkaAAAAAAAAmhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmRoAAAAAAACZGgAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "args"
					},
					"BAAAAJkaAAAAAAAAmhoAAAAAAAAAAAAAmhoAAAAAAACbGgAAAAAAAAAAAACbGgAAAAAAAJwaAAAAAAAAAAAAAJwaAAAAAAAAnRoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmRoAAAAAAACZGgAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"right_delete",
					null,
					"AQAAAJ0aAAAAAAAAnRoAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAnRoAAAAAAACdGgAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"right_delete",
					null,
					"AQAAADUbAAAAAAAANRsAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAANRsAAAAAAAA1GwAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": "args"
					},
					"BAAAADUbAAAAAAAANhsAAAAAAAAAAAAANhsAAAAAAAA3GwAAAAAAAAAAAAA3GwAAAAAAADgbAAAAAAAAAAAAADgbAAAAAAAAORsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANRsAAAAAAAA1GwAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"right_delete",
					null,
					"AQAAAMUaAAAAAAAAxRoAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAAxRoAAAAAAADFGgAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": "args"
					},
					"BAAAAMUaAAAAAAAAxhoAAAAAAAAAAAAAxhoAAAAAAADHGgAAAAAAAAAAAADHGgAAAAAAAMgaAAAAAAAAAAAAAMgaAAAAAAAAyRoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxRoAAAAAAADFGgAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAMkaAAAAAAAAyhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyRoAAAAAAADJGgAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					12,
					"right_delete",
					null,
					"DAAAAMoaAAAAAAAAyhoAAAAAAAABAAAALsoaAAAAAAAAyhoAAAAAAAABAAAAcMoaAAAAAAAAyhoAAAAAAAABAAAAdcoaAAAAAAAAyhoAAAAAAAABAAAAc8oaAAAAAAAAyhoAAAAAAAABAAAAaMoaAAAAAAAAyhoAAAAAAAABAAAAX8oaAAAAAAAAyhoAAAAAAAABAAAAYsoaAAAAAAAAyhoAAAAAAAABAAAAYcoaAAAAAAAAyhoAAAAAAAABAAAAY8oaAAAAAAAAyhoAAAAAAAABAAAAa8oaAAAAAAAAyhoAAAAAAAABAAAAKMoaAAAAAAAAyhoAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAAyhoAAAAAAADKGgAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAANMaAAAAAAAA1BoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0xoAAAAAAADTGgAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"left_delete",
					null,
					"AQAAANMaAAAAAAAA0xoAAAAAAAABAAAAWw",
					"AQAAAAAAAAABAAAA1BoAAAAAAADUGgAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAANMaAAAAAAAA1BoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0xoAAAAAAADTGgAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAANQaAAAAAAAA1RoAAAAAAAAAAAAA1RoAAAAAAADWGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1BoAAAAAAADUGgAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANYaAAAAAAAA1xoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1hoAAAAAAADWGgAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					2,
					"right_delete",
					null,
					"AgAAANcaAAAAAAAA1xoAAAAAAAABAAAALNcaAAAAAAAA1xoAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA1xoAAAAAAADXGgAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					2,
					"right_delete",
					null,
					"AgAAAOcaAAAAAAAA5xoAAAAAAAABAAAAfecaAAAAAAAA5xoAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA5xoAAAAAAADnGgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/Falcor/Scene/SceneBuilder.h",
			"settings":
			{
				"buffer_size": 38415,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGYIAAAAAAAAZwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZggAAAAAAABmCAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "class"
					},
					"BQAAAGYIAAAAAAAAZwgAAAAAAAAAAAAAZwgAAAAAAABoCAAAAAAAAAAAAABoCAAAAAAAAGkIAAAAAAAAAAAAAGkIAAAAAAAAaggAAAAAAAAAAAAAaggAAAAAAABrCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZggAAAAAAABmCAAAAAAAAAAAAAAAAAAA"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": " Meshlet"
					},
					"CAAAAGsIAAAAAAAAbAgAAAAAAAAAAAAAbAgAAAAAAABtCAAAAAAAAAAAAABtCAAAAAAAAG4IAAAAAAAAAAAAAG4IAAAAAAAAbwgAAAAAAAAAAAAAbwgAAAAAAABwCAAAAAAAAAAAAABwCAAAAAAAAHEIAAAAAAAAAAAAAHEIAAAAAAAAcggAAAAAAAAAAAAAcggAAAAAAABzCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawgAAAAAAABrCAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "Builder;"
					},
					"CAAAAHMIAAAAAAAAdAgAAAAAAAAAAAAAdAgAAAAAAAB1CAAAAAAAAAAAAAB1CAAAAAAAAHYIAAAAAAAAAAAAAHYIAAAAAAAAdwgAAAAAAAAAAAAAdwgAAAAAAAB4CAAAAAAAAAAAAAB4CAAAAAAAAHkIAAAAAAAAAAAAAHkIAAAAAAAAeggAAAAAAAAAAAAAeggAAAAAAAB7CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwgAAAAAAABzCAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "\nstd::u"
					},
					"CAAAAMuGAAAAAAAAzIYAAAAAAAAAAAAAzIYAAAAAAADQhgAAAAAAAAAAAADQhgAAAAAAANGGAAAAAAAAAAAAANGGAAAAAAAA0oYAAAAAAAAAAAAA0oYAAAAAAADThgAAAAAAAAAAAADThgAAAAAAANSGAAAAAAAAAAAAANSGAAAAAAAA1YYAAAAAAAAAAAAA1YYAAAAAAADWhgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAy4YAAAAAAADLhgAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAANaGAAAAAAAA14YAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1oYAAAAAAADWhgAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert_completion",
					{
						"completion": "unique_ptr",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "unique_ptr"
					},
					"AgAAANWGAAAAAAAA1YYAAAAAAAACAAAAdW7VhgAAAAAAAN+GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA14YAAAAAAADXhgAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "<Me"
					},
					"AwAAAN+GAAAAAAAA4IYAAAAAAAAAAAAA4IYAAAAAAADhhgAAAAAAAAAAAADhhgAAAAAAAOKGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA34YAAAAAAADfhgAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "shletBui"
					},
					"CAAAAOKGAAAAAAAA44YAAAAAAAAAAAAA44YAAAAAAADkhgAAAAAAAAAAAADkhgAAAAAAAOWGAAAAAAAAAAAAAOWGAAAAAAAA5oYAAAAAAAAAAAAA5oYAAAAAAADnhgAAAAAAAAAAAADnhgAAAAAAAOiGAAAAAAAAAAAAAOiGAAAAAAAA6YYAAAAAAAAAAAAA6YYAAAAAAADqhgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4oYAAAAAAADihgAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert_completion",
					{
						"completion": "MeshletBuilder",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "MeshletBuilder"
					},
					"AgAAAOCGAAAAAAAA4IYAAAAAAAAKAAAATWVzaGxldEJ1aeCGAAAAAAAA7oYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6oYAAAAAAADqhgAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAAO6GAAAAAAAA74YAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7oYAAAAAAADuhgAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " mpMes"
					},
					"BgAAAO+GAAAAAAAA8IYAAAAAAAAAAAAA8IYAAAAAAADxhgAAAAAAAAAAAADxhgAAAAAAAPKGAAAAAAAAAAAAAPKGAAAAAAAA84YAAAAAAAAAAAAA84YAAAAAAAD0hgAAAAAAAAAAAAD0hgAAAAAAAPWGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA74YAAAAAAADvhgAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "hlet"
					},
					"BAAAAPWGAAAAAAAA9oYAAAAAAAAAAAAA9oYAAAAAAAD3hgAAAAAAAAAAAAD3hgAAAAAAAPiGAAAAAAAAAAAAAPiGAAAAAAAA+YYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9YYAAAAAAAD1hgAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "Builder;"
					},
					"CAAAAPmGAAAAAAAA+oYAAAAAAAAAAAAA+oYAAAAAAAD7hgAAAAAAAAAAAAD7hgAAAAAAAPyGAAAAAAAAAAAAAPyGAAAAAAAA/YYAAAAAAAAAAAAA/YYAAAAAAAD+hgAAAAAAAAAAAAD+hgAAAAAAAP+GAAAAAAAAAAAAAP+GAAAAAAAAAIcAAAAAAAAAAAAAAIcAAAAAAAABhwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+YYAAAAAAAD5hgAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "\n\n~S"
					},
					"BwAAANBwAAAAAAAA0XAAAAAAAAAAAAAA0XAAAAAAAADVcAAAAAAAAAAAAADVcAAAAAAAANZwAAAAAAAAAAAAANZwAAAAAAAA2nAAAAAAAAAAAAAA0XAAAAAAAADRcAAAAAAAAAQAAAAgICAg1nAAAAAAAADXcAAAAAAAAAAAAADXcAAAAAAAANhwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0HAAAAAAAADQcAAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert_completion",
					{
						"completion": "SceneBuilder",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "SceneBuilder"
					},
					"AgAAANdwAAAAAAAA13AAAAAAAAABAAAAU9dwAAAAAAAA43AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2HAAAAAAAADYcAAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAONwAAAAAAAA5XAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA43AAAAAAAADjcAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOVwAAAAAAAA5nAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5XAAAAAAAADlcAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAOZwAAAAAAAA6HAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5nAAAAAAAADmcAAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOhwAAAAAAAA6XAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6HAAAAAAAADocAAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"left_delete",
					null,
					"AQAAAOVwAAAAAAAA5XAAAAAAAAADAAAAIHt9",
					"AQAAAAAAAAABAAAA5XAAAAAAAADocAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					3,
					"left_delete",
					null,
					"AwAAANJwAAAAAAAA0nAAAAAAAAAUAAAAICAgIH5TY2VuZUJ1aWxkZXIoKTvRcAAAAAAAANFwAAAAAAAAAQAAAArQcAAAAAAAANBwAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAA5nAAAAAAAADScAAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAIBwAAAAAAAAgXAAAAAAAAAAAAAAgXAAAAAAAACCcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgHAAAAAAAACAcAAAAAAAAAAAAAAAIINA"
				],
				[
					64,
					1,
					"paste",
					null,
					"AQAAAIFwAAAAAAAAlXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgXAAAAAAAACBcAAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "src/Falcor/Scene/SceneBuilder.cpp",
			"settings":
			{
				"buffer_size": 120993,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "\n#include"
					},
					"CQAAALcHAAAAAAAAuAcAAAAAAAAAAAAAuAcAAAAAAAC5BwAAAAAAAAAAAAC5BwAAAAAAALoHAAAAAAAAAAAAALoHAAAAAAAAuwcAAAAAAAAAAAAAuwcAAAAAAAC8BwAAAAAAAAAAAAC8BwAAAAAAAL0HAAAAAAAAAAAAAL0HAAAAAAAAvgcAAAAAAAAAAAAAvgcAAAAAAAC/BwAAAAAAAAAAAAC/BwAAAAAAAMAHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtwcAAAAAAAC3BwAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMAHAAAAAAAAwQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwAcAAAAAAADABwAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAMEHAAAAAAAAwwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQcAAAAAAADBBwAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "Mesh"
					},
					"BAAAAMIHAAAAAAAAwwcAAAAAAAAAAAAAwwcAAAAAAADEBwAAAAAAAAAAAADEBwAAAAAAAMUHAAAAAAAAAAAAAMUHAAAAAAAAxgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwgcAAAAAAADCBwAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert_completion",
					{
						"completion": "Meshlet",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Meshlet"
					},
					"AgAAAMIHAAAAAAAAwgcAAAAAAAAEAAAATWVzaMIHAAAAAAAAyQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxgcAAAAAAADGBwAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "Builder.h"
					},
					"CQAAAMkHAAAAAAAAygcAAAAAAAAAAAAAygcAAAAAAADLBwAAAAAAAAAAAADLBwAAAAAAAMwHAAAAAAAAAAAAAMwHAAAAAAAAzQcAAAAAAAAAAAAAzQcAAAAAAADOBwAAAAAAAAAAAADOBwAAAAAAAM8HAAAAAAAAAAAAAM8HAAAAAAAA0AcAAAAAAAAAAAAA0AcAAAAAAADRBwAAAAAAAAAAAADRBwAAAAAAANIHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQcAAAAAAADJBwAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "\nmp"
					},
					"BAAAAEklAAAAAAAASiUAAAAAAAAAAAAASiUAAAAAAABOJQAAAAAAAAAAAABOJQAAAAAAAE8lAAAAAAAAAAAAAE8lAAAAAAAAUCUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASSUAAAAAAABJJQAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "Meshlet"
					},
					"BwAAAFAlAAAAAAAAUSUAAAAAAAAAAAAAUSUAAAAAAABSJQAAAAAAAAAAAABSJQAAAAAAAFMlAAAAAAAAAAAAAFMlAAAAAAAAVCUAAAAAAAAAAAAAVCUAAAAAAABVJQAAAAAAAAAAAABVJQAAAAAAAFYlAAAAAAAAAAAAAFYlAAAAAAAAVyUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUCUAAAAAAABQJQAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "Builder"
					},
					"BwAAAFclAAAAAAAAWCUAAAAAAAAAAAAAWCUAAAAAAABZJQAAAAAAAAAAAABZJQAAAAAAAFolAAAAAAAAAAAAAFolAAAAAAAAWyUAAAAAAAAAAAAAWyUAAAAAAABcJQAAAAAAAAAAAABcJQAAAAAAAF0lAAAAAAAAAAAAAF0lAAAAAAAAXiUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVyUAAAAAAABXJQAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAF4lAAAAAAAAXyUAAAAAAAAAAAAAXyUAAAAAAABgJQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXiUAAAAAAABeJQAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGAlAAAAAAAAYSUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYCUAAAAAAABgJQAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "MeshletB"
					},
					"CAAAAGElAAAAAAAAYiUAAAAAAAAAAAAAYiUAAAAAAABjJQAAAAAAAAAAAABjJQAAAAAAAGQlAAAAAAAAAAAAAGQlAAAAAAAAZSUAAAAAAAAAAAAAZSUAAAAAAABmJQAAAAAAAAAAAABmJQAAAAAAAGclAAAAAAAAAAAAAGclAAAAAAAAaCUAAAAAAAAAAAAAaCUAAAAAAABpJQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYSUAAAAAAABhJQAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "uilder"
					},
					"BgAAAGklAAAAAAAAaiUAAAAAAAAAAAAAaiUAAAAAAABrJQAAAAAAAAAAAABrJQAAAAAAAGwlAAAAAAAAAAAAAGwlAAAAAAAAbSUAAAAAAAAAAAAAbSUAAAAAAABuJQAAAAAAAAAAAABuJQAAAAAAAG8lAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaSUAAAAAAABpJQAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "::"
					},
					"AgAAAG8lAAAAAAAAcCUAAAAAAAAAAAAAcCUAAAAAAABxJQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbyUAAAAAAABvJQAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "cre"
					},
					"AwAAAHElAAAAAAAAciUAAAAAAAAAAAAAciUAAAAAAABzJQAAAAAAAAAAAABzJQAAAAAAAHQlAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcSUAAAAAAABxJQAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert_completion",
					{
						"completion": "create",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "create"
					},
					"AgAAAHElAAAAAAAAcSUAAAAAAAADAAAAY3JlcSUAAAAAAAB3JQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdCUAAAAAAAB0JQAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHclAAAAAAAAeSUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdyUAAAAAAAB3JQAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHklAAAAAAAAeiUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeSUAAAAAAAB5JQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAEklAAAAAAAASiUAAAAAAAAAAAAASiUAAAAAAABOJQAAAAAAAAAAAABOJQAAAAAAAE8lAAAAAAAAAAAAAE8lAAAAAAAAUyUAAAAAAAAAAAAASiUAAAAAAABKJQAAAAAAAAQAAAAgICAgTyUAAAAAAABQJQAAAAAAAAAAAABQJQAAAAAAAFElAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASSUAAAAAAABJJQAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFElAAAAAAAAUyUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUSUAAAAAAABRJQAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "is_s"
					},
					"BAAAAFIlAAAAAAAAUyUAAAAAAAAAAAAAUyUAAAAAAABUJQAAAAAAAAAAAABUJQAAAAAAAFUlAAAAAAAAAAAAAFUlAAAAAAAAViUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUiUAAAAAAABSJQAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert_completion",
					{
						"completion": "is_set",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "is_set"
					},
					"AgAAAFIlAAAAAAAAUiUAAAAAAAAEAAAAaXNfc1IlAAAAAAAAWCUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAViUAAAAAAABWJQAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"left_delete",
					null,
					"AQAAAFglAAAAAAAAWCUAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAWSUAAAAAAABZJQAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFglAAAAAAAAWiUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWCUAAAAAAABYJQAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "mF"
					},
					"AgAAAFklAAAAAAAAWiUAAAAAAAAAAAAAWiUAAAAAAABbJQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWSUAAAAAAABZJQAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert_completion",
					{
						"completion": "mFlags",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "mFlags"
					},
					"AgAAAFklAAAAAAAAWSUAAAAAAAACAAAAbUZZJQAAAAAAAF8lAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWyUAAAAAAABbJQAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAF8lAAAAAAAAYCUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXyUAAAAAAABfJQAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGAlAAAAAAAAYSUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYCUAAAAAAABgJQAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"paste",
					null,
					"AQAAAGElAAAAAAAAcSUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYSUAAAAAAABhJQAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAHIlAAAAAAAAcyUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAciUAAAAAAAByJQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHMlAAAAAAAAdCUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcyUAAAAAAABzJQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAHQlAAAAAAAAdiUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdCUAAAAAAAB0JQAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"right_delete",
					null,
					"AQAAAHUlAAAAAAAAdSUAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAdSUAAAAAAAB1JQAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAKclAAAAAAAAqCUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApyUAAAAAAACnJQAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"reindent",
					null,
					"AQAAAKclAAAAAAAAqyUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApyUAAAAAAACnJQAAAAAAAAAAAAAAAAAA"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AwAAAKslAAAAAAAArCUAAAAAAAAAAAAApyUAAAAAAACnJQAAAAAAAAQAAAAgICAgpyUAAAAAAACnJQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqyUAAAAAAACrJQAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAKclAAAAAAAAqyUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApyUAAAAAAACnJQAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAHolAAAAAAAAfiUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeiUAAAAAAAB6JQAAAAAAAAAAAAAAAEJA"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "Scee"
					},
					"BAAAAGElAAAAAAAAYiUAAAAAAAAAAAAAYiUAAAAAAABjJQAAAAAAAAAAAABjJQAAAAAAAGQlAAAAAAAAAAAAAGQlAAAAAAAAZSUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYSUAAAAAAABhJQAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"left_delete",
					null,
					"AQAAAGQlAAAAAAAAZCUAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAZSUAAAAAAABlJQAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "ne::Bui"
					},
					"BwAAAGQlAAAAAAAAZSUAAAAAAAAAAAAAZSUAAAAAAABmJQAAAAAAAAAAAABmJQAAAAAAAGclAAAAAAAAAAAAAGclAAAAAAAAaCUAAAAAAAAAAAAAaCUAAAAAAABpJQAAAAAAAAAAAABpJQAAAAAAAGolAAAAAAAAAAAAAGolAAAAAAAAayUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZCUAAAAAAABkJQAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "lder"
					},
					"BAAAAGslAAAAAAAAbCUAAAAAAAAAAAAAbCUAAAAAAABtJQAAAAAAAAAAAABtJQAAAAAAAG4lAAAAAAAAAAAAAG4lAAAAAAAAbyUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAayUAAAAAAABrJQAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "::"
					},
					"AgAAAG8lAAAAAAAAcCUAAAAAAAAAAAAAcCUAAAAAAABxJQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbyUAAAAAAABvJQAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					2,
					"right_delete",
					null,
					"AgAAAGYlAAAAAAAAZiUAAAAAAAABAAAAOmYlAAAAAAAAZiUAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAZiUAAAAAAABmJQAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"paste",
					null,
					"AQAAAG8lAAAAAAAAdCUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbyUAAAAAAABvJQAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "::"
					},
					"AgAAAHQlAAAAAAAAdSUAAAAAAAAAAAAAdSUAAAAAAAB2JQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdCUAAAAAAAB0JQAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAMglAAAAAAAAySUAAAAAAAAAAAAAySUAAAAAAADKJQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyCUAAAAAAADIJQAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"paste",
					null,
					"AQAAAMolAAAAAAAA3SUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyiUAAAAAAADKJQAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"paste",
					null,
					"AgAAAMolAAAAAAAA1iUAAAAAAAAAAAAA1iUAAAAAAADWJQAAAAAAAAEAAABB",
					"AQAAAAAAAAABAAAAyiUAAAAAAADLJQAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"paste",
					null,
					"AgAAANklAAAAAAAA5SUAAAAAAAAAAAAA5SUAAAAAAADlJQAAAAAAAAEAAABB",
					"AQAAAAAAAAABAAAA2SUAAAAAAADaJQAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"left_delete",
					null,
					"AQAAAPMlAAAAAAAA8yUAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA9CUAAAAAAAD0JQAAAAAAAAAAAAAA4GBA"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGRcAAAAAAAAZVwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZFwAAAAAAABkXAAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAGRcAAAAAAAAZVwAAAAAAAAAAAAAZVwAAAAAAABmXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZFwAAAAAAABkXAAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "/*"
					},
					"AgAAAGVcAAAAAAAAZlwAAAAAAAAAAAAAZlwAAAAAAABnXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZVwAAAAAAABlXAAAAAAAAAAAAAAAAAAA"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "\n*/"
					},
					"BAAAAEFrAAAAAAAAQmsAAAAAAAAAAAAAQmsAAAAAAABGawAAAAAAAAAAAABGawAAAAAAAEdrAAAAAAAAAAAAAEdrAAAAAAAASGsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQWsAAAAAAABBawAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					3,
					"left_delete",
					null,
					"AwAAAGVcAAAAAAAAZVwAAAAAAADjDgAALyoKIAogICAgcHJvY2Vzc2VkTWVzaC5tZXNobGV0U3BlY3MuY2xlYXIoKTsKICAgIGlmKGdlbmVyYXRlTWVzaGxldHMgJiYgaXNJbmRleGVkKSB7CiAgICAgICAgTExPR19EQkcgPDwgIkdlbmVyYXRpbmcgbWVzaGxldHMgZm9yIG1lc2ggXCIiIDw8IG1lc2gubmFtZSA8PCAiXCIuIjsKICAgICAgICAKICAgICAgICBhdXRvJiBtZXNobGV0U3BlY3MgPSBwcm9jZXNzZWRNZXNoLm1lc2hsZXRTcGVjczsKICAgICAgICBzdGF0aWMgY29uc3RleHByIHVpbnQzMl90IG1heGltdW1NZXNobGV0VHJpYW5nbGVJbmRpY2VzID0gTUVTSExFVF9NQVhfUE9MWUdPTlNfQ09VTlQgKiAzdTsKICAgICAgICBzdGF0aWMgY29uc3RleHByIHVpbnQzMl90IG1heGltdW1NZXNobGV0UXVhZEluZGljZXMgPSBNRVNITEVUX01BWF9QT0xZR09OU19DT1VOVCAqIDR1OwogICAgICAgIAogICAgICAgIHVpbnQzMl90IG1lc2hfc3RhcnRfaW5kZXggPSAwOwogICAgICAgIHdoaWxlKG1lc2hfc3RhcnRfaW5kZXggPCBpbmRpY2VzLnNpemUoKSkgewogICAgICAgICAgICBzdGQ6OnZlY3Rvcjx1aW50MzJfdD4gbWVzaGxldFZlcnRpY2VzOwogICAgICAgICAgICBzdGQ6OnZlY3Rvcjx1aW50MzJfdD4gbWVzaGxldFByaW1JbmRpY2VzOwogICAgICAgICAgICBzdGQ6OnZlY3Rvcjx1aW50OF90PiAgbWVzaGxldEluZGljZXM7CgogICAgICAgICAgICBzdGQ6OnNldDx1aW50MzJfdD4gcG9pbnRJbmRpY2VzOyAvLyB0aGlzIHNldCBpcyB1c2VkIHRvIGF2b2lkIGhhdmluZyBkdXBsaWNhdGUgdmVydGljZXMgd2l0aGluIG1lc2hsZXQKCiAgICAgICAgICAgIE1lc2hsZXRTcGVjIG1lc2hsZXRTcGVjID0ge307CiAgICAgICAgICAgIG1lc2hsZXRTcGVjLnR5cGUgPSBNZXNobGV0VHlwZTo6VHJpYW5nbGVzOwogICAgICAgICAgICAvLyBSdW4gdGhyb3VnaCBtZXNoIGluZGljZXMgdW50aWwgd2UgcmVhY2ggbWF4IG51bWJlciBvZiBlbGVtZW50cyAocG9pbnRzIG9yIHRyaXMpCiAgICAgICAgICAgIGZvcih1aW50MzJfdCBpID0gbWVzaF9zdGFydF9pbmRleDsgaSA8IGluZGljZXMuc2l6ZSgpOyBpKz0zKSB7CiAgICAgICAgICAgICAgICBzaXplX3QgdW5pcXVlX3ZlcnRpY2VzX2NvdW50ID0gcG9pbnRJbmRpY2VzLnNpemUoKTsKCiAgICAgICAgICAgICAgICBzdGQ6OnNldDx1aW50MzJfdD46Oml0ZXJhdG9yIGl0MCA9IHBvaW50SW5kaWNlcy5maW5kKGluZGljZXNbaV0pOwogICAgICAgICAgICAgICAgc3RkOjpzZXQ8dWludDMyX3Q+OjppdGVyYXRvciBpdDEgPSBwb2ludEluZGljZXMuZmluZChpbmRpY2VzW2krMV0pOwogICAgICAgICAgICAgICAgc3RkOjpzZXQ8dWludDMyX3Q+OjppdGVyYXRvciBpdDIgPSBwb2ludEluZGljZXMuZmluZChpbmRpY2VzW2krMl0pOwoKICAgICAgICAgICAgICAgIHNpemVfdCBuZXdfdmVydGljZXNfY291bnQgPSAoaXQwID09IHBvaW50SW5kaWNlcy5lbmQoKSA/IDEgOiAwKSArIChpdDEgPT0gcG9pbnRJbmRpY2VzLmVuZCgpID8gMSA6IDApICsgKGl0MiA9PSBwb2ludEluZGljZXMuZW5kKCkgPyAxIDogMCk7CgogICAgICAgICAgICAgICAgYm9vbCBtYXhWZXJ0aWNlc1Blck1lc2hsZXRSZWFjaGVkID0gKHVuaXF1ZV92ZXJ0aWNlc19jb3VudCArIG5ld192ZXJ0aWNlc19jb3VudCkgPiBNRVNITEVUX01BWF9WRVJUSUNFU19DT1VOVCB8fCAocG9pbnRJbmRpY2VzLnNpemUoKSA+IE1FU0hMRVRfTUFYX1ZFUlRJQ0VTX0NPVU5UKTsKICAgICAgICAgICAgICAgIGJvb2wgbWF4SW5kaWNlc1Blck1lc2hsZXRSZWFjaGVkID0gICgobWVzaGxldFNwZWMudHlwZSA9PSBNZXNobGV0VHlwZTo6VHJpYW5nbGVzKSAmJiAobWVzaGxldEluZGljZXMuc2l6ZSgpID4gbWF4aW11bU1lc2hsZXRUcmlhbmdsZUluZGljZXMpKSB8fAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKChtZXNobGV0U3BlYy50eXBlID09IE1lc2hsZXRUeXBlOjpRdWFkcykgJiYgKG1lc2hsZXRJbmRpY2VzLnNpemUoKSA+IG1heGltdW1NZXNobGV0UXVhZEluZGljZXMpKTsKCiAgICAgICAgICAgICAgICBpZiAobWF4VmVydGljZXNQZXJNZXNobGV0UmVhY2hlZCB8fCBtYXhJbmRpY2VzUGVyTWVzaGxldFJlYWNoZWQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgTExPR19UUkMgPDwgKG1heEluZGljZXNQZXJNZXNobGV0UmVhY2hlZCA/IHN0ZDo6c3RyaW5nKCJNYXhpbXVtIG1lc2hsZXQgcG9seXMgcmVhY2hlZCBmb3IgbWVzaCAiKSA6IHN0ZDo6c3RyaW5nKCJNYXhpbXVtIG1lc2hsZXQgdmVydGljZXMgcmVhY2hlZCBmb3IgbWVzaCAiKSkgPDwgbWVzaC5uYW1lOwogICAgICAgICAgICAgICAgICAgIG1lc2hfc3RhcnRfaW5kZXggPSBpOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIC8vIFRoZXNlIGFyZSBwZXIgbWVzaGxldCBsb2NhbCBpbmRpY2VzLiBHdWFyYW50ZWVkIG5vdCB0byBleGNlZWQgdmFsdWUgb2YgMjU1IChieSBkZWZhdWx0IHdlIHVzZSBtYXggMTI4IGVsZW1lbnRzKQogICAgICAgICAgICAgICAgbWVzaGxldEluZGljZXMucHVzaF9iYWNrKHN0ZDo6ZGlzdGFuY2UocG9pbnRJbmRpY2VzLmJlZ2luKCksIGl0MCA9PSBwb2ludEluZGljZXMuZW5kKCkgPyBwb2ludEluZGljZXMuaW5zZXJ0KGluZGljZXNbaV0pLmZpcnN0IDogaXQwKSk7CiAgICAgICAgICAgICAgICBtZXNobGV0SW5kaWNlcy5wdXNoX2JhY2soc3RkOjpkaXN0YW5jZShwb2ludEluZGljZXMuYmVnaW4oKSwgaXQxID09IHBvaW50SW5kaWNlcy5lbmQoKSA/IHBvaW50SW5kaWNlcy5pbnNlcnQoaW5kaWNlc1tpKzFdKS5maXJzdCA6IGl0MSkpOwogICAgICAgICAgICAgICAgbWVzaGxldEluZGljZXMucHVzaF9iYWNrKHN0ZDo6ZGlzdGFuY2UocG9pbnRJbmRpY2VzLmJlZ2luKCksIGl0MiA9PSBwb2ludEluZGljZXMuZW5kKCkgPyBwb2ludEluZGljZXMuaW5zZXJ0KGluZGljZXNbaSsyXSkuZmlyc3QgOiBpdDIpKTsKICAgICAgICAgICAgICAgIG1lc2hsZXRQcmltSW5kaWNlcy5wdXNoX2JhY2soaSAvIDN1KTsKICAgICAgICAgICAgICAgIG1lc2hfc3RhcnRfaW5kZXggKz0gMzsKICAgICAgICAgICAgfQogICAgICAgICAgICBmb3IoYXV0byBwaSA6IHBvaW50SW5kaWNlcykgewogICAgICAgICAgICAgIG1lc2hsZXRWZXJ0aWNlcy5wdXNoX2JhY2socGkpOwogICAgICAgICAgICB9ICAKCiAgICAgICAgICAgIG1lc2hsZXRTcGVjLnZlcnRpY2VzID0gc3RkOjptb3ZlKG1lc2hsZXRWZXJ0aWNlcyk7CiAgICAgICAgICAgIG1lc2hsZXRTcGVjLmluZGljZXMgPSBzdGQ6Om1vdmUobWVzaGxldEluZGljZXMpOwogICAgICAgICAgICBtZXNobGV0U3BlYy5wcmltaXRpdmVJbmRpY2VzID0gc3RkOjptb3ZlKG1lc2hsZXRQcmltSW5kaWNlcyk7CiAgICAgICAgICAgIExMT0dfVFJDIDw8ICJHZW5lcmF0ZWQgbWVzaGxldCBzcGVjICIgPDwgbWVzaGxldFNwZWNzLnNpemUoKSA8PCAiIGZvciBtZXNoIFwiIiA8PCBtZXNoLm5hbWUgPDwgIlwiLiAiIDw8IG1lc2hsZXRTcGVjLnZlcnRpY2VzLnNpemUoKSA8PCAKICAgICAgICAgICAgICAgICIgdmVydGljZXMuICIgPDwgbWVzaGxldFNwZWMuaW5kaWNlcy5zaXplKCkgPDwgIiBpbmRpY2VzLiI7CgoKICAgICAgICAgICAgbWVzaGxldFNwZWNzLnB1c2hfYmFjayhzdGQ6Om1vdmUobWVzaGxldFNwZWMpKTsKICAgICAgICB9CiAgICAgICAgTExPR19EQkcgPDwgIkdlbmVyYXRlZCAiIDw8IG1lc2hsZXRTcGVjcy5zaXplKCkgPDwgIiBtZXNobGV0IHNwZWNzIGZvciBtZXNoIFwiIiA8PCBtZXNoLm5hbWU7CiAgICB9CiAgICAqL2RcAAAAAAAAZFwAAAAAAAABAAAACmNcAAAAAAAAY1wAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAASGsAAAAAAABlXAAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAGNcAAAAAAAAZFwAAAAAAAAAAAAAZFwAAAAAAABoXAAAAAAAAAAAAABoXAAAAAAAAGlcAAAAAAAAAAAAAGlcAAAAAAAAbVwAAAAAAAAAAAAAZFwAAAAAAABkXAAAAAAAAAQAAAAgICAg",
					"AQAAAAAAAAABAAAAY1wAAAAAAABjXAAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAGlcAAAAAAAAalwAAAAAAAAAAAAAalwAAAAAAABrXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaVwAAAAAAABpXAAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGtcAAAAAAAAbVwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAa1wAAAAAAABrXAAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "mp"
					},
					"AgAAAGxcAAAAAAAAbVwAAAAAAAAAAAAAbVwAAAAAAABuXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbFwAAAAAAABsXAAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "Mes"
					},
					"AwAAAG5cAAAAAAAAb1wAAAAAAAAAAAAAb1wAAAAAAABwXAAAAAAAAAAAAABwXAAAAAAAAHFcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAblwAAAAAAABuXAAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"insert_completion",
					{
						"completion": "mpMeshletBuilder",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "mpMeshletBuilder"
					},
					"AgAAAGxcAAAAAAAAbFwAAAAAAAAFAAAAbXBNZXNsXAAAAAAAAHxcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcVwAAAAAAABxXAAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHxcAAAAAAAAfVwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfFwAAAAAAAB8XAAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "&&"
					},
					"AgAAAH1cAAAAAAAAflwAAAAAAAAAAAAAflwAAAAAAAB/XAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfVwAAAAAAAB9XAAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAAH9cAAAAAAAAgFwAAAAAAAAAAAAAgFwAAAAAAACBXAAAAAAAAAAAAACBXAAAAAAAAIJcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAf1wAAAAAAAB/XAAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"insert_completion",
					{
						"completion": "is_set",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "is_set"
					},
					"AgAAAIBcAAAAAAAAgFwAAAAAAAACAAAAaXOAXAAAAAAAAIZcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAglwAAAAAAACCXAAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIZcAAAAAAAAiFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhlwAAAAAAACGXAAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIlcAAAAAAAAilwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiVwAAAAAAACJXAAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAIpcAAAAAAAAjFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAilwAAAAAAACKXAAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAItcAAAAAAAAjFwAAAAAAAAAAAAAjFwAAAAAAACQXAAAAAAAAAAAAACQXAAAAAAAAJFcAAAAAAAAAAAAAJFcAAAAAAAAlVwAAAAAAAAAAAAAjFwAAAAAAACMXAAAAAAAAAQAAAAgICAgjFwAAAAAAACUXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAi1wAAAAAAACLXAAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"paste",
					null,
					"AQAAAJRcAAAAAAAAIl0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlFwAAAAAAACUXAAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"left_delete",
					null,
					"AQAAACFdAAAAAAAAIV0AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAIl0AAAAAAAAiXQAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"right_delete",
					null,
					"AQAAAKVcAAAAAAAApVwAAAAAAAAaAAAAY29uc3QgU2NlbmVCdWlsZGVyOjpNZXNoJiA",
					"AQAAAAAAAAABAAAApVwAAAAAAAC/XAAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					28,
					"right_delete",
					null,
					"HAAAAKtcAAAAAAAAq1wAAAAAAAABAAAAY6tcAAAAAAAAq1wAAAAAAAABAAAAb6tcAAAAAAAAq1wAAAAAAAABAAAAbqtcAAAAAAAAq1wAAAAAAAABAAAAc6tcAAAAAAAAq1wAAAAAAAABAAAAdKtcAAAAAAAAq1wAAAAAAAABAAAAIKtcAAAAAAAAq1wAAAAAAAABAAAAc6tcAAAAAAAAq1wAAAAAAAABAAAAdKtcAAAAAAAAq1wAAAAAAAABAAAAZKtcAAAAAAAAq1wAAAAAAAABAAAAOqtcAAAAAAAAq1wAAAAAAAABAAAAOqtcAAAAAAAAq1wAAAAAAAABAAAAdqtcAAAAAAAAq1wAAAAAAAABAAAAZatcAAAAAAAAq1wAAAAAAAABAAAAY6tcAAAAAAAAq1wAAAAAAAABAAAAdKtcAAAAAAAAq1wAAAAAAAABAAAAb6tcAAAAAAAAq1wAAAAAAAABAAAAcqtcAAAAAAAAq1wAAAAAAAABAAAAPKtcAAAAAAAAq1wAAAAAAAABAAAAdatcAAAAAAAAq1wAAAAAAAABAAAAaatcAAAAAAAAq1wAAAAAAAABAAAAbqtcAAAAAAAAq1wAAAAAAAABAAAAdKtcAAAAAAAAq1wAAAAAAAABAAAAM6tcAAAAAAAAq1wAAAAAAAABAAAAMqtcAAAAAAAAq1wAAAAAAAABAAAAX6tcAAAAAAAAq1wAAAAAAAABAAAAdKtcAAAAAAAAq1wAAAAAAAABAAAAPqtcAAAAAAAAq1wAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAAq1wAAAAAAACrXAAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"right_delete",
					null,
					"AQAAAKtcAAAAAAAAq1wAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAq1wAAAAAAACrXAAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"paste",
					null,
					"AgAAALRcAAAAAAAAwVwAAAAAAAAAAAAAwVwAAAAAAADBXAAAAAAAACgAAABzdGQ6OnZlY3RvcjxTY2VuZUJ1aWxkZXI6Ok1lc2hsZXRTcGVjPiYg",
					"AQAAAAAAAAABAAAAtFwAAAAAAADcXAAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAMFcAAAAAAAAwlwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwVwAAAAAAADBXAAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					1,
					"paste",
					null,
					"AQAAAIdcAAAAAAAAplwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAh1wAAAAAAACHXAAAAAAAAAAAAAAAAPC/"
				],
				[
					171,
					1,
					"left_delete",
					null,
					"AQAAAB1cAAAAAAAAHVwAAAAAAABMAAAAY29uc3QgYm9vbCBnZW5lcmF0ZU1lc2hsZXRzID0gaXNfc2V0KG1GbGFncywgRmxhZ3M6OkdlbmVyYXRlTWVzaGxldHMpOwoKICAgIA",
					"AQAAAAAAAAABAAAAHVwAAAAAAABpXAAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"paste",
					null,
					"AQAAAGdcAAAAAAAAd1wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZ1wAAAAAAABnXAAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": "->"
					},
					"AgAAAHdcAAAAAAAAeFwAAAAAAAAAAAAAeFwAAAAAAAB5XAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAd1wAAAAAAAB3XAAAAAAAAAAAAAAAAPC/"
				],
				[
					186,
					3,
					"left_delete",
					null,
					"AwAAAPVbAAAAAAAA9VsAAAAAAADGAAAAICAgIC8vIEJ1aWxkIG1lc2hsZXRzLiBJZiBuZWVkZWQuLi4KICAgIGlmKG1wTWVzaGxldEJ1aWxkZXIgJiYgaXNfc2V0KG1GbGFncywgRmxhZ3M6OkdlbmVyYXRlTWVzaGxldHMpKSB7CiAgICAgICAgbXBNZXNobGV0QnVpbGRlci0+Z2VuZXJhdGVNZXNobGV0cyhtZXNoLCBpbmRpY2VzLCBwcm9jZXNzZWRNZXNoLm1lc2hsZXRTcGVjcyk7CiAgICB99FsAAAAAAAD0WwAAAAAAAAEAAAAK81sAAAAAAADzWwAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAu1wAAAAAAAD1WwAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAMhhAAAAAAAAyWEAAAAAAAAAAAAAyWEAAAAAAADNYQAAAAAAAAAAAADNYQAAAAAAAM5hAAAAAAAAAAAAAM5hAAAAAAAA0mEAAAAAAAAAAAAAyWEAAAAAAADJYQAAAAAAAAQAAAAgICAg",
					"AQAAAAAAAAABAAAAyGEAAAAAAADIYQAAAAAAAAAAAAAACIlA"
				],
				[
					190,
					1,
					"paste",
					null,
					"AQAAAM5hAAAAAAAAlGIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzmEAAAAAAADOYQAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					4,
					"right_delete",
					null,
					"BAAAAM5hAAAAAAAAzmEAAAAAAAABAAAAIM5hAAAAAAAAzmEAAAAAAAABAAAAIM5hAAAAAAAAzmEAAAAAAAABAAAAIM5hAAAAAAAAzmEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAzmEAAAAAAADOYQAAAAAAAAAAAAAAAPC/"
				],
				[
					201,
					1,
					"paste",
					null,
					"AgAAAF9iAAAAAAAAbGIAAAAAAAAAAAAAbGIAAAAAAABsYgAAAAAAAAQAAABtZXNo",
					"AQAAAAAAAAABAAAAY2IAAAAAAABfYgAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					19,
					"right_delete",
					null,
					"EwAAAG5iAAAAAAAAbmIAAAAAAAAHAAAAaW5kaWNlc25iAAAAAAAAbmIAAAAAAAABAAAALG5iAAAAAAAAbmIAAAAAAAABAAAAIG5iAAAAAAAAbmIAAAAAAAABAAAAcG5iAAAAAAAAbmIAAAAAAAABAAAAcm5iAAAAAAAAbmIAAAAAAAABAAAAb25iAAAAAAAAbmIAAAAAAAABAAAAY25iAAAAAAAAbmIAAAAAAAABAAAAZW5iAAAAAAAAbmIAAAAAAAABAAAAc25iAAAAAAAAbmIAAAAAAAABAAAAc25iAAAAAAAAbmIAAAAAAAABAAAAZW5iAAAAAAAAbmIAAAAAAAABAAAAZG5iAAAAAAAAbmIAAAAAAAABAAAATW5iAAAAAAAAbmIAAAAAAAABAAAAZW5iAAAAAAAAbmIAAAAAAAABAAAAc25iAAAAAAAAbmIAAAAAAAABAAAAaG5iAAAAAAAAbmIAAAAAAAABAAAALm5iAAAAAAAAbmIAAAAAAAABAAAAbW5iAAAAAAAAbmIAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAbmIAAAAAAAB1YgAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					10,
					"right_delete",
					null,
					"CgAAAG5iAAAAAAAAbmIAAAAAAAABAAAAc25iAAAAAAAAbmIAAAAAAAABAAAAaG5iAAAAAAAAbmIAAAAAAAABAAAAbG5iAAAAAAAAbmIAAAAAAAABAAAAZW5iAAAAAAAAbmIAAAAAAAABAAAAdG5iAAAAAAAAbmIAAAAAAAABAAAAU25iAAAAAAAAbmIAAAAAAAABAAAAcG5iAAAAAAAAbmIAAAAAAAABAAAAZW5iAAAAAAAAbmIAAAAAAAABAAAAY25iAAAAAAAAbmIAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAbmIAAAAAAABuYgAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					2,
					"left_delete",
					null,
					"AgAAAG1iAAAAAAAAbWIAAAAAAAABAAAAIGxiAAAAAAAAbGIAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAbmIAAAAAAABuYgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/Falcor/Scene/MeshletBuilder.h",
			"settings":
			{
				"buffer_size": 546,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADkBAAAAAAAAOgEAAAAAAAAAAAAAOgEAAAAAAAA8AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQEAAAAAAAA5AQAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AgAAADkBAAAAAAAAOgEAAAAAAAAAAAAAOwEAAAAAAAA7AQAAAAAAAAIAAAAJCQ",
					"AQAAAAAAAAABAAAAOQEAAAAAAAA5AQAAAAAAAAAAAAAAAFJA"
				],
				[
					9,
					1,
					"insert_completion",
					{
						"completion": "using",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "using"
					},
					"AgAAADkBAAAAAAAAOQEAAAAAAAABAAAAdTkBAAAAAAAAPgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgEAAAAAAAA6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": " U"
					},
					"AgAAAD4BAAAAAAAAPwEAAAAAAAAAAAAAPwEAAAAAAABAAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgEAAAAAAAA+AQAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert_completion",
					{
						"completion": "UniquePtr",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "UniquePtr"
					},
					"AgAAAD8BAAAAAAAAPwEAAAAAAAABAAAAVT8BAAAAAAAASAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAEAAAAAAABAAQAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAEgBAAAAAAAASQEAAAAAAAAAAAAASQEAAAAAAABKAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAEAAAAAAABIAQAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " s"
					},
					"AgAAAEoBAAAAAAAASwEAAAAAAAAAAAAASwEAAAAAAABMAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgEAAAAAAABKAQAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert_completion",
					{
						"completion": "std",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "std"
					},
					"AgAAAEsBAAAAAAAASwEAAAAAAAABAAAAc0sBAAAAAAAATgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAEAAAAAAABMAQAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "::S"
					},
					"AwAAAE4BAAAAAAAATwEAAAAAAAAAAAAATwEAAAAAAABQAQAAAAAAAAAAAABQAQAAAAAAAFEBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgEAAAAAAABOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert_completion",
					{
						"completion": "shared_ptr",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "shared_ptr"
					},
					"AgAAAFABAAAAAAAAUAEAAAAAAAABAAAAU1ABAAAAAAAAWgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQEAAAAAAABRAQAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					10,
					"left_delete",
					null,
					"CgAAAFkBAAAAAAAAWQEAAAAAAAABAAAAclgBAAAAAAAAWAEAAAAAAAABAAAAdFcBAAAAAAAAVwEAAAAAAAABAAAAcFYBAAAAAAAAVgEAAAAAAAABAAAAX1UBAAAAAAAAVQEAAAAAAAABAAAAZFQBAAAAAAAAVAEAAAAAAAABAAAAZVMBAAAAAAAAUwEAAAAAAAABAAAAclIBAAAAAAAAUgEAAAAAAAABAAAAYVEBAAAAAAAAUQEAAAAAAAABAAAAaFABAAAAAAAAUAEAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAWgEAAAAAAABaAQAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "uni"
					},
					"AwAAAFABAAAAAAAAUQEAAAAAAAAAAAAAUQEAAAAAAABSAQAAAAAAAAAAAABSAQAAAAAAAFMBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAEAAAAAAABQAQAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert_completion",
					{
						"completion": "unique_ptr",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "unique_ptr"
					},
					"AgAAAFABAAAAAAAAUAEAAAAAAAADAAAAdW5pUAEAAAAAAABaAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwEAAAAAAABTAQAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "<M"
					},
					"AgAAAFoBAAAAAAAAWwEAAAAAAAAAAAAAWwEAAAAAAABcAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWgEAAAAAAABaAQAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert_completion",
					{
						"completion": "MeshletBuilder",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "MeshletBuilder"
					},
					"AgAAAFsBAAAAAAAAWwEAAAAAAAABAAAATVsBAAAAAAAAaQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAEAAAAAAABcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAAGkBAAAAAAAAagEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQEAAAAAAABpAQAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGoBAAAAAAAAawEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagEAAAAAAABqAQAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"right_delete",
					null,
					"AQAAAAQBAAAAAAAABAEAAAAAAAA1AAAAdXNpbmcgU2hhcmVkUHRyID0gc3RkOjpzaGFyZWRfcHRyPE1lc2hsZXRCdWlsZGVyPjsKCQk",
					"AQAAAAAAAAABAAAABAEAAAAAAAA5AQAAAAAAAAAAAAAAAFJA"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "Unic"
					},
					"BAAAAEEBAAAAAAAAQgEAAAAAAAAAAAAAQgEAAAAAAABDAQAAAAAAAAAAAABDAQAAAAAAAEQBAAAAAAAAAAAAAEQBAAAAAAAARQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQEAAAAAAABBAQAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"left_delete",
					null,
					"AQAAAEQBAAAAAAAARAEAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAARQEAAAAAAABFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "w"
					},
					"AQAAAEQBAAAAAAAARQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAEAAAAAAABEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"left_delete",
					null,
					"AQAAAEQBAAAAAAAARAEAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAARQEAAAAAAABFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "que"
					},
					"AwAAAEQBAAAAAAAARQEAAAAAAAAAAAAARQEAAAAAAABGAQAAAAAAAAAAAABGAQAAAAAAAEcBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAEAAAAAAABEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					6,
					"right_delete",
					null,
					"BgAAAEcBAAAAAAAARwEAAAAAAAABAAAAU0cBAAAAAAAARwEAAAAAAAABAAAAaEcBAAAAAAAARwEAAAAAAAABAAAAYUcBAAAAAAAARwEAAAAAAAABAAAAckcBAAAAAAAARwEAAAAAAAABAAAAZUcBAAAAAAAARwEAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAARwEAAAAAAABHAQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					2,
					"left_delete",
					null,
					"AgAAAPMBAAAAAAAA8wEAAAAAAAAVAAAACgljb25zdCBGbGFncyBtRmxhZ3M78gEAAAAAAADyAQAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAACAIAAAAAAADzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAPIBAAAAAAAA8wEAAAAAAAAAAAAA8wEAAAAAAAD1AQAAAAAAAAAAAAD1AQAAAAAAAPYBAAAAAAAAAAAAAPYBAAAAAAAA+AEAAAAAAAAAAAAA8wEAAAAAAADzAQAAAAAAAAIAAAAJCQ",
					"AQAAAAAAAAABAAAA8gEAAAAAAADyAQAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"paste",
					null,
					"AQAAAPYBAAAAAAAAHgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9gEAAAAAAAD2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					6,
					"left_delete",
					null,
					"BgAAABcCAAAAAAAAFwIAAAAAAAABAAAAbxYCAAAAAAAAFgIAAAAAAAABAAAAZRUCAAAAAAAAFQIAAAAAAAABAAAARxQCAAAAAAAAFAIAAAAAAAABAAAAZBMCAAAAAAAAEwIAAAAAAAABAAAAZBICAAAAAAAAEgIAAAAAAAABAAAAQQ",
					"AQAAAAAAAAABAAAAGAIAAAAAAAAYAgAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "void"
					},
					"BQAAAFgBAAAAAAAAWQEAAAAAAAAAAAAAWQEAAAAAAABZAQAAAAAAAAgAAAB1aW50MzJfdFkBAAAAAAAAWgEAAAAAAAAAAAAAWgEAAAAAAABbAQAAAAAAAAAAAABbAQAAAAAAAFwBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAEAAAAAAABgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BQAAAJcBAAAAAAAAmAEAAAAAAAAAAAAAmAEAAAAAAACZAQAAAAAAAAAAAACZAQAAAAAAAJoBAAAAAAAAAAAAAJoBAAAAAAAAmwEAAAAAAAAAAAAAmwEAAAAAAACcAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwEAAAAAAACXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJwBAAAAAAAAnQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAEAAAAAAACcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"paste",
					null,
					"AQAAAJ0BAAAAAAAAugEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnQEAAAAAAACdAQAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAALoBAAAAAAAAuwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugEAAAAAAAC6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALsBAAAAAAAAvAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwEAAAAAAAC7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAALIBAAAAAAAAswEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgEAAAAAAACyAQAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "Mas"
					},
					"BAAAAIIBAAAAAAAAgwEAAAAAAAAAAAAAgwEAAAAAAACDAQAAAAAAAA0AAABQcm9jZXNzZWRNZXNogwEAAAAAAACEAQAAAAAAAAAAAACEAQAAAAAAAIUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwEAAAAAAACCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					2,
					"left_delete",
					null,
					"AgAAAIQBAAAAAAAAhAEAAAAAAAABAAAAc4MBAAAAAAAAgwEAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAhQEAAAAAAACFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "esh"
					},
					"AwAAAIMBAAAAAAAAhAEAAAAAAAAAAAAAhAEAAAAAAACFAQAAAAAAAAAAAACFAQAAAAAAAIYBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgwEAAAAAAACDAQAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "Procre"
					},
					"BgAAAIIBAAAAAAAAgwEAAAAAAAAAAAAAgwEAAAAAAACEAQAAAAAAAAAAAACEAQAAAAAAAIUBAAAAAAAAAAAAAIUBAAAAAAAAhgEAAAAAAAAAAAAAhgEAAAAAAACHAQAAAAAAAAAAAACHAQAAAAAAAIgBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggEAAAAAAACCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					2,
					"left_delete",
					null,
					"AgAAAIcBAAAAAAAAhwEAAAAAAAABAAAAZYYBAAAAAAAAhgEAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAiAEAAAAAAACIAQAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "essed"
					},
					"BQAAAIYBAAAAAAAAhwEAAAAAAAAAAAAAhwEAAAAAAACIAQAAAAAAAAAAAACIAQAAAAAAAIkBAAAAAAAAAAAAAIkBAAAAAAAAigEAAAAAAAAAAAAAigEAAAAAAACLAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgEAAAAAAACGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					6,
					"left_delete",
					null,
					"BgAAAHMBAAAAAAAAcwEAAAAAAAABAAAAIHIBAAAAAAAAcgEAAAAAAAABAAAAdHEBAAAAAAAAcQEAAAAAAAABAAAAc3ABAAAAAAAAcAEAAAAAAAABAAAAbm8BAAAAAAAAbwEAAAAAAAABAAAAb24BAAAAAAAAbgEAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAdAEAAAAAAAB0AQAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					51,
					"right_delete",
					null,
					"MwAAAI8BAAAAAAAAjwEAAAAAAAABAAAALI8BAAAAAAAAjwEAAAAAAAABAAAAII8BAAAAAAAAjwEAAAAAAAABAAAAY48BAAAAAAAAjwEAAAAAAAABAAAAb48BAAAAAAAAjwEAAAAAAAABAAAAbo8BAAAAAAAAjwEAAAAAAAABAAAAc48BAAAAAAAAjwEAAAAAAAABAAAAdI8BAAAAAAAAjwEAAAAAAAABAAAAII8BAAAAAAAAjwEAAAAAAAABAAAAc48BAAAAAAAAjwEAAAAAAAABAAAAdI8BAAAAAAAAjwEAAAAAAAABAAAAZI8BAAAAAAAAjwEAAAAAAAABAAAAOo8BAAAAAAAAjwEAAAAAAAABAAAAOo8BAAAAAAAAjwEAAAAAAAABAAAAdo8BAAAAAAAAjwEAAAAAAAABAAAAZY8BAAAAAAAAjwEAAAAAAAABAAAAY48BAAAAAAAAjwEAAAAAAAABAAAAdI8BAAAAAAAAjwEAAAAAAAABAAAAb48BAAAAAAAAjwEAAAAAAAABAAAAco8BAAAAAAAAjwEAAAAAAAABAAAAPI8BAAAAAAAAjwEAAAAAAAABAAAAdY8BAAAAAAAAjwEAAAAAAAABAAAAaY8BAAAAAAAAjwEAAAAAAAABAAAAbo8BAAAAAAAAjwEAAAAAAAABAAAAdI8BAAAAAAAAjwEAAAAAAAABAAAAM48BAAAAAAAAjwEAAAAAAAABAAAAMo8BAAAAAAAAjwEAAAAAAAABAAAAX48BAAAAAAAAjwEAAAAAAAABAAAAdI8BAAAAAAAAjwEAAAAAAAABAAAAPo8BAAAAAAAAjwEAAAAAAAABAAAAJo8BAAAAAAAAjwEAAAAAAAABAAAAII8BAAAAAAAAjwEAAAAAAAABAAAAaY8BAAAAAAAAjwEAAAAAAAABAAAAbo8BAAAAAAAAjwEAAAAAAAABAAAAZI8BAAAAAAAAjwEAAAAAAAABAAAAaY8BAAAAAAAAjwEAAAAAAAABAAAAY48BAAAAAAAAjwEAAAAAAAABAAAAZY8BAAAAAAAAjwEAAAAAAAABAAAAc48BAAAAAAAAjwEAAAAAAAABAAAALI8BAAAAAAAAjwEAAAAAAAABAAAAII8BAAAAAAAAjwEAAAAAAAABAAAAc48BAAAAAAAAjwEAAAAAAAABAAAAdI8BAAAAAAAAjwEAAAAAAAABAAAAZI8BAAAAAAAAjwEAAAAAAAABAAAAOo8BAAAAAAAAjwEAAAAAAAABAAAAOo8BAAAAAAAAjwEAAAAAAAABAAAAdo8BAAAAAAAAjwEAAAAAAAABAAAAZY8BAAAAAAAAjwEAAAAAAAABAAAAY48BAAAAAAAAjwEAAAAAAAABAAAAdI8BAAAAAAAAjwEAAAAAAAABAAAAb48BAAAAAAAAjwEAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAjwEAAAAAAACPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					38,
					"right_delete",
					null,
					"JgAAAI8BAAAAAAAAjwEAAAAAAAABAAAAPI8BAAAAAAAAjwEAAAAAAAABAAAAU48BAAAAAAAAjwEAAAAAAAABAAAAY48BAAAAAAAAjwEAAAAAAAABAAAAZY8BAAAAAAAAjwEAAAAAAAABAAAAbo8BAAAAAAAAjwEAAAAAAAABAAAAZY8BAAAAAAAAjwEAAAAAAAABAAAAQo8BAAAAAAAAjwEAAAAAAAABAAAAdY8BAAAAAAAAjwEAAAAAAAABAAAAaY8BAAAAAAAAjwEAAAAAAAABAAAAbI8BAAAAAAAAjwEAAAAAAAABAAAAZI8BAAAAAAAAjwEAAAAAAAABAAAAZY8BAAAAAAAAjwEAAAAAAAABAAAAco8BAAAAAAAAjwEAAAAAAAABAAAAOo8BAAAAAAAAjwEAAAAAAAABAAAAOo8BAAAAAAAAjwEAAAAAAAABAAAATY8BAAAAAAAAjwEAAAAAAAABAAAAZY8BAAAAAAAAjwEAAAAAAAABAAAAc48BAAAAAAAAjwEAAAAAAAABAAAAaI8BAAAAAAAAjwEAAAAAAAABAAAAbI8BAAAAAAAAjwEAAAAAAAABAAAAZY8BAAAAAAAAjwEAAAAAAAABAAAAdI8BAAAAAAAAjwEAAAAAAAABAAAAU48BAAAAAAAAjwEAAAAAAAABAAAAcI8BAAAAAAAAjwEAAAAAAAABAAAAZY8BAAAAAAAAjwEAAAAAAAABAAAAY48BAAAAAAAAjwEAAAAAAAABAAAAPo8BAAAAAAAAjwEAAAAAAAABAAAAJo8BAAAAAAAAjwEAAAAAAAABAAAAII8BAAAAAAAAjwEAAAAAAAABAAAAbY8BAAAAAAAAjwEAAAAAAAABAAAAZY8BAAAAAAAAjwEAAAAAAAABAAAAc48BAAAAAAAAjwEAAAAAAAABAAAAaI8BAAAAAAAAjwEAAAAAAAABAAAAbI8BAAAAAAAAjwEAAAAAAAABAAAAZY8BAAAAAAAAjwEAAAAAAAABAAAAdI8BAAAAAAAAjwEAAAAAAAABAAAAU48BAAAAAAAAjwEAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAjwEAAAAAAACPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					3,
					"right_delete",
					null,
					"AwAAAI8BAAAAAAAAjwEAAAAAAAABAAAAZY8BAAAAAAAAjwEAAAAAAAABAAAAY48BAAAAAAAAjwEAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAjwEAAAAAAACPAQAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: List Packages"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 320.0,
		"history":
		[
			"cd /home/max/dev"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/mnt/misc_hdd/dev/Lava",
		"/mnt/misc_hdd/dev/Lava/src",
		"/mnt/misc_hdd/dev/Lava/src/Falcor",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Scene",
		"/mnt/misc_hdd/dev/Lava/src/lava_lib",
		"/mnt/misc_hdd/dev/Lava/src/lava_lib/reader_lsd"
	],
	"file_history":
	[
		"/mnt/misc_hdd/dev/Lava_Tester/barrier/static/vendors/mdi/css/materialdesignicons.min.css",
		"/mnt/misc_hdd/dev/Lava_Tester/barrier/account/signals.py",
		"/mnt/misc_hdd/dev/Lava_Tester/barrier/accounts/admin.py",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/TexLODTypes.cpp",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Scene/Material/ShadingUtils.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/StandardMaterialInstance.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/StandardMaterial.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/BxDF.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/IBSDF.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Rendering/RTXDI/RTXDIApplicationBridge.slangh",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/AmbientOcclusionPass/AmbientOcclusionPass.raytrace.cs.slang",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/DeferredLightingCachedPass/DeferredLightingCachedPass.direct.cs.slang",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/DeferredLightingCachedPass/DeferredLightingCachedPass.indirect.cs.slang",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/DeferredLightingPass/DeferredLightingPass.cached.cs.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Scene/Material/StandardMaterial.cpp",
		"/mnt/misc_hdd/dev/Lava/src/houdini/otls/lava/Driver_1lava/DialogScript",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/GBuffer/VBuffer/VBufferRT.slang",
		"/mnt/misc_hdd/dev/Lava/slang.sublime-syntax",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/GBuffer/VBuffer/VBufferSW.builder.cs.slang",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/GBuffer/VBuffer/VBufferSW.rasterizer.cs.slang",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/GBuffer/VBuffer/VBufferSW.rasterizer.cs.slang.old2",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/GBuffer/VBuffer/VBufferSW.rasterizer.cs.slang.old",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/GBuffer/VBuffer/VBufferSW.Meshlet.slangh",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/GBuffer/VBuffer/VBufferSW.slang",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/DebugShadingPass/DebugShadingPass.cpp",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/DebugShadingPass/DebugShadingPass.h",
		"/mnt/misc_hdd/dev/Lava/src/gfx_lib/slang-gfx.h",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Core/API/GFX/GFXComputeContext.cpp",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/GBuffer/VBuffer/VBufferSW.cpp",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Scene/SceneDefines.slangh",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/GBuffer/VBuffer/VBufferSW.h",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Scene/Material/MaterialSystem.slang",
		"/mnt/misc_hdd/dev/Lava/src/gfx_lib/vulkan/vk-command-encoder.cpp",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Core/API/GFX/GFXCopyContext.cpp",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Utils/Image/TextureManager.cpp",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Scene/Material/TextureHandle.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Utils/Image/TextureManager.h",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/DebugShadingPass/DebugShadingPass.cs.slang",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/DeferredLightingPass/DeferredLightingPass.cs.slang.old",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/DeferredLightingPass/DeferredLightingPass.nocache.cs.slang",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/EdgeDetectPass/EdgeDetect.cs.slang",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/EdgeDetectPass/EdgeDetect.lowpass.cs.slang",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/ForwardLightingPass/ForwardLightingPass.3d.slang",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/GBuffer/GBuffer/GBufferRT.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/BSDFIntegrator.cpp",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/LayeredBSDF.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Scene/Material/BasicMaterial.h",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Scene/Material/MaterialTypeRegistry.cpp",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Scene/Material/MaterialTypes.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Scene/Material/MaterialTypeRegistry.h",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/NDF.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/BSDFs/BeerBTDF.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/BSDFs/DielectricPlateBSDF.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/BSDFs/DiffuseSpecularBRDF.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/BSDFs/DisneyDiffuseBRDF.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/BSDFs/FrostbiteDiffuseBRDF.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/ClothBRDF.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/HairMaterial.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/BSDFs/StandardBSDF.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/BSDFs/SpecularMicrofacet.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/BSDFs/SimpleBTDF.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Scene/Material/BasicMaterial.cpp",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Scene/RaytracingInline.slang",
		"/mnt/misc_hdd/dev/Lava/src/houdini/soho/python/LSDlava.py",
		"/mnt/misc_hdd/dev/Lava/third_party/external/slang/src/Slang/tests/slang-extension/atomic-min-max-u64-byte-address-buffer.slang",
		"/mnt/misc_hdd/dev/Lava/third_party/external/slang/src/Slang/source/slang/hlsl.meta.slang",
		"/mnt/misc_hdd/dev/Lava/third_party/external/slang/src/Slang/tests/bugs/vk-image-atomics.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Scene/HitInfo.cpp",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/AccumulatePass/Accumulate.SeparableFilter.cs.slang",
		"/mnt/misc_hdd/dev/Lava/third_party/mikktspace/mikktspace.h",
		"/mnt/misc_hdd/dev/Lava/third_party/mikktspace/mikktspace.c",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Scene/Material/TextureSampler.slang",
		"/mnt/misc_hdd/dev/Lava/third_party/external/slang/src/Slang/tests/compute/byte-address-buffer.slang",
		"/mnt/misc_hdd/dev/Lava/third_party/external/slang/src/Slang/tests/pipeline/ray-tracing/ray-query-subroutine.slang",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/RTXDIPass/FinalShading.cs.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Scene/Material/TextureUtils.slang",
		"/mnt/misc_hdd/dev/Lava/third_party/external/slang/src/Slang/docs/stdlib-doc.md",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/LobeType.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/TexLODTypes.slang",
		"/mnt/misc_hdd/dev/Lava/third_party/external/slang/src/Slang/external/glslang/SPIRV/SpvBuilder.cpp",
		"/mnt/misc_hdd/dev/Lava/third_party/external/slang/src/Slang/external/glslang/SPIRV/GlslangToSpv.cpp",
		"/mnt/misc_hdd/dev/Lava/third_party/external/slang/src/Slang/external/glext.h",
		"/mnt/misc_hdd/dev/Lava/third_party/external/slang/src/Slang/external/glslang/glslang/MachineIndependent/intermOut.cpp",
		"/mnt/misc_hdd/dev/Lava/third_party/external/slang/src/Slang/external/glslang/Test/spv.1.4.sparseTexture.frag",
		"/mnt/misc_hdd/dev/Lava/third_party/external/slang/src/Slang/tests/compute/dynamic-dispatch-16.slang",
		"/mnt/misc_hdd/dev/Lava/third_party/external/slang/src/Slang/external/glslang/glslang/MachineIndependent/Initialize.cpp",
		"/mnt/misc_hdd/dev/Lava/third_party/external/slang/src/Slang/tests/hlsl-intrinsic/texture/gather-texture2darray.slang",
		"/mnt/misc_hdd/dev/Lava/third_party/external/slang/src/Slang/tests/hlsl-intrinsic/texture/gather-texture2darray.slang.hlsl",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Scene/SDFs/SparseBrickSet/SDFSBS.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/IMaterial.slang",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/PathTracer/StaticParams.slang",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/DeferredLightingPass/DeferredLightingPass.cs.slang",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/PathTracer/ResolvePass.cs.slang",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/PathTracer/GeneratePaths.cs.slang",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/PathTracer/LoadShadingData.slang",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/PathTracer/NRDHelpers.slang",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/PathTracer/PathState.slang",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/PathTracer/GuideData.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Scene/Material/MaterialSystem.cpp",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Scene/Material/MaterialSystem.h",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/PathTracer/PathTracer.cpp",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/PathTracer/PathTracerNRD.slang",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/PathTracer/PathTracer.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/RenderPasses/Shared/Denoising/NRDHelpers.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/Microfacet.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Scene/Material/MaterialFactory.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/TexLODHelpers.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/ClothMaterial.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/ClothMaterialInstance.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/HairChiang16.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/HairMaterialInstance.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/IMaterialInstance.slang",
		"/mnt/misc_hdd/dev/Lava/third_party/mikktspace/README.md",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/DeferredLightingPass/DeferredLightingPass.cs.slang.old3",
		"/mnt/misc_hdd/dev/Lava/src/RenderPasses/DeferredLightingPass/DeferredLightingPass.cs.slang.old2",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/BSDFs/SheenBSDF.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/BSDFs/OrenNayarBRDF.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/BSDFs/LambertDiffuseBTDF.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Experimental/Scene/Materials/BSDFs/LambertDiffuseBRDF.slang",
		"/mnt/misc_hdd/dev/Lava/third_party/CMakeLists.txt",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Utils/Image/LTX_Bitmap.cpp",
		"/mnt/misc_hdd/dev/Lava/third_party/external/openimageio/src/OpenImageIO/src/cmake/compiler.cmake",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Scene/MaterialX/MxSocket.cpp",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Core/Framework.h",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Utils/Algorithm/BitonicSort.cs.slang",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Utils/Algorithm/BitonicSort.cpp",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Core/API/GFX/GFXDevice.cpp",
		"/mnt/misc_hdd/dev/Lava/src/Falcor/Core/API/Buffer.h"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 125.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/Falcor/Scene/MeshletBuilder.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3732,
						"regions":
						{
						},
						"selection":
						[
							[
								245,
								245
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 108.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/lava_lib/reader_lsd/grammar_lsd.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 33319,
						"regions":
						{
						},
						"selection":
						[
							[
								28996,
								28996
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 763.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/lava_lib/reader_lsd/visitor.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4780,
						"regions":
						{
						},
						"selection":
						[
							[
								3735,
								3735
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1620.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/lava_lib/reader_lsd/visitor_echo.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7754,
						"regions":
						{
						},
						"selection":
						[
							[
								6506,
								6506
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3510.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/lava_lib/reader_lsd/session.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6395,
						"regions":
						{
						},
						"selection":
						[
							[
								2885,
								2885
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 233.0,
						"translation.y": 918.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/lava_lib/reader_lsd/session.cpp",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 54910,
						"regions":
						{
						},
						"selection":
						[
							[
								36872,
								36878
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 17058.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/lava_lib/reader_lsd/visitor.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8037,
						"regions":
						{
						},
						"selection":
						[
							[
								6887,
								6887
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3702.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/Falcor/Scene/SceneBuilder.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38415,
						"regions":
						{
						},
						"selection":
						[
							[
								16705,
								16714
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4873.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/Falcor/Scene/SceneBuilder.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 120993,
						"regions":
						{
						},
						"selection":
						[
							[
								25196,
								25196
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9486.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src/Falcor/Scene/MeshletBuilder.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 546,
						"regions":
						{
						},
						"selection":
						[
							[
								366,
								401
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 43.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 33.0
	},
	"pinned_build_system": "Packages/Makefile/Make.sublime-build",
	"project": "falcor.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"src/lava_lib/reader_lsd/grammar_lsd.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 295.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
