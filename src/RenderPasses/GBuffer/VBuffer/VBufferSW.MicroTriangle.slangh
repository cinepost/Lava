#pragma once
#include "Utils/HostDeviceShared.slangh"

BEGIN_NAMESPACE_FALCOR

enum class MicroTriangleFlags : uint8_t {
    None = 0x0,
    Subdividable = 0x1,
};

// 96 bytes :((
struct MicroTriangle {
    // corner world positions
    float3 pw0;
    float3 pw1;
    float3 pw2;
    
    // corner world normals
    float3 nw0;
    float3 nw1;
    float3 nw2;
    
    // corner points barycentrics
    float16_t2 b0;
    float16_t2 b1;
    float16_t2 b2;

    // edges info
    float16_t3 esl; // edges squared length in pixel size

    // misc
    uint8_t lod;
    uint8_t flags;

#ifndef HOST_CODE
    __init() {
        this.lod = 0;
        this.flags = 0;
        this.esl = {0., 0., 0.};
    }
#endif

    bool isSubdividable() CONST_FUNCTION {
        return ((uint)flags & (uint)MicroTriangleFlags::Subdividable) != 0;
    }

};

END_NAMESPACE_FALCOR