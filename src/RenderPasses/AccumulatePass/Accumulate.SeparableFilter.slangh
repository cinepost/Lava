/***************************************************************************
 # Copyright (c) 2015-21, NVIDIA CORPORATION. All rights reserved.
 #
 # Redistribution and use in source and binary forms, with or without
 # modification, are permitted provided that the following conditions
 # are met:
 #  * Redistributions of source code must retain the above copyright
 #    notice, this list of conditions and the following disclaimer.
 #  * Redistributions in binary form must reproduce the above copyright
 #    notice, this list of conditions and the following disclaimer in the
 #    documentation and/or other materials provided with the distribution.
 #  * Neither the name of NVIDIA CORPORATION nor the names of its
 #    contributors may be used to endorse or promote products derived
 #    from this software without specific prior written permission.
 #
 # THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS "AS IS" AND ANY
 # EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 # IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 # PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 # CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 # EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 # PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 # PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 # OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 # (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 # OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 **************************************************************************/
#pragma once
#include "Utils/HostDeviceShared.slangh"

BEGIN_NAMESPACE_FALCOR

#define SF_TYPE_POINT    0
#define SF_TYPE_BOX      1
#define SF_TYPE_GAUSSIAN 2
#define SF_TYPE_BLACKMAN 3
#define SF_TYPE_MITCHELL 4

#define SF_TYPE_CATROM   5
#define SF_TYPE_TRIANGLE 6
#define SF_TYPE_SINC     7
#define SF_TYPE_CLOSEST  8
#define SF_TYPE_FARTHEST 9

#define SF_TYPE_MIN      10
#define SF_TYPE_MAX      11
#define SF_TYPE_ADDITIVE 12


/** This enum is shared between CPU/GPU.
    It enumerates the different accumulation pass sample filter types that are available.
*/
enum class PixelFilterType
// TODO: Remove the ifdefs and the include when Slang supports enum type specifiers.
#ifdef HOST_CODE
    : uint32_t
#endif
{
    Point       = SF_TYPE_POINT,
    Box         = SF_TYPE_BOX,
    Gaussian    = SF_TYPE_GAUSSIAN,
    Blackman    = SF_TYPE_BLACKMAN,
    Mitchell    = SF_TYPE_MITCHELL,
    Catmullrom  = SF_TYPE_CATROM,
    Triangle    = SF_TYPE_TRIANGLE,
    Sinc        = SF_TYPE_SINC,
    Closest     = SF_TYPE_CLOSEST,
    Farthest    = SF_TYPE_FARTHEST,
    Min         = SF_TYPE_MIN,
    Max         = SF_TYPE_MAX,
    Additive    = SF_TYPE_ADDITIVE,

    None        = 0xff,
};

END_NAMESPACE_FALCOR
